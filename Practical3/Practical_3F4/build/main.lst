ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.generate_mandelbrot_checksum_float,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	generate_mandelbrot_checksum_float:
  27              	.LVL0:
  28              	.LFB140:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdio.h>
  25:Core/Src/main.c **** #include <stdint.h>
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 2


  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** //TODO: Define variables you think you might need
  48:Core/Src/main.c **** // - Performance timing variables (e.g execution time, throughput, pixels per second, clock cycles)
  49:Core/Src/main.c **** /* Task 5: FPU Impact Analysis - compare float vs double, FPU enabled vs disabled */
  50:Core/Src/main.c **** static const uint32_t kMaxIter = 100u;
  51:Core/Src/main.c **** static const uint32_t kNumResolutions = 5;
  52:Core/Src/main.c **** static const uint16_t kWidths[5]  = {128, 160, 192, 224, 256};  /* Practical 1B sizes */
  53:Core/Src/main.c **** static const uint16_t kHeights[5] = {128, 160, 192, 224, 256};
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Memory management for large images */
  56:Core/Src/main.c **** #define MAX_TILE_SIZE 256  /* Maximum tile size that fits in available SRAM */
  57:Core/Src/main.c **** #define TILE_OVERLAP 0     /* No overlap needed for Mandelbrot calculation */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Live Expressions: current benchmark metrics */
  60:Core/Src/main.c **** volatile uint32_t g_current_width = 0u;
  61:Core/Src/main.c **** volatile uint32_t g_current_height = 0u;
  62:Core/Src/main.c **** volatile uint32_t g_current_cycles = 0u;
  63:Core/Src/main.c **** volatile uint32_t g_current_checksum = 0u;
  64:Core/Src/main.c **** volatile double g_current_execution_time = 0.0;
  65:Core/Src/main.c **** volatile double g_current_throughput = 0.0;
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* Task 5: FPU Impact Analysis Results */
  68:Core/Src/main.c **** /* Float precision results */
  69:Core/Src/main.c **** volatile uint32_t checksum_float[5] = {0u, 0u, 0u, 0u, 0u};
  70:Core/Src/main.c **** volatile double execution_time_ms_float[5] = {0.0, 0.0, 0.0, 0.0, 0.0};
  71:Core/Src/main.c **** volatile uint32_t cpu_cycles_float[5] = {0u, 0u, 0u, 0u, 0u};
  72:Core/Src/main.c **** volatile double throughput_pps_float[5] = {0.0, 0.0, 0.0, 0.0, 0.0};
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /* Double precision results */
  75:Core/Src/main.c **** volatile uint32_t checksum_double[5] = {0u, 0u, 0u, 0u, 0u};
  76:Core/Src/main.c **** volatile double execution_time_ms_double[5] = {0.0, 0.0, 0.0, 0.0, 0.0};
  77:Core/Src/main.c **** volatile uint32_t cpu_cycles_double[5] = {0u, 0u, 0u, 0u, 0u};
  78:Core/Src/main.c **** volatile double throughput_pps_double[5] = {0.0, 0.0, 0.0, 0.0, 0.0};
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** /* Accuracy comparison */
  81:Core/Src/main.c **** volatile double accuracy_diff_percent[5] = {0.0, 0.0, 0.0, 0.0, 0.0};
  82:Core/Src/main.c **** volatile double speedup_factor[5] = {0.0, 0.0, 0.0, 0.0, 0.0};
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** /* Current test configuration */
  85:Core/Src/main.c **** volatile uint32_t g_current_test_mode = 0u; /* 0=float, 1=double */
  86:Core/Src/main.c **** volatile uint32_t g_fpu_enabled = 1u; /* 1=FPU enabled, 0=FPU disabled */
  87:Core/Src/main.c **** 
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 3


  88:Core/Src/main.c **** /* USER CODE END PV */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  91:Core/Src/main.c **** void SystemClock_Config(void);
  92:Core/Src/main.c **** static void MX_GPIO_Init(void);
  93:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  94:Core/Src/main.c **** //TODO: Define any function prototypes you might need such as the calculate Mandelbrot function amo
  95:Core/Src/main.c **** static uint32_t generate_mandelbrot_checksum_float(uint16_t width, uint16_t height, uint32_t max_it
  96:Core/Src/main.c **** static uint32_t generate_mandelbrot_checksum_double(uint16_t width, uint16_t height, uint32_t max_i
  97:Core/Src/main.c **** static void dwt_cycle_counter_init(void);
  98:Core/Src/main.c **** static inline uint32_t dwt_get_cycles(void);
  99:Core/Src/main.c **** static void log_fpu_benchmark(uint16_t width, uint16_t height, uint32_t cycles, uint32_t checksum, 
 100:Core/Src/main.c **** static void log_fpu_comparison(uint16_t width, uint16_t height, uint32_t checksum_float, uint32_t c
 101:Core/Src/main.c **** int __io_putchar(int ch);
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** /* USER CODE END PFP */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 106:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c **** /* USER CODE END 0 */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c **** /**
 111:Core/Src/main.c ****   * @brief  The application entry point.
 112:Core/Src/main.c ****   * @retval int
 113:Core/Src/main.c ****   */
 114:Core/Src/main.c **** int main(void)
 115:Core/Src/main.c **** {
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* USER CODE END 1 */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 124:Core/Src/main.c ****   HAL_Init();
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* USER CODE END Init */
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /* Configure the system clock */
 131:Core/Src/main.c ****   SystemClock_Config();
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* USER CODE END SysInit */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   /* Initialize all configured peripherals */
 138:Core/Src/main.c ****   MX_GPIO_Init();
 139:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 140:Core/Src/main.c ****   dwt_cycle_counter_init();
 141:Core/Src/main.c ****   printf("\r\nEEE3096S Practical 3 - STM32F4 Mandelbrot Benchmark\r\n");
 142:Core/Src/main.c ****   printf("SYSCLK: %lu Hz\r\n", SystemCoreClock);
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /* USER CODE END 2 */
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 4


 145:Core/Src/main.c **** 
 146:Core/Src/main.c ****   /* Infinite loop */
 147:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 148:Core/Src/main.c ****   while (1)
 149:Core/Src/main.c ****   {
 150:Core/Src/main.c ****     /* USER CODE END WHILE */
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 153:Core/Src/main.c ****       /* Visual indicator: LED0 ON */
 154:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****       /* Task 5: FPU Impact Analysis - Test both float and double precision */
 157:Core/Src/main.c ****       
 158:Core/Src/main.c ****       /* Test 1: Float precision */
 159:Core/Src/main.c ****       g_current_test_mode = 0u; /* float */
 160:Core/Src/main.c ****       printf("\r\n=== FPU Impact Analysis: FLOAT PRECISION ===\r\n");
 161:Core/Src/main.c ****       for (uint32_t size_index = 0; size_index < kNumResolutions; ++size_index)
 162:Core/Src/main.c ****       {
 163:Core/Src/main.c ****         uint16_t w = kWidths[size_index];
 164:Core/Src/main.c ****         uint16_t h = kHeights[size_index];
 165:Core/Src/main.c ****         g_current_width = (uint32_t)w;
 166:Core/Src/main.c ****         g_current_height = (uint32_t)h;
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****         DWT->CYCCNT = 0; // reset cycle counter
 169:Core/Src/main.c ****         uint32_t start_cycles = dwt_get_cycles();
 170:Core/Src/main.c ****         uint32_t result_checksum = generate_mandelbrot_checksum_float(w, h, kMaxIter);
 171:Core/Src/main.c ****         uint32_t end_cycles = dwt_get_cycles();
 172:Core/Src/main.c ****         uint32_t elapsed_cycles = end_cycles - start_cycles;
 173:Core/Src/main.c ****         double elapsed_seconds = (double)elapsed_cycles / (double)SystemCoreClock;
 174:Core/Src/main.c ****         double total_pixels = (double)w * (double)h;
 175:Core/Src/main.c ****         double throughput = total_pixels / elapsed_seconds;
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****         /* Update Live Expressions */
 178:Core/Src/main.c ****         g_current_cycles = elapsed_cycles;
 179:Core/Src/main.c ****         g_current_checksum = result_checksum;
 180:Core/Src/main.c ****         g_current_execution_time = elapsed_seconds * 1000.0;
 181:Core/Src/main.c ****         g_current_throughput = throughput;
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****         /* Store float results */
 184:Core/Src/main.c ****         checksum_float[size_index] = result_checksum;
 185:Core/Src/main.c ****         execution_time_ms_float[size_index] = elapsed_seconds * 1000.0;
 186:Core/Src/main.c ****         cpu_cycles_float[size_index] = elapsed_cycles;
 187:Core/Src/main.c ****         throughput_pps_float[size_index] = throughput;
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****         log_fpu_benchmark(w, h, elapsed_cycles, result_checksum, throughput, "FLOAT");
 190:Core/Src/main.c ****       }
 191:Core/Src/main.c ****       
 192:Core/Src/main.c ****       /* Test 2: Double precision */
 193:Core/Src/main.c ****       g_current_test_mode = 1u; /* double */
 194:Core/Src/main.c ****       printf("\r\n=== FPU Impact Analysis: DOUBLE PRECISION ===\r\n");
 195:Core/Src/main.c ****       for (uint32_t size_index = 0; size_index < kNumResolutions; ++size_index)
 196:Core/Src/main.c ****       {
 197:Core/Src/main.c ****         uint16_t w = kWidths[size_index];
 198:Core/Src/main.c ****         uint16_t h = kHeights[size_index];
 199:Core/Src/main.c ****         g_current_width = (uint32_t)w;
 200:Core/Src/main.c ****         g_current_height = (uint32_t)h;
 201:Core/Src/main.c **** 
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 5


 202:Core/Src/main.c ****         DWT->CYCCNT = 0; // reset cycle counter
 203:Core/Src/main.c ****         uint32_t start_cycles = dwt_get_cycles();
 204:Core/Src/main.c ****         uint32_t result_checksum = generate_mandelbrot_checksum_double(w, h, kMaxIter);
 205:Core/Src/main.c ****         uint32_t end_cycles = dwt_get_cycles();
 206:Core/Src/main.c ****         uint32_t elapsed_cycles = end_cycles - start_cycles;
 207:Core/Src/main.c ****         double elapsed_seconds = (double)elapsed_cycles / (double)SystemCoreClock;
 208:Core/Src/main.c ****         double total_pixels = (double)w * (double)h;
 209:Core/Src/main.c ****         double throughput = total_pixels / elapsed_seconds;
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****         /* Update Live Expressions */
 212:Core/Src/main.c ****         g_current_cycles = elapsed_cycles;
 213:Core/Src/main.c ****         g_current_checksum = result_checksum;
 214:Core/Src/main.c ****         g_current_execution_time = elapsed_seconds * 1000.0;
 215:Core/Src/main.c ****         g_current_throughput = throughput;
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****         /* Store double results */
 218:Core/Src/main.c ****         checksum_double[size_index] = result_checksum;
 219:Core/Src/main.c ****         execution_time_ms_double[size_index] = elapsed_seconds * 1000.0;
 220:Core/Src/main.c ****         cpu_cycles_double[size_index] = elapsed_cycles;
 221:Core/Src/main.c ****         throughput_pps_double[size_index] = throughput;
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****         log_fpu_benchmark(w, h, elapsed_cycles, result_checksum, throughput, "DOUBLE");
 224:Core/Src/main.c ****       }
 225:Core/Src/main.c ****       
 226:Core/Src/main.c ****       /* Calculate and log comparisons */
 227:Core/Src/main.c ****       printf("\r\n=== FPU Impact Analysis: COMPARISON ===\r\n");
 228:Core/Src/main.c ****       for (uint32_t size_index = 0; size_index < kNumResolutions; ++size_index)
 229:Core/Src/main.c ****       {
 230:Core/Src/main.c ****         uint16_t w = kWidths[size_index];
 231:Core/Src/main.c ****         uint16_t h = kHeights[size_index];
 232:Core/Src/main.c ****         
 233:Core/Src/main.c ****         /* Calculate accuracy difference */
 234:Core/Src/main.c ****         double accuracy_diff = 0.0;
 235:Core/Src/main.c ****         if (checksum_double[size_index] != 0) {
 236:Core/Src/main.c ****           accuracy_diff = ((double)checksum_float[size_index] - (double)checksum_double[size_index]
 237:Core/Src/main.c ****         }
 238:Core/Src/main.c ****         accuracy_diff_percent[size_index] = accuracy_diff;
 239:Core/Src/main.c ****         
 240:Core/Src/main.c ****         /* Calculate speedup factor */
 241:Core/Src/main.c ****         double speedup = 0.0;
 242:Core/Src/main.c ****         if (execution_time_ms_float[size_index] != 0) {
 243:Core/Src/main.c ****           speedup = execution_time_ms_double[size_index] / execution_time_ms_float[size_index];
 244:Core/Src/main.c ****         }
 245:Core/Src/main.c ****         speedup_factor[size_index] = speedup;
 246:Core/Src/main.c ****         
 247:Core/Src/main.c ****         log_fpu_comparison(w, h, checksum_float[size_index], checksum_double[size_index], speedup);
 248:Core/Src/main.c ****       }
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****       /* Visual indicator: LED1 ON, keep ON 2s, then turn both OFF */
 251:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 252:Core/Src/main.c ****       HAL_Delay(2000);
 253:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0 | GPIO_PIN_1, GPIO_PIN_RESET);
 254:Core/Src/main.c ****   }
 255:Core/Src/main.c ****   /* USER CODE END 3 */
 256:Core/Src/main.c **** }
 257:Core/Src/main.c **** 
 258:Core/Src/main.c **** /**
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 6


 259:Core/Src/main.c ****   * @brief System Clock Configuration
 260:Core/Src/main.c ****   * @retval None
 261:Core/Src/main.c ****   */
 262:Core/Src/main.c **** void SystemClock_Config(void)
 263:Core/Src/main.c **** {
 264:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 265:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 268:Core/Src/main.c ****   */
 269:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 270:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 273:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 274:Core/Src/main.c ****   */
 275:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 276:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 277:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 278:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 279:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 280:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 281:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 282:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 283:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 284:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 285:Core/Src/main.c ****   {
 286:Core/Src/main.c ****     Error_Handler();
 287:Core/Src/main.c ****   }
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 290:Core/Src/main.c ****   */
 291:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 292:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 293:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 294:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 295:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 296:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 299:Core/Src/main.c ****   {
 300:Core/Src/main.c ****     Error_Handler();
 301:Core/Src/main.c ****   }
 302:Core/Src/main.c **** }
 303:Core/Src/main.c **** 
 304:Core/Src/main.c **** /**
 305:Core/Src/main.c ****   * @brief GPIO Initialization Function
 306:Core/Src/main.c ****   * @param None
 307:Core/Src/main.c ****   * @retval None
 308:Core/Src/main.c ****   */
 309:Core/Src/main.c **** static void MX_GPIO_Init(void)
 310:Core/Src/main.c **** {
 311:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 312:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 313:Core/Src/main.c **** 
 314:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 315:Core/Src/main.c **** 
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 7


 316:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 317:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 318:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 319:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 320:Core/Src/main.c **** 
 321:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 322:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 323:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 324:Core/Src/main.c **** 
 325:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB2 PB3
 326:Core/Src/main.c ****                            PB4 PB5 PB6 PB7 */
 327:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 328:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 329:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 330:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 331:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 332:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 333:Core/Src/main.c **** 
 334:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 335:Core/Src/main.c **** 
 336:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 337:Core/Src/main.c **** }
 338:Core/Src/main.c **** 
 339:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 340:Core/Src/main.c **** //TODO: Function signatures you defined previously , implement them here
 341:Core/Src/main.c **** 
 342:Core/Src/main.c **** static uint32_t generate_mandelbrot_checksum_float(uint16_t width, uint16_t height, uint32_t max_it
 343:Core/Src/main.c **** {
  29              		.loc 1 343 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 343 1 is_stmt 0 view .LVU1
  34 0000 10B5     		push	{r4, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 4, -8
  38              		.cfi_offset 14, -4
  39 0002 8646     		mov	lr, r0
  40 0004 0C46     		mov	r4, r1
 344:Core/Src/main.c **** 	uint32_t mandelbrot_sum = 0u;
  41              		.loc 1 344 2 is_stmt 1 view .LVU2
  42              	.LVL1:
 345:Core/Src/main.c **** 	for (uint16_t y = 0; y < height; ++y)
  43              		.loc 1 345 2 view .LVU3
  44              	.LBB18:
  45              		.loc 1 345 7 view .LVU4
  46              		.loc 1 345 16 is_stmt 0 view .LVU5
  47 0006 0021     		movs	r1, #0
  48              	.LVL2:
  49              		.loc 1 345 16 view .LVU6
  50              	.LBE18:
 344:Core/Src/main.c **** 	uint32_t mandelbrot_sum = 0u;
  51              		.loc 1 344 11 view .LVU7
  52 0008 0846     		mov	r0, r1
  53              	.LVL3:
  54              	.LBB26:
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 8


  55              		.loc 1 345 2 view .LVU8
  56 000a 3AE0     		b	.L2
  57              	.LVL4:
  58              	.L6:
  59              	.LBB19:
  60              	.LBB20:
  61              	.LBB21:
  62              	.LBB22:
 346:Core/Src/main.c **** 	{
 347:Core/Src/main.c **** 		float y0 = ((float)y / (float)height) * 2.0f - 1.0f;
 348:Core/Src/main.c **** 		for (uint16_t x = 0; x < width; ++x)
 349:Core/Src/main.c **** 		{
 350:Core/Src/main.c **** 			float x0 = ((float)x / (float)width) * 3.5f - 2.5f;
 351:Core/Src/main.c **** 			float xi = 0.0f;
 352:Core/Src/main.c **** 			float yi = 0.0f;
 353:Core/Src/main.c **** 			uint32_t iteration = 0u;
 354:Core/Src/main.c **** 			while (iteration < max_iter && (xi*xi + yi*yi) <= 4.0f)
 355:Core/Src/main.c **** 			{
 356:Core/Src/main.c **** 				float tmp = xi*xi - yi*yi + x0;
  63              		.loc 1 356 5 is_stmt 1 view .LVU9
  64              		.loc 1 356 23 is_stmt 0 view .LVU10
  65 000c 76EEC66A 		vsub.f32	s13, s13, s12
  66              	.LVL5:
 357:Core/Src/main.c **** 				yi = 2.0f*xi*yi + y0;
  67              		.loc 1 357 5 is_stmt 1 view .LVU11
  68              		.loc 1 357 14 is_stmt 0 view .LVU12
  69 0010 77EEA77A 		vadd.f32	s15, s15, s15
  70              	.LVL6:
  71              		.loc 1 357 17 view .LVU13
  72 0014 27EE877A 		vmul.f32	s14, s15, s14
  73              	.LVL7:
  74              		.loc 1 357 8 view .LVU14
  75 0018 37EE047A 		vadd.f32	s14, s14, s8
  76              	.LVL8:
 358:Core/Src/main.c **** 				xi = tmp;
  77              		.loc 1 358 5 is_stmt 1 view .LVU15
 359:Core/Src/main.c **** 				++iteration;
  78              		.loc 1 359 5 view .LVU16
  79 001c 0133     		adds	r3, r3, #1
  80              	.LVL9:
 358:Core/Src/main.c **** 				xi = tmp;
  81              		.loc 1 358 8 is_stmt 0 view .LVU17
  82 001e 76EEA47A 		vadd.f32	s15, s13, s9
  83              	.LVL10:
  84              	.L4:
 358:Core/Src/main.c **** 				xi = tmp;
  85              		.loc 1 358 8 view .LVU18
  86              	.LBE22:
 354:Core/Src/main.c **** 			{
  87              		.loc 1 354 32 is_stmt 1 view .LVU19
  88 0022 9342     		cmp	r3, r2
  89 0024 0CD2     		bcs	.L5
 354:Core/Src/main.c **** 			{
  90              		.loc 1 354 38 is_stmt 0 discriminator 1 view .LVU20
  91 0026 67EEA76A 		vmul.f32	s13, s15, s15
 354:Core/Src/main.c **** 			{
  92              		.loc 1 354 46 discriminator 1 view .LVU21
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 9


  93 002a 27EE076A 		vmul.f32	s12, s14, s14
 354:Core/Src/main.c **** 			{
  94              		.loc 1 354 42 discriminator 1 view .LVU22
  95 002e 36EE865A 		vadd.f32	s10, s13, s12
 354:Core/Src/main.c **** 			{
  96              		.loc 1 354 32 discriminator 1 view .LVU23
  97 0032 F1EE005A 		vmov.f32	s11, #4.0e+0
  98 0036 B4EEE55A 		vcmpe.f32	s10, s11
  99 003a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 100 003e E5D9     		bls	.L6
 101              	.L5:
 360:Core/Src/main.c **** 			}
 361:Core/Src/main.c **** 			mandelbrot_sum += iteration;
 102              		.loc 1 361 4 is_stmt 1 view .LVU24
 103              		.loc 1 361 19 is_stmt 0 view .LVU25
 104 0040 1844     		add	r0, r0, r3
 105              	.LVL11:
 106              		.loc 1 361 19 view .LVU26
 107              	.LBE21:
 348:Core/Src/main.c **** 		{
 108              		.loc 1 348 35 is_stmt 1 discriminator 2 view .LVU27
 109 0042 0CF1010C 		add	ip, ip, #1
 110              	.LVL12:
 348:Core/Src/main.c **** 		{
 111              		.loc 1 348 35 is_stmt 0 discriminator 2 view .LVU28
 112 0046 1FFA8CFC 		uxth	ip, ip
 113              	.LVL13:
 114              	.L3:
 348:Core/Src/main.c **** 		{
 115              		.loc 1 348 26 is_stmt 1 discriminator 1 view .LVU29
 116 004a F445     		cmp	ip, lr
 117 004c 17D2     		bcs	.L10
 118              	.LBB23:
 350:Core/Src/main.c **** 			float xi = 0.0f;
 119              		.loc 1 350 4 view .LVU30
 350:Core/Src/main.c **** 			float xi = 0.0f;
 120              		.loc 1 350 16 is_stmt 0 view .LVU31
 121 004e 07EE90CA 		vmov	s15, ip	@ int
 122 0052 F8EE677A 		vcvt.f32.u32	s15, s15
 350:Core/Src/main.c **** 			float xi = 0.0f;
 123              		.loc 1 350 27 view .LVU32
 124 0056 07EE10EA 		vmov	s14, lr	@ int
 125 005a B8EE477A 		vcvt.f32.u32	s14, s14
 350:Core/Src/main.c **** 			float xi = 0.0f;
 126              		.loc 1 350 25 view .LVU33
 127 005e C7EE874A 		vdiv.f32	s9, s15, s14
 350:Core/Src/main.c **** 			float xi = 0.0f;
 128              		.loc 1 350 41 view .LVU34
 129 0062 F0EE0C7A 		vmov.f32	s15, #3.5e+0
 130 0066 64EEA74A 		vmul.f32	s9, s9, s15
 350:Core/Src/main.c **** 			float xi = 0.0f;
 131              		.loc 1 350 10 view .LVU35
 132 006a F0EE047A 		vmov.f32	s15, #2.5e+0
 133 006e 74EEE74A 		vsub.f32	s9, s9, s15
 134              	.LVL14:
 351:Core/Src/main.c **** 			float yi = 0.0f;
 135              		.loc 1 351 4 is_stmt 1 view .LVU36
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 10


 352:Core/Src/main.c **** 			uint32_t iteration = 0u;
 136              		.loc 1 352 4 view .LVU37
 353:Core/Src/main.c **** 			while (iteration < max_iter && (xi*xi + yi*yi) <= 4.0f)
 137              		.loc 1 353 4 view .LVU38
 354:Core/Src/main.c **** 			{
 138              		.loc 1 354 4 view .LVU39
 353:Core/Src/main.c **** 			while (iteration < max_iter && (xi*xi + yi*yi) <= 4.0f)
 139              		.loc 1 353 13 is_stmt 0 view .LVU40
 140 0072 0023     		movs	r3, #0
 352:Core/Src/main.c **** 			uint32_t iteration = 0u;
 141              		.loc 1 352 10 view .LVU41
 142 0074 9FED0E7A 		vldr.32	s14, .L12
 351:Core/Src/main.c **** 			float yi = 0.0f;
 143              		.loc 1 351 10 view .LVU42
 144 0078 F0EE477A 		vmov.f32	s15, s14
 354:Core/Src/main.c **** 			{
 145              		.loc 1 354 10 view .LVU43
 146 007c D1E7     		b	.L4
 147              	.LVL15:
 148              	.L10:
 354:Core/Src/main.c **** 			{
 149              		.loc 1 354 10 view .LVU44
 150              	.LBE23:
 151              	.LBE20:
 152              	.LBE19:
 345:Core/Src/main.c **** 	{
 153              		.loc 1 345 35 is_stmt 1 discriminator 2 view .LVU45
 154 007e 0131     		adds	r1, r1, #1
 155              	.LVL16:
 345:Core/Src/main.c **** 	{
 156              		.loc 1 345 35 is_stmt 0 discriminator 2 view .LVU46
 157 0080 89B2     		uxth	r1, r1
 158              	.LVL17:
 159              	.L2:
 345:Core/Src/main.c **** 	{
 160              		.loc 1 345 25 is_stmt 1 discriminator 1 view .LVU47
 161 0082 A142     		cmp	r1, r4
 162 0084 12D2     		bcs	.L11
 163              	.LBB25:
 347:Core/Src/main.c **** 		for (uint16_t x = 0; x < width; ++x)
 164              		.loc 1 347 3 view .LVU48
 347:Core/Src/main.c **** 		for (uint16_t x = 0; x < width; ++x)
 165              		.loc 1 347 15 is_stmt 0 view .LVU49
 166 0086 07EE901A 		vmov	s15, r1	@ int
 167 008a F8EE677A 		vcvt.f32.u32	s15, s15
 347:Core/Src/main.c **** 		for (uint16_t x = 0; x < width; ++x)
 168              		.loc 1 347 26 view .LVU50
 169 008e 07EE104A 		vmov	s14, r4	@ int
 170 0092 B8EE477A 		vcvt.f32.u32	s14, s14
 347:Core/Src/main.c **** 		for (uint16_t x = 0; x < width; ++x)
 171              		.loc 1 347 24 view .LVU51
 172 0096 87EE874A 		vdiv.f32	s8, s15, s14
 347:Core/Src/main.c **** 		for (uint16_t x = 0; x < width; ++x)
 173              		.loc 1 347 41 view .LVU52
 174 009a 34EE044A 		vadd.f32	s8, s8, s8
 347:Core/Src/main.c **** 		for (uint16_t x = 0; x < width; ++x)
 175              		.loc 1 347 9 view .LVU53
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 11


 176 009e F7EE007A 		vmov.f32	s15, #1.0e+0
 177 00a2 34EE674A 		vsub.f32	s8, s8, s15
 178              	.LVL18:
 348:Core/Src/main.c **** 		{
 179              		.loc 1 348 3 is_stmt 1 view .LVU54
 180              	.LBB24:
 348:Core/Src/main.c **** 		{
 181              		.loc 1 348 8 view .LVU55
 348:Core/Src/main.c **** 		{
 182              		.loc 1 348 17 is_stmt 0 view .LVU56
 183 00a6 4FF0000C 		mov	ip, #0
 348:Core/Src/main.c **** 		{
 184              		.loc 1 348 3 view .LVU57
 185 00aa CEE7     		b	.L3
 186              	.LVL19:
 187              	.L11:
 348:Core/Src/main.c **** 		{
 188              		.loc 1 348 3 view .LVU58
 189              	.LBE24:
 190              	.LBE25:
 191              	.LBE26:
 362:Core/Src/main.c **** 		}
 363:Core/Src/main.c **** 	}
 364:Core/Src/main.c **** 	return mandelbrot_sum;
 192              		.loc 1 364 2 is_stmt 1 view .LVU59
 365:Core/Src/main.c **** }
 193              		.loc 1 365 1 is_stmt 0 view .LVU60
 194 00ac 10BD     		pop	{r4, pc}
 195              	.LVL20:
 196              	.L13:
 197              		.loc 1 365 1 view .LVU61
 198 00ae 00BF     		.align	2
 199              	.L12:
 200 00b0 00000000 		.word	0
 201              		.cfi_endproc
 202              	.LFE140:
 204              		.global	__aeabi_ui2d
 205              		.global	__aeabi_ddiv
 206              		.global	__aeabi_dadd
 207              		.global	__aeabi_dsub
 208              		.global	__aeabi_dmul
 209              		.global	__aeabi_dcmple
 210              		.section	.text.generate_mandelbrot_checksum_double,"ax",%progbits
 211              		.align	1
 212              		.syntax unified
 213              		.thumb
 214              		.thumb_func
 216              	generate_mandelbrot_checksum_double:
 217              	.LVL21:
 218              	.LFB141:
 366:Core/Src/main.c **** 
 367:Core/Src/main.c **** static uint32_t generate_mandelbrot_checksum_double(uint16_t width, uint16_t height, uint32_t max_i
 368:Core/Src/main.c **** {
 219              		.loc 1 368 1 is_stmt 1 view -0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 48
 222              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 12


 223              		.loc 1 368 1 is_stmt 0 view .LVU63
 224 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 225              	.LCFI1:
 226              		.cfi_def_cfa_offset 36
 227              		.cfi_offset 4, -36
 228              		.cfi_offset 5, -32
 229              		.cfi_offset 6, -28
 230              		.cfi_offset 7, -24
 231              		.cfi_offset 8, -20
 232              		.cfi_offset 9, -16
 233              		.cfi_offset 10, -12
 234              		.cfi_offset 11, -8
 235              		.cfi_offset 14, -4
 236 0004 8DB0     		sub	sp, sp, #52
 237              	.LCFI2:
 238              		.cfi_def_cfa_offset 88
 239 0006 0790     		str	r0, [sp, #28]
 240 0008 0F46     		mov	r7, r1
 241 000a 9346     		mov	fp, r2
 369:Core/Src/main.c **** 	uint32_t mandelbrot_sum = 0u;
 242              		.loc 1 369 2 is_stmt 1 view .LVU64
 243              	.LVL22:
 370:Core/Src/main.c **** 	for (uint16_t y = 0; y < height; ++y)
 244              		.loc 1 370 2 view .LVU65
 245              	.LBB27:
 246              		.loc 1 370 7 view .LVU66
 247              		.loc 1 370 16 is_stmt 0 view .LVU67
 248 000c 0026     		movs	r6, #0
 249              	.LBE27:
 369:Core/Src/main.c **** 	uint32_t mandelbrot_sum = 0u;
 250              		.loc 1 369 11 view .LVU68
 251 000e B046     		mov	r8, r6
 252              	.LBB35:
 253              		.loc 1 370 2 view .LVU69
 254 0010 6DE0     		b	.L15
 255              	.LVL23:
 256              	.L19:
 257              	.LBB28:
 258              	.LBB29:
 259              	.LBB30:
 260              	.LBB31:
 371:Core/Src/main.c **** 	{
 372:Core/Src/main.c **** 		double y0 = ((double)y / (double)height) * 2.0 - 1.0;
 373:Core/Src/main.c **** 		for (uint16_t x = 0; x < width; ++x)
 374:Core/Src/main.c **** 		{
 375:Core/Src/main.c **** 			double x0 = ((double)x / (double)width) * 3.5 - 2.5;
 376:Core/Src/main.c **** 			double xi = 0.0;
 377:Core/Src/main.c **** 			double yi = 0.0;
 378:Core/Src/main.c **** 			uint32_t iteration = 0u;
 379:Core/Src/main.c **** 			while (iteration < max_iter && (xi*xi + yi*yi) <= 4.0)
 380:Core/Src/main.c **** 			{
 381:Core/Src/main.c **** 				double tmp = xi*xi - yi*yi + x0;
 261              		.loc 1 381 5 is_stmt 1 view .LVU70
 262              		.loc 1 381 24 is_stmt 0 view .LVU71
 263 0012 3246     		mov	r2, r6
 264 0014 3B46     		mov	r3, r7
 265 0016 DDE90001 		ldrd	r0, [sp]
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 13


 266 001a FFF7FEFF 		bl	__aeabi_dsub
 267              	.LVL24:
 268              		.loc 1 381 12 view .LVU72
 269 001e DDE90223 		ldrd	r2, [sp, #8]
 270 0022 FFF7FEFF 		bl	__aeabi_dadd
 271              	.LVL25:
 272 0026 0646     		mov	r6, r0
 273 0028 0F46     		mov	r7, r1
 274              	.LVL26:
 382:Core/Src/main.c **** 				yi = 2.0*xi*yi + y0;
 275              		.loc 1 382 5 is_stmt 1 view .LVU73
 276              		.loc 1 382 13 is_stmt 0 view .LVU74
 277 002a 2246     		mov	r2, r4
 278 002c 2B46     		mov	r3, r5
 279 002e 2046     		mov	r0, r4
 280 0030 2946     		mov	r1, r5
 281 0032 FFF7FEFF 		bl	__aeabi_dadd
 282              	.LVL27:
 283              		.loc 1 382 16 view .LVU75
 284 0036 4246     		mov	r2, r8
 285 0038 4B46     		mov	r3, r9
 286 003a FFF7FEFF 		bl	__aeabi_dmul
 287              	.LVL28:
 288              		.loc 1 382 8 view .LVU76
 289 003e DDE90423 		ldrd	r2, [sp, #16]
 290 0042 FFF7FEFF 		bl	__aeabi_dadd
 291              	.LVL29:
 292 0046 8046     		mov	r8, r0
 293              	.LVL30:
 294              		.loc 1 382 8 view .LVU77
 295 0048 8946     		mov	r9, r1
 296              	.LVL31:
 383:Core/Src/main.c **** 				xi = tmp;
 297              		.loc 1 383 5 is_stmt 1 view .LVU78
 384:Core/Src/main.c **** 				++iteration;
 298              		.loc 1 384 5 view .LVU79
 299 004a 0AF1010A 		add	r10, r10, #1
 300              	.LVL32:
 383:Core/Src/main.c **** 				xi = tmp;
 301              		.loc 1 383 8 is_stmt 0 view .LVU80
 302 004e 3446     		mov	r4, r6
 303 0050 3D46     		mov	r5, r7
 304              	.LVL33:
 305              	.L17:
 383:Core/Src/main.c **** 				xi = tmp;
 306              		.loc 1 383 8 view .LVU81
 307              	.LBE31:
 379:Core/Src/main.c **** 			{
 308              		.loc 1 379 32 is_stmt 1 view .LVU82
 309 0052 DA45     		cmp	r10, fp
 310 0054 1BD2     		bcs	.L18
 379:Core/Src/main.c **** 			{
 311              		.loc 1 379 38 is_stmt 0 discriminator 1 view .LVU83
 312 0056 2246     		mov	r2, r4
 313 0058 2B46     		mov	r3, r5
 314 005a 2046     		mov	r0, r4
 315 005c 2946     		mov	r1, r5
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 14


 316 005e FFF7FEFF 		bl	__aeabi_dmul
 317              	.LVL34:
 318 0062 CDE90001 		strd	r0, [sp]
 379:Core/Src/main.c **** 			{
 319              		.loc 1 379 46 discriminator 1 view .LVU84
 320 0066 4246     		mov	r2, r8
 321 0068 4B46     		mov	r3, r9
 322 006a 4046     		mov	r0, r8
 323 006c 4946     		mov	r1, r9
 324 006e FFF7FEFF 		bl	__aeabi_dmul
 325              	.LVL35:
 326 0072 0646     		mov	r6, r0
 327 0074 0F46     		mov	r7, r1
 379:Core/Src/main.c **** 			{
 328              		.loc 1 379 42 discriminator 1 view .LVU85
 329 0076 0246     		mov	r2, r0
 330 0078 0B46     		mov	r3, r1
 331 007a DDE90001 		ldrd	r0, [sp]
 332 007e FFF7FEFF 		bl	__aeabi_dadd
 333              	.LVL36:
 379:Core/Src/main.c **** 			{
 334              		.loc 1 379 32 discriminator 1 view .LVU86
 335 0082 0022     		movs	r2, #0
 336 0084 2C4B     		ldr	r3, .L25
 337 0086 FFF7FEFF 		bl	__aeabi_dcmple
 338              	.LVL37:
 339 008a 0028     		cmp	r0, #0
 340 008c C1D1     		bne	.L19
 341              	.L18:
 385:Core/Src/main.c **** 			}
 386:Core/Src/main.c **** 			mandelbrot_sum += iteration;
 342              		.loc 1 386 19 view .LVU87
 343 008e 089E     		ldr	r6, [sp, #32]
 344 0090 099F     		ldr	r7, [sp, #36]
 345              		.loc 1 386 4 is_stmt 1 view .LVU88
 346              		.loc 1 386 19 is_stmt 0 view .LVU89
 347 0092 5744     		add	r7, r7, r10
 348              	.LVL38:
 349              		.loc 1 386 19 view .LVU90
 350              	.LBE30:
 373:Core/Src/main.c **** 		{
 351              		.loc 1 373 35 is_stmt 1 discriminator 2 view .LVU91
 352 0094 731C     		adds	r3, r6, #1
 353 0096 9EB2     		uxth	r6, r3
 354              	.LVL39:
 355              	.L16:
 373:Core/Src/main.c **** 		{
 356              		.loc 1 373 26 discriminator 1 view .LVU92
 357 0098 079B     		ldr	r3, [sp, #28]
 358 009a 9E42     		cmp	r6, r3
 359 009c 22D2     		bcs	.L23
 360              	.LBB32:
 375:Core/Src/main.c **** 			double xi = 0.0;
 361              		.loc 1 375 4 view .LVU93
 375:Core/Src/main.c **** 			double xi = 0.0;
 362              		.loc 1 375 17 is_stmt 0 view .LVU94
 363 009e 3046     		mov	r0, r6
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 15


 364 00a0 FFF7FEFF 		bl	__aeabi_ui2d
 365              	.LVL40:
 366 00a4 0446     		mov	r4, r0
 367 00a6 0D46     		mov	r5, r1
 375:Core/Src/main.c **** 			double xi = 0.0;
 368              		.loc 1 375 29 view .LVU95
 369 00a8 0798     		ldr	r0, [sp, #28]
 370 00aa FFF7FEFF 		bl	__aeabi_ui2d
 371              	.LVL41:
 372 00ae 0246     		mov	r2, r0
 373 00b0 0B46     		mov	r3, r1
 375:Core/Src/main.c **** 			double xi = 0.0;
 374              		.loc 1 375 27 view .LVU96
 375 00b2 2046     		mov	r0, r4
 376 00b4 2946     		mov	r1, r5
 377 00b6 FFF7FEFF 		bl	__aeabi_ddiv
 378              	.LVL42:
 375:Core/Src/main.c **** 			double xi = 0.0;
 379              		.loc 1 375 44 view .LVU97
 380 00ba 0022     		movs	r2, #0
 381 00bc 1F4B     		ldr	r3, .L25+4
 382 00be FFF7FEFF 		bl	__aeabi_dmul
 383              	.LVL43:
 375:Core/Src/main.c **** 			double xi = 0.0;
 384              		.loc 1 375 11 view .LVU98
 385 00c2 0022     		movs	r2, #0
 386 00c4 1E4B     		ldr	r3, .L25+8
 387 00c6 FFF7FEFF 		bl	__aeabi_dsub
 388              	.LVL44:
 389 00ca CDE90201 		strd	r0, [sp, #8]
 390              	.LVL45:
 376:Core/Src/main.c **** 			double yi = 0.0;
 391              		.loc 1 376 4 is_stmt 1 view .LVU99
 377:Core/Src/main.c **** 			uint32_t iteration = 0u;
 392              		.loc 1 377 4 view .LVU100
 378:Core/Src/main.c **** 			while (iteration < max_iter && (xi*xi + yi*yi) <= 4.0)
 393              		.loc 1 378 4 view .LVU101
 379:Core/Src/main.c **** 			{
 394              		.loc 1 379 4 view .LVU102
 378:Core/Src/main.c **** 			while (iteration < max_iter && (xi*xi + yi*yi) <= 4.0)
 395              		.loc 1 378 13 is_stmt 0 view .LVU103
 396 00ce 4FF0000A 		mov	r10, #0
 377:Core/Src/main.c **** 			uint32_t iteration = 0u;
 397              		.loc 1 377 11 view .LVU104
 398 00d2 4FF00008 		mov	r8, #0
 399 00d6 4FF00009 		mov	r9, #0
 376:Core/Src/main.c **** 			double yi = 0.0;
 400              		.loc 1 376 11 view .LVU105
 401 00da 4446     		mov	r4, r8
 402 00dc 4D46     		mov	r5, r9
 403 00de 0896     		str	r6, [sp, #32]
 404 00e0 0997     		str	r7, [sp, #36]
 379:Core/Src/main.c **** 			{
 405              		.loc 1 379 10 view .LVU106
 406 00e2 B6E7     		b	.L17
 407              	.LVL46:
 408              	.L23:
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 16


 379:Core/Src/main.c **** 			{
 409              		.loc 1 379 10 view .LVU107
 410              	.LBE32:
 411              	.LBE29:
 412              	.LBE28:
 370:Core/Src/main.c **** 	{
 413              		.loc 1 370 35 discriminator 2 view .LVU108
 414 00e4 0A9E     		ldr	r6, [sp, #40]
 415              	.LVL47:
 370:Core/Src/main.c **** 	{
 416              		.loc 1 370 35 discriminator 2 view .LVU109
 417 00e6 B846     		mov	r8, r7
 418 00e8 0B9F     		ldr	r7, [sp, #44]
 419              	.LVL48:
 370:Core/Src/main.c **** 	{
 420              		.loc 1 370 35 is_stmt 1 discriminator 2 view .LVU110
 421 00ea 731C     		adds	r3, r6, #1
 422 00ec 9EB2     		uxth	r6, r3
 423              	.LVL49:
 424              	.L15:
 370:Core/Src/main.c **** 	{
 425              		.loc 1 370 25 discriminator 1 view .LVU111
 426 00ee BE42     		cmp	r6, r7
 427 00f0 1ED2     		bcs	.L24
 428              	.LBB34:
 372:Core/Src/main.c **** 		for (uint16_t x = 0; x < width; ++x)
 429              		.loc 1 372 3 view .LVU112
 372:Core/Src/main.c **** 		for (uint16_t x = 0; x < width; ++x)
 430              		.loc 1 372 16 is_stmt 0 view .LVU113
 431 00f2 3046     		mov	r0, r6
 432 00f4 FFF7FEFF 		bl	__aeabi_ui2d
 433              	.LVL50:
 434 00f8 0446     		mov	r4, r0
 435 00fa 0D46     		mov	r5, r1
 372:Core/Src/main.c **** 		for (uint16_t x = 0; x < width; ++x)
 436              		.loc 1 372 28 view .LVU114
 437 00fc 3846     		mov	r0, r7
 438 00fe FFF7FEFF 		bl	__aeabi_ui2d
 439              	.LVL51:
 440 0102 0246     		mov	r2, r0
 441 0104 0B46     		mov	r3, r1
 372:Core/Src/main.c **** 		for (uint16_t x = 0; x < width; ++x)
 442              		.loc 1 372 26 view .LVU115
 443 0106 2046     		mov	r0, r4
 444 0108 2946     		mov	r1, r5
 445 010a FFF7FEFF 		bl	__aeabi_ddiv
 446              	.LVL52:
 447 010e 0246     		mov	r2, r0
 448 0110 0B46     		mov	r3, r1
 372:Core/Src/main.c **** 		for (uint16_t x = 0; x < width; ++x)
 449              		.loc 1 372 44 view .LVU116
 450 0112 FFF7FEFF 		bl	__aeabi_dadd
 451              	.LVL53:
 372:Core/Src/main.c **** 		for (uint16_t x = 0; x < width; ++x)
 452              		.loc 1 372 10 view .LVU117
 453 0116 0022     		movs	r2, #0
 454 0118 0A4B     		ldr	r3, .L25+12
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 17


 455 011a FFF7FEFF 		bl	__aeabi_dsub
 456              	.LVL54:
 457 011e CDE90401 		strd	r0, [sp, #16]
 458              	.LVL55:
 373:Core/Src/main.c **** 		{
 459              		.loc 1 373 3 is_stmt 1 view .LVU118
 460              	.LBB33:
 373:Core/Src/main.c **** 		{
 461              		.loc 1 373 8 view .LVU119
 373:Core/Src/main.c **** 		{
 462              		.loc 1 373 17 is_stmt 0 view .LVU120
 463 0122 4FF00009 		mov	r9, #0
 464 0126 0A96     		str	r6, [sp, #40]
 465 0128 4E46     		mov	r6, r9
 466              	.LVL56:
 373:Core/Src/main.c **** 		{
 467              		.loc 1 373 17 view .LVU121
 468 012a 0B97     		str	r7, [sp, #44]
 469 012c 4746     		mov	r7, r8
 373:Core/Src/main.c **** 		{
 470              		.loc 1 373 3 view .LVU122
 471 012e B3E7     		b	.L16
 472              	.LVL57:
 473              	.L24:
 373:Core/Src/main.c **** 		{
 474              		.loc 1 373 3 view .LVU123
 475              	.LBE33:
 476              	.LBE34:
 477              	.LBE35:
 387:Core/Src/main.c **** 		}
 388:Core/Src/main.c **** 	}
 389:Core/Src/main.c **** 	return mandelbrot_sum;
 478              		.loc 1 389 2 is_stmt 1 view .LVU124
 390:Core/Src/main.c **** }
 479              		.loc 1 390 1 is_stmt 0 view .LVU125
 480 0130 4046     		mov	r0, r8
 481 0132 0DB0     		add	sp, sp, #52
 482              	.LCFI3:
 483              		.cfi_def_cfa_offset 36
 484              		@ sp needed
 485 0134 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 486              	.LVL58:
 487              	.L26:
 488              		.loc 1 390 1 view .LVU126
 489              		.align	2
 490              	.L25:
 491 0138 00001040 		.word	1074790400
 492 013c 00000C40 		.word	1074528256
 493 0140 00000440 		.word	1074003968
 494 0144 0000F03F 		.word	1072693248
 495              		.cfi_endproc
 496              	.LFE141:
 498              		.section	.text.dwt_cycle_counter_init,"ax",%progbits
 499              		.align	1
 500              		.syntax unified
 501              		.thumb
 502              		.thumb_func
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 18


 504              	dwt_cycle_counter_init:
 505              	.LFB142:
 391:Core/Src/main.c **** 
 392:Core/Src/main.c **** static void dwt_cycle_counter_init(void)
 393:Core/Src/main.c **** {
 506              		.loc 1 393 1 is_stmt 1 view -0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 0
 509              		@ frame_needed = 0, uses_anonymous_args = 0
 510              		@ link register save eliminated.
 394:Core/Src/main.c **** 	/* Enable TRC */
 395:Core/Src/main.c **** 	CoreDebug->DEMCR |= CoreDebug_DEMCR_TRCENA_Msk;
 511              		.loc 1 395 2 view .LVU128
 512              		.loc 1 395 11 is_stmt 0 view .LVU129
 513 0000 074A     		ldr	r2, .L28
 514 0002 D2F8FC30 		ldr	r3, [r2, #252]
 515              		.loc 1 395 19 view .LVU130
 516 0006 43F08073 		orr	r3, r3, #16777216
 517 000a C2F8FC30 		str	r3, [r2, #252]
 396:Core/Src/main.c **** 	/* Unlock DWT (if locked) by writing the key to LAR when present */
 397:Core/Src/main.c **** #ifdef DWT_LAR
 398:Core/Src/main.c **** 	DWT->LAR = 0xC5ACCE55;
 399:Core/Src/main.c **** #endif
 400:Core/Src/main.c **** 	/* Reset the cycle counter */
 401:Core/Src/main.c **** 	DWT->CYCCNT = 0;
 518              		.loc 1 401 2 is_stmt 1 view .LVU131
 519              		.loc 1 401 14 is_stmt 0 view .LVU132
 520 000e 054B     		ldr	r3, .L28+4
 521 0010 0022     		movs	r2, #0
 522 0012 5A60     		str	r2, [r3, #4]
 402:Core/Src/main.c **** 	/* Enable the cycle counter */
 403:Core/Src/main.c **** 	DWT->CTRL |= DWT_CTRL_CYCCNTENA_Msk;
 523              		.loc 1 403 2 is_stmt 1 view .LVU133
 524              		.loc 1 403 5 is_stmt 0 view .LVU134
 525 0014 1A68     		ldr	r2, [r3]
 526              		.loc 1 403 12 view .LVU135
 527 0016 42F00102 		orr	r2, r2, #1
 528 001a 1A60     		str	r2, [r3]
 404:Core/Src/main.c **** }
 529              		.loc 1 404 1 view .LVU136
 530 001c 7047     		bx	lr
 531              	.L29:
 532 001e 00BF     		.align	2
 533              	.L28:
 534 0020 00ED00E0 		.word	-536810240
 535 0024 001000E0 		.word	-536866816
 536              		.cfi_endproc
 537              	.LFE142:
 539              		.section	.rodata.log_fpu_benchmark.str1.4,"aMS",%progbits,1
 540              		.align	2
 541              	.LC0:
 542 0000 25733A20 		.ascii	"%s: %ux%u, cycles %lu, time %.6f s, throughput %.0f"
 542      25757825 
 542      752C2063 
 542      79636C65 
 542      7320256C 
 543 0033 20707073 		.ascii	" pps, checksum %lu\015\012\000"
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 19


 543      2C206368 
 543      65636B73 
 543      756D2025 
 543      6C750D0A 
 544              		.section	.text.log_fpu_benchmark,"ax",%progbits
 545              		.align	1
 546              		.syntax unified
 547              		.thumb
 548              		.thumb_func
 550              	log_fpu_benchmark:
 551              	.LVL59:
 552              	.LFB144:
 405:Core/Src/main.c **** 
 406:Core/Src/main.c **** static inline uint32_t dwt_get_cycles(void)
 407:Core/Src/main.c **** {
 408:Core/Src/main.c **** 	return DWT->CYCCNT;
 409:Core/Src/main.c **** }
 410:Core/Src/main.c **** 
 411:Core/Src/main.c **** static void log_fpu_benchmark(uint16_t width, uint16_t height, uint32_t cycles, uint32_t checksum, 
 412:Core/Src/main.c **** {
 553              		.loc 1 412 1 is_stmt 1 view -0
 554              		.cfi_startproc
 555              		@ args = 4, pretend = 0, frame = 0
 556              		@ frame_needed = 0, uses_anonymous_args = 0
 557              		.loc 1 412 1 is_stmt 0 view .LVU138
 558 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 559              	.LCFI4:
 560              		.cfi_def_cfa_offset 36
 561              		.cfi_offset 4, -36
 562              		.cfi_offset 5, -32
 563              		.cfi_offset 6, -28
 564              		.cfi_offset 7, -24
 565              		.cfi_offset 8, -20
 566              		.cfi_offset 9, -16
 567              		.cfi_offset 10, -12
 568              		.cfi_offset 11, -8
 569              		.cfi_offset 14, -4
 570 0004 89B0     		sub	sp, sp, #36
 571              	.LCFI5:
 572              		.cfi_def_cfa_offset 72
 573 0006 0546     		mov	r5, r0
 574 0008 0E46     		mov	r6, r1
 575 000a 1446     		mov	r4, r2
 576 000c 1F46     		mov	r7, r3
 577 000e 5BEC10AB 		vmov	r10, fp, d0
 413:Core/Src/main.c **** 	double seconds = (double)cycles / (double)SystemCoreClock;
 578              		.loc 1 413 2 is_stmt 1 view .LVU139
 579              		.loc 1 413 19 is_stmt 0 view .LVU140
 580 0012 1046     		mov	r0, r2
 581              	.LVL60:
 582              		.loc 1 413 19 view .LVU141
 583 0014 FFF7FEFF 		bl	__aeabi_ui2d
 584              	.LVL61:
 585              		.loc 1 413 19 view .LVU142
 586 0018 8046     		mov	r8, r0
 587 001a 8946     		mov	r9, r1
 588              		.loc 1 413 36 view .LVU143
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 20


 589 001c 0C4B     		ldr	r3, .L32
 590 001e 1868     		ldr	r0, [r3]
 591 0020 FFF7FEFF 		bl	__aeabi_ui2d
 592              	.LVL62:
 593 0024 0246     		mov	r2, r0
 594 0026 0B46     		mov	r3, r1
 595              		.loc 1 413 9 view .LVU144
 596 0028 4046     		mov	r0, r8
 597 002a 4946     		mov	r1, r9
 598 002c FFF7FEFF 		bl	__aeabi_ddiv
 599              	.LVL63:
 414:Core/Src/main.c **** 	printf("%s: %ux%u, cycles %lu, time %.6f s, throughput %.0f pps, checksum %lu\r\n",
 600              		.loc 1 414 2 is_stmt 1 view .LVU145
 601 0030 0697     		str	r7, [sp, #24]
 602 0032 CDE904AB 		strd	r10, [sp, #16]
 603 0036 CDE90201 		strd	r0, [sp, #8]
 604 003a 0094     		str	r4, [sp]
 605 003c 3346     		mov	r3, r6
 606 003e 2A46     		mov	r2, r5
 607 0040 1299     		ldr	r1, [sp, #72]
 608 0042 0448     		ldr	r0, .L32+4
 609              	.LVL64:
 610              		.loc 1 414 2 is_stmt 0 view .LVU146
 611 0044 FFF7FEFF 		bl	printf
 612              	.LVL65:
 415:Core/Src/main.c **** 			precision, (unsigned)width, (unsigned)height, (unsigned long)cycles, seconds, throughput, (unsig
 416:Core/Src/main.c **** }
 613              		.loc 1 416 1 view .LVU147
 614 0048 09B0     		add	sp, sp, #36
 615              	.LCFI6:
 616              		.cfi_def_cfa_offset 36
 617              		@ sp needed
 618 004a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 619              	.LVL66:
 620              	.L33:
 621              		.loc 1 416 1 view .LVU148
 622 004e 00BF     		.align	2
 623              	.L32:
 624 0050 00000000 		.word	SystemCoreClock
 625 0054 00000000 		.word	.LC0
 626              		.cfi_endproc
 627              	.LFE144:
 629              		.section	.rodata.log_fpu_comparison.str1.4,"aMS",%progbits,1
 630              		.align	2
 631              	.LC1:
 632 0000 434F4D50 		.ascii	"COMPARISON %ux%u: Float checksum %lu, Double checks"
 632      41524953 
 632      4F4E2025 
 632      75782575 
 632      3A20466C 
 633 0033 756D2025 		.ascii	"um %lu, Speedup %.2fx\015\012\000"
 633      6C752C20 
 633      53706565 
 633      64757020 
 633      252E3266 
 634              		.section	.text.log_fpu_comparison,"ax",%progbits
 635              		.align	1
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 21


 636              		.syntax unified
 637              		.thumb
 638              		.thumb_func
 640              	log_fpu_comparison:
 641              	.LVL67:
 642              	.LFB145:
 417:Core/Src/main.c **** 
 418:Core/Src/main.c **** static void log_fpu_comparison(uint16_t width, uint16_t height, uint32_t checksum_float, uint32_t c
 419:Core/Src/main.c **** {
 643              		.loc 1 419 1 is_stmt 1 view -0
 644              		.cfi_startproc
 645              		@ args = 0, pretend = 0, frame = 0
 646              		@ frame_needed = 0, uses_anonymous_args = 0
 647              		.loc 1 419 1 is_stmt 0 view .LVU150
 648 0000 00B5     		push	{lr}
 649              	.LCFI7:
 650              		.cfi_def_cfa_offset 4
 651              		.cfi_offset 14, -4
 652 0002 85B0     		sub	sp, sp, #20
 653              	.LCFI8:
 654              		.cfi_def_cfa_offset 24
 420:Core/Src/main.c **** 	printf("COMPARISON %ux%u: Float checksum %lu, Double checksum %lu, Speedup %.2fx\r\n",
 655              		.loc 1 420 2 is_stmt 1 view .LVU151
 656 0004 8DED020B 		vstr.64	d0, [sp, #8]
 657 0008 0093     		str	r3, [sp]
 658 000a 1346     		mov	r3, r2
 659              	.LVL68:
 660              		.loc 1 420 2 is_stmt 0 view .LVU152
 661 000c 0A46     		mov	r2, r1
 662              	.LVL69:
 663              		.loc 1 420 2 view .LVU153
 664 000e 0146     		mov	r1, r0
 665              	.LVL70:
 666              		.loc 1 420 2 view .LVU154
 667 0010 0248     		ldr	r0, .L36
 668              	.LVL71:
 669              		.loc 1 420 2 view .LVU155
 670 0012 FFF7FEFF 		bl	printf
 671              	.LVL72:
 421:Core/Src/main.c **** 			(unsigned)width, (unsigned)height, (unsigned long)checksum_float, (unsigned long)checksum_double
 422:Core/Src/main.c **** }
 672              		.loc 1 422 1 view .LVU156
 673 0016 05B0     		add	sp, sp, #20
 674              	.LCFI9:
 675              		.cfi_def_cfa_offset 4
 676              		@ sp needed
 677 0018 5DF804FB 		ldr	pc, [sp], #4
 678              	.L37:
 679              		.align	2
 680              	.L36:
 681 001c 00000000 		.word	.LC1
 682              		.cfi_endproc
 683              	.LFE145:
 685              		.section	.text.MX_GPIO_Init,"ax",%progbits
 686              		.align	1
 687              		.syntax unified
 688              		.thumb
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 22


 689              		.thumb_func
 691              	MX_GPIO_Init:
 692              	.LFB139:
 310:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 693              		.loc 1 310 1 is_stmt 1 view -0
 694              		.cfi_startproc
 695              		@ args = 0, pretend = 0, frame = 32
 696              		@ frame_needed = 0, uses_anonymous_args = 0
 697 0000 30B5     		push	{r4, r5, lr}
 698              	.LCFI10:
 699              		.cfi_def_cfa_offset 12
 700              		.cfi_offset 4, -12
 701              		.cfi_offset 5, -8
 702              		.cfi_offset 14, -4
 703 0002 89B0     		sub	sp, sp, #36
 704              	.LCFI11:
 705              		.cfi_def_cfa_offset 48
 311:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 706              		.loc 1 311 3 view .LVU158
 311:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 707              		.loc 1 311 20 is_stmt 0 view .LVU159
 708 0004 0024     		movs	r4, #0
 709 0006 0394     		str	r4, [sp, #12]
 710 0008 0494     		str	r4, [sp, #16]
 711 000a 0594     		str	r4, [sp, #20]
 712 000c 0694     		str	r4, [sp, #24]
 713 000e 0794     		str	r4, [sp, #28]
 317:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 714              		.loc 1 317 3 is_stmt 1 view .LVU160
 715              	.LBB36:
 317:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 716              		.loc 1 317 3 view .LVU161
 717 0010 0094     		str	r4, [sp]
 317:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 718              		.loc 1 317 3 view .LVU162
 719 0012 184B     		ldr	r3, .L40
 720 0014 1A6B     		ldr	r2, [r3, #48]
 721 0016 42F00402 		orr	r2, r2, #4
 722 001a 1A63     		str	r2, [r3, #48]
 317:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 723              		.loc 1 317 3 view .LVU163
 724 001c 1A6B     		ldr	r2, [r3, #48]
 725 001e 02F00402 		and	r2, r2, #4
 726 0022 0092     		str	r2, [sp]
 317:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 727              		.loc 1 317 3 view .LVU164
 728 0024 009A     		ldr	r2, [sp]
 729              	.LBE36:
 317:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 730              		.loc 1 317 3 view .LVU165
 318:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 731              		.loc 1 318 3 view .LVU166
 732              	.LBB37:
 318:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 733              		.loc 1 318 3 view .LVU167
 734 0026 0194     		str	r4, [sp, #4]
 318:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 23


 735              		.loc 1 318 3 view .LVU168
 736 0028 1A6B     		ldr	r2, [r3, #48]
 737 002a 42F08002 		orr	r2, r2, #128
 738 002e 1A63     		str	r2, [r3, #48]
 318:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 739              		.loc 1 318 3 view .LVU169
 740 0030 1A6B     		ldr	r2, [r3, #48]
 741 0032 02F08002 		and	r2, r2, #128
 742 0036 0192     		str	r2, [sp, #4]
 318:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 743              		.loc 1 318 3 view .LVU170
 744 0038 019A     		ldr	r2, [sp, #4]
 745              	.LBE37:
 318:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 746              		.loc 1 318 3 view .LVU171
 319:Core/Src/main.c **** 
 747              		.loc 1 319 3 view .LVU172
 748              	.LBB38:
 319:Core/Src/main.c **** 
 749              		.loc 1 319 3 view .LVU173
 750 003a 0294     		str	r4, [sp, #8]
 319:Core/Src/main.c **** 
 751              		.loc 1 319 3 view .LVU174
 752 003c 1A6B     		ldr	r2, [r3, #48]
 753 003e 42F00202 		orr	r2, r2, #2
 754 0042 1A63     		str	r2, [r3, #48]
 319:Core/Src/main.c **** 
 755              		.loc 1 319 3 view .LVU175
 756 0044 1B6B     		ldr	r3, [r3, #48]
 757 0046 03F00203 		and	r3, r3, #2
 758 004a 0293     		str	r3, [sp, #8]
 319:Core/Src/main.c **** 
 759              		.loc 1 319 3 view .LVU176
 760 004c 029B     		ldr	r3, [sp, #8]
 761              	.LBE38:
 319:Core/Src/main.c **** 
 762              		.loc 1 319 3 view .LVU177
 322:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 763              		.loc 1 322 3 view .LVU178
 764 004e 0A4D     		ldr	r5, .L40+4
 765 0050 2246     		mov	r2, r4
 766 0052 FF21     		movs	r1, #255
 767 0054 2846     		mov	r0, r5
 768 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
 769              	.LVL73:
 327:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 770              		.loc 1 327 3 view .LVU179
 327:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 771              		.loc 1 327 23 is_stmt 0 view .LVU180
 772 005a FF23     		movs	r3, #255
 773 005c 0393     		str	r3, [sp, #12]
 329:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 774              		.loc 1 329 3 is_stmt 1 view .LVU181
 329:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 775              		.loc 1 329 24 is_stmt 0 view .LVU182
 776 005e 0123     		movs	r3, #1
 777 0060 0493     		str	r3, [sp, #16]
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 24


 330:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 778              		.loc 1 330 3 is_stmt 1 view .LVU183
 330:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 779              		.loc 1 330 24 is_stmt 0 view .LVU184
 780 0062 0594     		str	r4, [sp, #20]
 331:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 781              		.loc 1 331 3 is_stmt 1 view .LVU185
 331:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 782              		.loc 1 331 25 is_stmt 0 view .LVU186
 783 0064 0694     		str	r4, [sp, #24]
 332:Core/Src/main.c **** 
 784              		.loc 1 332 3 is_stmt 1 view .LVU187
 785 0066 03A9     		add	r1, sp, #12
 786 0068 2846     		mov	r0, r5
 787 006a FFF7FEFF 		bl	HAL_GPIO_Init
 788              	.LVL74:
 337:Core/Src/main.c **** 
 789              		.loc 1 337 1 is_stmt 0 view .LVU188
 790 006e 09B0     		add	sp, sp, #36
 791              	.LCFI12:
 792              		.cfi_def_cfa_offset 12
 793              		@ sp needed
 794 0070 30BD     		pop	{r4, r5, pc}
 795              	.L41:
 796 0072 00BF     		.align	2
 797              	.L40:
 798 0074 00380240 		.word	1073887232
 799 0078 00040240 		.word	1073873920
 800              		.cfi_endproc
 801              	.LFE139:
 803              		.section	.text.__io_putchar,"ax",%progbits
 804              		.align	1
 805              		.global	__io_putchar
 806              		.syntax unified
 807              		.thumb
 808              		.thumb_func
 810              	__io_putchar:
 811              	.LVL75:
 812              	.LFB146:
 423:Core/Src/main.c **** 
 424:Core/Src/main.c **** int __io_putchar(int ch)
 425:Core/Src/main.c **** {
 813              		.loc 1 425 1 is_stmt 1 view -0
 814              		.cfi_startproc
 815              		@ args = 0, pretend = 0, frame = 0
 816              		@ frame_needed = 0, uses_anonymous_args = 0
 817              		@ link register save eliminated.
 426:Core/Src/main.c **** 	/* Route to ITM stimulus port 0 for SWV view. Requires debugger and SWO enabled. */
 427:Core/Src/main.c **** 	if ((ITM->TCR & ITM_TCR_ITMENA_Msk) && (CoreDebug->DEMCR & CoreDebug_DEMCR_TRCENA_Msk))
 818              		.loc 1 427 2 view .LVU190
 819              		.loc 1 427 10 is_stmt 0 view .LVU191
 820 0000 4FF06043 		mov	r3, #-536870912
 821 0004 D3F8803E 		ldr	r3, [r3, #3712]
 822              		.loc 1 427 5 view .LVU192
 823 0008 13F0010F 		tst	r3, #1
 824 000c 05D0     		beq	.L43
 825              		.loc 1 427 51 discriminator 1 view .LVU193
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 25


 826 000e 094B     		ldr	r3, .L46
 827 0010 D3F8FC30 		ldr	r3, [r3, #252]
 828              		.loc 1 427 38 discriminator 1 view .LVU194
 829 0014 13F0807F 		tst	r3, #16777216
 830 0018 01D1     		bne	.L44
 831              	.L43:
 428:Core/Src/main.c **** 	{
 429:Core/Src/main.c **** 		while (ITM->PORT[0].u32 == 0) { __NOP(); }
 430:Core/Src/main.c **** 		ITM->PORT[0].u8 = (uint8_t)ch;
 431:Core/Src/main.c **** 		return ch;
 432:Core/Src/main.c **** 	}
 433:Core/Src/main.c **** 	/* Fallback: do nothing */
 434:Core/Src/main.c **** 	return ch;
 435:Core/Src/main.c **** }
 832              		.loc 1 435 1 view .LVU195
 833 001a 7047     		bx	lr
 834              	.L45:
 429:Core/Src/main.c **** 		ITM->PORT[0].u8 = (uint8_t)ch;
 835              		.loc 1 429 35 is_stmt 1 discriminator 2 view .LVU196
 836              		.syntax unified
 837              	@ 429 "Core/Src/main.c" 1
 838 001c 00BF     		nop
 839              	@ 0 "" 2
 840              		.thumb
 841              		.syntax unified
 842              	.L44:
 429:Core/Src/main.c **** 		ITM->PORT[0].u8 = (uint8_t)ch;
 843              		.loc 1 429 27 discriminator 1 view .LVU197
 429:Core/Src/main.c **** 		ITM->PORT[0].u8 = (uint8_t)ch;
 844              		.loc 1 429 22 is_stmt 0 discriminator 1 view .LVU198
 845 001e 4FF06043 		mov	r3, #-536870912
 846 0022 1B68     		ldr	r3, [r3]
 429:Core/Src/main.c **** 		ITM->PORT[0].u8 = (uint8_t)ch;
 847              		.loc 1 429 27 discriminator 1 view .LVU199
 848 0024 002B     		cmp	r3, #0
 849 0026 F9D0     		beq	.L45
 430:Core/Src/main.c **** 		return ch;
 850              		.loc 1 430 3 is_stmt 1 view .LVU200
 430:Core/Src/main.c **** 		return ch;
 851              		.loc 1 430 21 is_stmt 0 view .LVU201
 852 0028 C3B2     		uxtb	r3, r0
 430:Core/Src/main.c **** 		return ch;
 853              		.loc 1 430 19 view .LVU202
 854 002a 4FF06042 		mov	r2, #-536870912
 855 002e 1370     		strb	r3, [r2]
 431:Core/Src/main.c **** 	}
 856              		.loc 1 431 3 is_stmt 1 view .LVU203
 431:Core/Src/main.c **** 	}
 857              		.loc 1 431 10 is_stmt 0 view .LVU204
 858 0030 F3E7     		b	.L43
 859              	.L47:
 860 0032 00BF     		.align	2
 861              	.L46:
 862 0034 00ED00E0 		.word	-536810240
 863              		.cfi_endproc
 864              	.LFE146:
 866              		.section	.text.Error_Handler,"ax",%progbits
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 26


 867              		.align	1
 868              		.global	Error_Handler
 869              		.syntax unified
 870              		.thumb
 871              		.thumb_func
 873              	Error_Handler:
 874              	.LFB147:
 436:Core/Src/main.c **** 
 437:Core/Src/main.c **** /* USER CODE END 4 */
 438:Core/Src/main.c **** 
 439:Core/Src/main.c **** /**
 440:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 441:Core/Src/main.c ****   * @retval None
 442:Core/Src/main.c ****   */
 443:Core/Src/main.c **** void Error_Handler(void)
 444:Core/Src/main.c **** {
 875              		.loc 1 444 1 is_stmt 1 view -0
 876              		.cfi_startproc
 877              		@ Volatile: function does not return.
 878              		@ args = 0, pretend = 0, frame = 0
 879              		@ frame_needed = 0, uses_anonymous_args = 0
 880              		@ link register save eliminated.
 445:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 446:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 447:Core/Src/main.c ****   __disable_irq();
 881              		.loc 1 447 3 view .LVU206
 882              	.LBB39:
 883              	.LBI39:
 884              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 27


  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 28


  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 29


 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 30


 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 31


 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 32


 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 33


 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 34


 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 35


 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 36


 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 37


 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 38


 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 39


 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 40


 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 41


 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 42


 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 43


 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 885              		.loc 2 960 27 view .LVU207
 886              	.LBB40:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 887              		.loc 2 962 3 view .LVU208
 888              		.syntax unified
 889              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 890 0000 72B6     		cpsid i
 891              	@ 0 "" 2
 892              		.thumb
 893              		.syntax unified
 894              	.L49:
 895              	.LBE40:
 896              	.LBE39:
 448:Core/Src/main.c ****   while (1)
 897              		.loc 1 448 3 view .LVU209
 449:Core/Src/main.c ****   {
 450:Core/Src/main.c ****   }
 898              		.loc 1 450 3 view .LVU210
 448:Core/Src/main.c ****   while (1)
 899              		.loc 1 448 9 view .LVU211
 900 0002 FEE7     		b	.L49
 901              		.cfi_endproc
 902              	.LFE147:
 904              		.section	.text.SystemClock_Config,"ax",%progbits
 905              		.align	1
 906              		.global	SystemClock_Config
 907              		.syntax unified
 908              		.thumb
 909              		.thumb_func
 911              	SystemClock_Config:
 912              	.LFB138:
 263:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 913              		.loc 1 263 1 view -0
 914              		.cfi_startproc
 915              		@ args = 0, pretend = 0, frame = 80
 916              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 44


 917 0000 00B5     		push	{lr}
 918              	.LCFI13:
 919              		.cfi_def_cfa_offset 4
 920              		.cfi_offset 14, -4
 921 0002 95B0     		sub	sp, sp, #84
 922              	.LCFI14:
 923              		.cfi_def_cfa_offset 88
 264:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 924              		.loc 1 264 3 view .LVU213
 264:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 925              		.loc 1 264 22 is_stmt 0 view .LVU214
 926 0004 3422     		movs	r2, #52
 927 0006 0021     		movs	r1, #0
 928 0008 07A8     		add	r0, sp, #28
 929 000a FFF7FEFF 		bl	memset
 930              	.LVL76:
 265:Core/Src/main.c **** 
 931              		.loc 1 265 3 is_stmt 1 view .LVU215
 265:Core/Src/main.c **** 
 932              		.loc 1 265 22 is_stmt 0 view .LVU216
 933 000e 0023     		movs	r3, #0
 934 0010 0293     		str	r3, [sp, #8]
 935 0012 0393     		str	r3, [sp, #12]
 936 0014 0493     		str	r3, [sp, #16]
 937 0016 0593     		str	r3, [sp, #20]
 938 0018 0693     		str	r3, [sp, #24]
 269:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 939              		.loc 1 269 3 is_stmt 1 view .LVU217
 940              	.LBB41:
 269:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 941              		.loc 1 269 3 view .LVU218
 942 001a 0093     		str	r3, [sp]
 269:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 943              		.loc 1 269 3 view .LVU219
 944 001c 214A     		ldr	r2, .L56
 945 001e 116C     		ldr	r1, [r2, #64]
 946 0020 41F08051 		orr	r1, r1, #268435456
 947 0024 1164     		str	r1, [r2, #64]
 269:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 948              		.loc 1 269 3 view .LVU220
 949 0026 126C     		ldr	r2, [r2, #64]
 950 0028 02F08052 		and	r2, r2, #268435456
 951 002c 0092     		str	r2, [sp]
 269:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 952              		.loc 1 269 3 view .LVU221
 953 002e 009A     		ldr	r2, [sp]
 954              	.LBE41:
 269:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 955              		.loc 1 269 3 view .LVU222
 270:Core/Src/main.c **** 
 956              		.loc 1 270 3 view .LVU223
 957              	.LBB42:
 270:Core/Src/main.c **** 
 958              		.loc 1 270 3 view .LVU224
 959 0030 0193     		str	r3, [sp, #4]
 270:Core/Src/main.c **** 
 960              		.loc 1 270 3 view .LVU225
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 45


 961 0032 1D4A     		ldr	r2, .L56+4
 962 0034 1368     		ldr	r3, [r2]
 963 0036 23F44043 		bic	r3, r3, #49152
 964 003a 43F48043 		orr	r3, r3, #16384
 965 003e 1360     		str	r3, [r2]
 270:Core/Src/main.c **** 
 966              		.loc 1 270 3 view .LVU226
 967 0040 1368     		ldr	r3, [r2]
 968 0042 03F44043 		and	r3, r3, #49152
 969 0046 0193     		str	r3, [sp, #4]
 270:Core/Src/main.c **** 
 970              		.loc 1 270 3 view .LVU227
 971 0048 019B     		ldr	r3, [sp, #4]
 972              	.LBE42:
 270:Core/Src/main.c **** 
 973              		.loc 1 270 3 view .LVU228
 275:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 974              		.loc 1 275 3 view .LVU229
 275:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 975              		.loc 1 275 36 is_stmt 0 view .LVU230
 976 004a 0123     		movs	r3, #1
 977 004c 0793     		str	r3, [sp, #28]
 276:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 978              		.loc 1 276 3 is_stmt 1 view .LVU231
 276:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 979              		.loc 1 276 30 is_stmt 0 view .LVU232
 980 004e 4FF48033 		mov	r3, #65536
 981 0052 0893     		str	r3, [sp, #32]
 277:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 982              		.loc 1 277 3 is_stmt 1 view .LVU233
 277:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 983              		.loc 1 277 34 is_stmt 0 view .LVU234
 984 0054 0223     		movs	r3, #2
 985 0056 0D93     		str	r3, [sp, #52]
 278:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 986              		.loc 1 278 3 is_stmt 1 view .LVU235
 278:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 987              		.loc 1 278 35 is_stmt 0 view .LVU236
 988 0058 4FF48002 		mov	r2, #4194304
 989 005c 0E92     		str	r2, [sp, #56]
 279:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 990              		.loc 1 279 3 is_stmt 1 view .LVU237
 279:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 991              		.loc 1 279 30 is_stmt 0 view .LVU238
 992 005e 0F22     		movs	r2, #15
 993 0060 0F92     		str	r2, [sp, #60]
 280:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 994              		.loc 1 280 3 is_stmt 1 view .LVU239
 280:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 995              		.loc 1 280 30 is_stmt 0 view .LVU240
 996 0062 9022     		movs	r2, #144
 997 0064 1092     		str	r2, [sp, #64]
 281:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 998              		.loc 1 281 3 is_stmt 1 view .LVU241
 281:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 999              		.loc 1 281 30 is_stmt 0 view .LVU242
 1000 0066 1193     		str	r3, [sp, #68]
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 46


 282:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1001              		.loc 1 282 3 is_stmt 1 view .LVU243
 282:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1002              		.loc 1 282 30 is_stmt 0 view .LVU244
 1003 0068 1293     		str	r3, [sp, #72]
 283:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1004              		.loc 1 283 3 is_stmt 1 view .LVU245
 283:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1005              		.loc 1 283 30 is_stmt 0 view .LVU246
 1006 006a 1393     		str	r3, [sp, #76]
 284:Core/Src/main.c ****   {
 1007              		.loc 1 284 3 is_stmt 1 view .LVU247
 284:Core/Src/main.c ****   {
 1008              		.loc 1 284 7 is_stmt 0 view .LVU248
 1009 006c 07A8     		add	r0, sp, #28
 1010 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 1011              	.LVL77:
 284:Core/Src/main.c ****   {
 1012              		.loc 1 284 6 discriminator 1 view .LVU249
 1013 0072 98B9     		cbnz	r0, .L54
 291:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1014              		.loc 1 291 3 is_stmt 1 view .LVU250
 291:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1015              		.loc 1 291 31 is_stmt 0 view .LVU251
 1016 0074 0F23     		movs	r3, #15
 1017 0076 0293     		str	r3, [sp, #8]
 293:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1018              		.loc 1 293 3 is_stmt 1 view .LVU252
 293:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1019              		.loc 1 293 34 is_stmt 0 view .LVU253
 1020 0078 0223     		movs	r3, #2
 1021 007a 0393     		str	r3, [sp, #12]
 294:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1022              		.loc 1 294 3 is_stmt 1 view .LVU254
 294:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1023              		.loc 1 294 35 is_stmt 0 view .LVU255
 1024 007c 0023     		movs	r3, #0
 1025 007e 0493     		str	r3, [sp, #16]
 295:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1026              		.loc 1 295 3 is_stmt 1 view .LVU256
 295:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1027              		.loc 1 295 36 is_stmt 0 view .LVU257
 1028 0080 4FF4A053 		mov	r3, #5120
 1029 0084 0593     		str	r3, [sp, #20]
 296:Core/Src/main.c **** 
 1030              		.loc 1 296 3 is_stmt 1 view .LVU258
 296:Core/Src/main.c **** 
 1031              		.loc 1 296 36 is_stmt 0 view .LVU259
 1032 0086 4FF48053 		mov	r3, #4096
 1033 008a 0693     		str	r3, [sp, #24]
 298:Core/Src/main.c ****   {
 1034              		.loc 1 298 3 is_stmt 1 view .LVU260
 298:Core/Src/main.c ****   {
 1035              		.loc 1 298 7 is_stmt 0 view .LVU261
 1036 008c 0321     		movs	r1, #3
 1037 008e 02A8     		add	r0, sp, #8
 1038 0090 FFF7FEFF 		bl	HAL_RCC_ClockConfig
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 47


 1039              	.LVL78:
 298:Core/Src/main.c ****   {
 1040              		.loc 1 298 6 discriminator 1 view .LVU262
 1041 0094 20B9     		cbnz	r0, .L55
 302:Core/Src/main.c **** 
 1042              		.loc 1 302 1 view .LVU263
 1043 0096 15B0     		add	sp, sp, #84
 1044              	.LCFI15:
 1045              		.cfi_remember_state
 1046              		.cfi_def_cfa_offset 4
 1047              		@ sp needed
 1048 0098 5DF804FB 		ldr	pc, [sp], #4
 1049              	.L54:
 1050              	.LCFI16:
 1051              		.cfi_restore_state
 286:Core/Src/main.c ****   }
 1052              		.loc 1 286 5 is_stmt 1 view .LVU264
 1053 009c FFF7FEFF 		bl	Error_Handler
 1054              	.LVL79:
 1055              	.L55:
 300:Core/Src/main.c ****   }
 1056              		.loc 1 300 5 view .LVU265
 1057 00a0 FFF7FEFF 		bl	Error_Handler
 1058              	.LVL80:
 1059              	.L57:
 1060              		.align	2
 1061              	.L56:
 1062 00a4 00380240 		.word	1073887232
 1063 00a8 00700040 		.word	1073770496
 1064              		.cfi_endproc
 1065              	.LFE138:
 1067              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1068              		.align	2
 1069              	.LC2:
 1070 0000 0D0A4545 		.ascii	"\015\012EEE3096S Practical 3 - STM32F4 Mandelbrot B"
 1070      45333039 
 1070      36532050 
 1070      72616374 
 1070      6963616C 
 1071 002d 656E6368 		.ascii	"enchmark\015\000"
 1071      6D61726B 
 1071      0D00
 1072 0037 00       		.align	2
 1073              	.LC3:
 1074 0038 53595343 		.ascii	"SYSCLK: %lu Hz\015\012\000"
 1074      4C4B3A20 
 1074      256C7520 
 1074      487A0D0A 
 1074      00
 1075 0049 000000   		.align	2
 1076              	.LC4:
 1077 004c 0D0A3D3D 		.ascii	"\015\012=== FPU Impact Analysis: FLOAT PRECISION =="
 1077      3D204650 
 1077      5520496D 
 1077      70616374 
 1077      20416E61 
 1078 0079 3D0D00   		.ascii	"=\015\000"
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 48


 1079              		.align	2
 1080              	.LC5:
 1081 007c 464C4F41 		.ascii	"FLOAT\000"
 1081      5400
 1082 0082 0000     		.align	2
 1083              	.LC6:
 1084 0084 0D0A3D3D 		.ascii	"\015\012=== FPU Impact Analysis: DOUBLE PRECISION ="
 1084      3D204650 
 1084      5520496D 
 1084      70616374 
 1084      20416E61 
 1085 00b1 3D3D0D00 		.ascii	"==\015\000"
 1086 00b5 000000   		.align	2
 1087              	.LC7:
 1088 00b8 444F5542 		.ascii	"DOUBLE\000"
 1088      4C4500
 1089 00bf 00       		.align	2
 1090              	.LC8:
 1091 00c0 0D0A3D3D 		.ascii	"\015\012=== FPU Impact Analysis: COMPARISON ===\015"
 1091      3D204650 
 1091      5520496D 
 1091      70616374 
 1091      20416E61 
 1092 00ea 00       		.ascii	"\000"
 1093              		.global	__aeabi_dcmpeq
 1094              		.section	.text.main,"ax",%progbits
 1095              		.align	1
 1096              		.global	main
 1097              		.syntax unified
 1098              		.thumb
 1099              		.thumb_func
 1101              	main:
 1102              	.LFB137:
 115:Core/Src/main.c **** 
 1103              		.loc 1 115 1 view -0
 1104              		.cfi_startproc
 1105              		@ args = 0, pretend = 0, frame = 8
 1106              		@ frame_needed = 0, uses_anonymous_args = 0
 1107 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1108              	.LCFI17:
 1109              		.cfi_def_cfa_offset 32
 1110              		.cfi_offset 4, -32
 1111              		.cfi_offset 5, -28
 1112              		.cfi_offset 6, -24
 1113              		.cfi_offset 7, -20
 1114              		.cfi_offset 8, -16
 1115              		.cfi_offset 9, -12
 1116              		.cfi_offset 10, -8
 1117              		.cfi_offset 14, -4
 1118 0004 2DED028B 		vpush.64	{d8}
 1119              	.LCFI18:
 1120              		.cfi_def_cfa_offset 40
 1121              		.cfi_offset 80, -40
 1122              		.cfi_offset 81, -36
 1123 0008 84B0     		sub	sp, sp, #16
 1124              	.LCFI19:
 1125              		.cfi_def_cfa_offset 56
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 49


 124:Core/Src/main.c **** 
 1126              		.loc 1 124 3 view .LVU267
 1127 000a FFF7FEFF 		bl	HAL_Init
 1128              	.LVL81:
 131:Core/Src/main.c **** 
 1129              		.loc 1 131 3 view .LVU268
 1130 000e FFF7FEFF 		bl	SystemClock_Config
 1131              	.LVL82:
 138:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1132              		.loc 1 138 3 view .LVU269
 1133 0012 FFF7FEFF 		bl	MX_GPIO_Init
 1134              	.LVL83:
 140:Core/Src/main.c ****   printf("\r\nEEE3096S Practical 3 - STM32F4 Mandelbrot Benchmark\r\n");
 1135              		.loc 1 140 3 view .LVU270
 1136 0016 FFF7FEFF 		bl	dwt_cycle_counter_init
 1137              	.LVL84:
 141:Core/Src/main.c ****   printf("SYSCLK: %lu Hz\r\n", SystemCoreClock);
 1138              		.loc 1 141 3 view .LVU271
 1139 001a B948     		ldr	r0, .L75+8
 1140 001c FFF7FEFF 		bl	puts
 1141              	.LVL85:
 142:Core/Src/main.c **** 
 1142              		.loc 1 142 3 view .LVU272
 1143 0020 B84B     		ldr	r3, .L75+12
 1144 0022 1968     		ldr	r1, [r3]
 1145 0024 B848     		ldr	r0, .L75+16
 1146 0026 FFF7FEFF 		bl	printf
 1147              	.LVL86:
 1148 002a 58E1     		b	.L68
 1149              	.LVL87:
 1150              	.L60:
 1151              	.LBB43:
 1152              	.LBB44:
 163:Core/Src/main.c ****         uint16_t h = kHeights[size_index];
 1153              		.loc 1 163 9 view .LVU273
 163:Core/Src/main.c ****         uint16_t h = kHeights[size_index];
 1154              		.loc 1 163 18 is_stmt 0 view .LVU274
 1155 002c B74B     		ldr	r3, .L75+20
 1156 002e 33F81470 		ldrh	r7, [r3, r4, lsl #1]
 1157              	.LVL88:
 164:Core/Src/main.c ****         g_current_width = (uint32_t)w;
 1158              		.loc 1 164 9 is_stmt 1 view .LVU275
 164:Core/Src/main.c ****         g_current_width = (uint32_t)w;
 1159              		.loc 1 164 18 is_stmt 0 view .LVU276
 1160 0032 B74B     		ldr	r3, .L75+24
 1161 0034 33F814A0 		ldrh	r10, [r3, r4, lsl #1]
 1162              	.LVL89:
 165:Core/Src/main.c ****         g_current_height = (uint32_t)h;
 1163              		.loc 1 165 9 is_stmt 1 view .LVU277
 165:Core/Src/main.c ****         g_current_height = (uint32_t)h;
 1164              		.loc 1 165 25 is_stmt 0 view .LVU278
 1165 0038 B64B     		ldr	r3, .L75+28
 1166 003a 1F60     		str	r7, [r3]
 166:Core/Src/main.c **** 
 1167              		.loc 1 166 9 is_stmt 1 view .LVU279
 166:Core/Src/main.c **** 
 1168              		.loc 1 166 26 is_stmt 0 view .LVU280
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 50


 1169 003c B64B     		ldr	r3, .L75+32
 1170 003e C3F800A0 		str	r10, [r3]
 168:Core/Src/main.c ****         uint32_t start_cycles = dwt_get_cycles();
 1171              		.loc 1 168 9 is_stmt 1 view .LVU281
 168:Core/Src/main.c ****         uint32_t start_cycles = dwt_get_cycles();
 1172              		.loc 1 168 21 is_stmt 0 view .LVU282
 1173 0042 B64D     		ldr	r5, .L75+36
 1174 0044 0023     		movs	r3, #0
 1175 0046 6B60     		str	r3, [r5, #4]
 169:Core/Src/main.c ****         uint32_t result_checksum = generate_mandelbrot_checksum_float(w, h, kMaxIter);
 1176              		.loc 1 169 9 is_stmt 1 view .LVU283
 1177              	.LBB45:
 1178              	.LBI45:
 406:Core/Src/main.c **** {
 1179              		.loc 1 406 24 view .LVU284
 1180              	.LBB46:
 408:Core/Src/main.c **** }
 1181              		.loc 1 408 2 view .LVU285
 408:Core/Src/main.c **** }
 1182              		.loc 1 408 12 is_stmt 0 view .LVU286
 1183 0048 D5F80480 		ldr	r8, [r5, #4]
 1184              	.LVL90:
 408:Core/Src/main.c **** }
 1185              		.loc 1 408 12 view .LVU287
 1186              	.LBE46:
 1187              	.LBE45:
 170:Core/Src/main.c ****         uint32_t end_cycles = dwt_get_cycles();
 1188              		.loc 1 170 9 is_stmt 1 view .LVU288
 170:Core/Src/main.c ****         uint32_t end_cycles = dwt_get_cycles();
 1189              		.loc 1 170 36 is_stmt 0 view .LVU289
 1190 004c 6422     		movs	r2, #100
 1191 004e 5146     		mov	r1, r10
 1192 0050 3846     		mov	r0, r7
 1193 0052 FFF7FEFF 		bl	generate_mandelbrot_checksum_float
 1194              	.LVL91:
 1195 0056 0646     		mov	r6, r0
 1196              	.LVL92:
 171:Core/Src/main.c ****         uint32_t elapsed_cycles = end_cycles - start_cycles;
 1197              		.loc 1 171 9 is_stmt 1 view .LVU290
 1198              	.LBB47:
 1199              	.LBI47:
 406:Core/Src/main.c **** {
 1200              		.loc 1 406 24 view .LVU291
 1201              	.LBB48:
 408:Core/Src/main.c **** }
 1202              		.loc 1 408 2 view .LVU292
 408:Core/Src/main.c **** }
 1203              		.loc 1 408 12 is_stmt 0 view .LVU293
 1204 0058 6D68     		ldr	r5, [r5, #4]
 1205              	.LVL93:
 408:Core/Src/main.c **** }
 1206              		.loc 1 408 12 view .LVU294
 1207              	.LBE48:
 1208              	.LBE47:
 172:Core/Src/main.c ****         double elapsed_seconds = (double)elapsed_cycles / (double)SystemCoreClock;
 1209              		.loc 1 172 9 is_stmt 1 view .LVU295
 172:Core/Src/main.c ****         double elapsed_seconds = (double)elapsed_cycles / (double)SystemCoreClock;
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 51


 1210              		.loc 1 172 18 is_stmt 0 view .LVU296
 1211 005a A5EB0805 		sub	r5, r5, r8
 1212              	.LVL94:
 173:Core/Src/main.c ****         double total_pixels = (double)w * (double)h;
 1213              		.loc 1 173 9 is_stmt 1 view .LVU297
 173:Core/Src/main.c ****         double total_pixels = (double)w * (double)h;
 1214              		.loc 1 173 34 is_stmt 0 view .LVU298
 1215 005e 2846     		mov	r0, r5
 1216              	.LVL95:
 173:Core/Src/main.c ****         double total_pixels = (double)w * (double)h;
 1217              		.loc 1 173 34 view .LVU299
 1218 0060 FFF7FEFF 		bl	__aeabi_ui2d
 1219              	.LVL96:
 1220 0064 8046     		mov	r8, r0
 1221              	.LVL97:
 173:Core/Src/main.c ****         double total_pixels = (double)w * (double)h;
 1222              		.loc 1 173 34 view .LVU300
 1223 0066 8946     		mov	r9, r1
 173:Core/Src/main.c ****         double total_pixels = (double)w * (double)h;
 1224              		.loc 1 173 59 view .LVU301
 1225 0068 A64B     		ldr	r3, .L75+12
 1226 006a 1868     		ldr	r0, [r3]
 1227 006c FFF7FEFF 		bl	__aeabi_ui2d
 1228              	.LVL98:
 1229 0070 0246     		mov	r2, r0
 1230 0072 0B46     		mov	r3, r1
 173:Core/Src/main.c ****         double total_pixels = (double)w * (double)h;
 1231              		.loc 1 173 16 view .LVU302
 1232 0074 4046     		mov	r0, r8
 1233 0076 4946     		mov	r1, r9
 1234 0078 FFF7FEFF 		bl	__aeabi_ddiv
 1235              	.LVL99:
 1236 007c 8046     		mov	r8, r0
 1237 007e 8946     		mov	r9, r1
 1238              	.LVL100:
 174:Core/Src/main.c ****         double throughput = total_pixels / elapsed_seconds;
 1239              		.loc 1 174 9 is_stmt 1 view .LVU303
 174:Core/Src/main.c ****         double throughput = total_pixels / elapsed_seconds;
 1240              		.loc 1 174 31 is_stmt 0 view .LVU304
 1241 0080 3846     		mov	r0, r7
 1242 0082 FFF7FEFF 		bl	__aeabi_ui2d
 1243              	.LVL101:
 1244 0086 CDE90201 		strd	r0, [sp, #8]
 174:Core/Src/main.c ****         double throughput = total_pixels / elapsed_seconds;
 1245              		.loc 1 174 43 view .LVU305
 1246 008a 5046     		mov	r0, r10
 1247 008c FFF7FEFF 		bl	__aeabi_ui2d
 1248              	.LVL102:
 1249 0090 0246     		mov	r2, r0
 1250 0092 0B46     		mov	r3, r1
 174:Core/Src/main.c ****         double throughput = total_pixels / elapsed_seconds;
 1251              		.loc 1 174 16 view .LVU306
 1252 0094 DDE90201 		ldrd	r0, [sp, #8]
 1253 0098 FFF7FEFF 		bl	__aeabi_dmul
 1254              	.LVL103:
 175:Core/Src/main.c **** 
 1255              		.loc 1 175 9 is_stmt 1 view .LVU307
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 52


 175:Core/Src/main.c **** 
 1256              		.loc 1 175 16 is_stmt 0 view .LVU308
 1257 009c 4246     		mov	r2, r8
 1258 009e 4B46     		mov	r3, r9
 1259 00a0 FFF7FEFF 		bl	__aeabi_ddiv
 1260              	.LVL104:
 175:Core/Src/main.c **** 
 1261              		.loc 1 175 16 view .LVU309
 1262 00a4 41EC180B 		vmov	d8, r0, r1
 1263              	.LVL105:
 178:Core/Src/main.c ****         g_current_checksum = result_checksum;
 1264              		.loc 1 178 9 is_stmt 1 view .LVU310
 178:Core/Src/main.c ****         g_current_checksum = result_checksum;
 1265              		.loc 1 178 26 is_stmt 0 view .LVU311
 1266 00a8 9D4B     		ldr	r3, .L75+40
 1267 00aa 1D60     		str	r5, [r3]
 179:Core/Src/main.c ****         g_current_execution_time = elapsed_seconds * 1000.0;
 1268              		.loc 1 179 9 is_stmt 1 view .LVU312
 179:Core/Src/main.c ****         g_current_execution_time = elapsed_seconds * 1000.0;
 1269              		.loc 1 179 28 is_stmt 0 view .LVU313
 1270 00ac 9D4B     		ldr	r3, .L75+44
 1271 00ae 1E60     		str	r6, [r3]
 180:Core/Src/main.c ****         g_current_throughput = throughput;
 1272              		.loc 1 180 9 is_stmt 1 view .LVU314
 180:Core/Src/main.c ****         g_current_throughput = throughput;
 1273              		.loc 1 180 52 is_stmt 0 view .LVU315
 1274 00b0 0022     		movs	r2, #0
 1275 00b2 9D4B     		ldr	r3, .L75+48
 1276 00b4 4046     		mov	r0, r8
 1277              	.LVL106:
 180:Core/Src/main.c ****         g_current_throughput = throughput;
 1278              		.loc 1 180 52 view .LVU316
 1279 00b6 4946     		mov	r1, r9
 1280 00b8 FFF7FEFF 		bl	__aeabi_dmul
 1281              	.LVL107:
 180:Core/Src/main.c ****         g_current_throughput = throughput;
 1282              		.loc 1 180 34 view .LVU317
 1283 00bc 9B4B     		ldr	r3, .L75+52
 1284 00be C3E90001 		strd	r0, [r3]
 181:Core/Src/main.c **** 
 1285              		.loc 1 181 9 is_stmt 1 view .LVU318
 181:Core/Src/main.c **** 
 1286              		.loc 1 181 30 is_stmt 0 view .LVU319
 1287 00c2 9B4B     		ldr	r3, .L75+56
 1288 00c4 83ED008B 		vstr.64	d8, [r3]
 184:Core/Src/main.c ****         execution_time_ms_float[size_index] = elapsed_seconds * 1000.0;
 1289              		.loc 1 184 9 is_stmt 1 view .LVU320
 184:Core/Src/main.c ****         execution_time_ms_float[size_index] = elapsed_seconds * 1000.0;
 1290              		.loc 1 184 36 is_stmt 0 view .LVU321
 1291 00c8 9A4B     		ldr	r3, .L75+60
 1292 00ca 43F82460 		str	r6, [r3, r4, lsl #2]
 185:Core/Src/main.c ****         cpu_cycles_float[size_index] = elapsed_cycles;
 1293              		.loc 1 185 9 is_stmt 1 view .LVU322
 185:Core/Src/main.c ****         cpu_cycles_float[size_index] = elapsed_cycles;
 1294              		.loc 1 185 45 is_stmt 0 view .LVU323
 1295 00ce 9A4B     		ldr	r3, .L75+64
 1296 00d0 03EBC403 		add	r3, r3, r4, lsl #3
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 53


 1297 00d4 C3E90001 		strd	r0, [r3]
 186:Core/Src/main.c ****         throughput_pps_float[size_index] = throughput;
 1298              		.loc 1 186 9 is_stmt 1 view .LVU324
 186:Core/Src/main.c ****         throughput_pps_float[size_index] = throughput;
 1299              		.loc 1 186 38 is_stmt 0 view .LVU325
 1300 00d8 984B     		ldr	r3, .L75+68
 1301 00da 43F82450 		str	r5, [r3, r4, lsl #2]
 187:Core/Src/main.c **** 
 1302              		.loc 1 187 9 is_stmt 1 view .LVU326
 187:Core/Src/main.c **** 
 1303              		.loc 1 187 42 is_stmt 0 view .LVU327
 1304 00de 984B     		ldr	r3, .L75+72
 1305 00e0 03EBC403 		add	r3, r3, r4, lsl #3
 1306 00e4 83ED008B 		vstr.64	d8, [r3]
 189:Core/Src/main.c ****       }
 1307              		.loc 1 189 9 is_stmt 1 view .LVU328
 1308 00e8 964B     		ldr	r3, .L75+76
 1309 00ea 0093     		str	r3, [sp]
 1310 00ec B0EE480A 		vmov.f32	s0, s16
 1311 00f0 F0EE680A 		vmov.f32	s1, s17
 1312 00f4 3346     		mov	r3, r6
 1313 00f6 2A46     		mov	r2, r5
 1314 00f8 5146     		mov	r1, r10
 1315 00fa 3846     		mov	r0, r7
 1316 00fc FFF7FEFF 		bl	log_fpu_benchmark
 1317              	.LVL108:
 1318              	.LBE44:
 161:Core/Src/main.c ****       {
 1319              		.loc 1 161 67 discriminator 3 view .LVU329
 1320 0100 0134     		adds	r4, r4, #1
 1321              	.LVL109:
 1322              	.L59:
 161:Core/Src/main.c ****       {
 1323              		.loc 1 161 48 discriminator 1 view .LVU330
 1324 0102 042C     		cmp	r4, #4
 1325 0104 92D9     		bls	.L60
 1326              	.LBE43:
 193:Core/Src/main.c ****       printf("\r\n=== FPU Impact Analysis: DOUBLE PRECISION ===\r\n");
 1327              		.loc 1 193 7 view .LVU331
 193:Core/Src/main.c ****       printf("\r\n=== FPU Impact Analysis: DOUBLE PRECISION ===\r\n");
 1328              		.loc 1 193 27 is_stmt 0 view .LVU332
 1329 0106 904B     		ldr	r3, .L75+80
 1330 0108 0122     		movs	r2, #1
 1331 010a 1A60     		str	r2, [r3]
 194:Core/Src/main.c ****       for (uint32_t size_index = 0; size_index < kNumResolutions; ++size_index)
 1332              		.loc 1 194 7 is_stmt 1 view .LVU333
 1333 010c 8F48     		ldr	r0, .L75+84
 1334 010e FFF7FEFF 		bl	puts
 1335              	.LVL110:
 195:Core/Src/main.c ****       {
 1336              		.loc 1 195 7 view .LVU334
 1337              	.LBB49:
 195:Core/Src/main.c ****       {
 1338              		.loc 1 195 12 view .LVU335
 195:Core/Src/main.c ****       {
 1339              		.loc 1 195 21 is_stmt 0 view .LVU336
 1340 0112 0024     		movs	r4, #0
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 54


 1341              	.LVL111:
 195:Core/Src/main.c ****       {
 1342              		.loc 1 195 7 view .LVU337
 1343 0114 6AE0     		b	.L61
 1344              	.LVL112:
 1345              	.L62:
 1346              	.LBB50:
 197:Core/Src/main.c ****         uint16_t h = kHeights[size_index];
 1347              		.loc 1 197 9 is_stmt 1 view .LVU338
 197:Core/Src/main.c ****         uint16_t h = kHeights[size_index];
 1348              		.loc 1 197 18 is_stmt 0 view .LVU339
 1349 0116 7D4B     		ldr	r3, .L75+20
 1350 0118 33F81470 		ldrh	r7, [r3, r4, lsl #1]
 1351              	.LVL113:
 198:Core/Src/main.c ****         g_current_width = (uint32_t)w;
 1352              		.loc 1 198 9 is_stmt 1 view .LVU340
 198:Core/Src/main.c ****         g_current_width = (uint32_t)w;
 1353              		.loc 1 198 18 is_stmt 0 view .LVU341
 1354 011c 7C4B     		ldr	r3, .L75+24
 1355 011e 33F814A0 		ldrh	r10, [r3, r4, lsl #1]
 1356              	.LVL114:
 199:Core/Src/main.c ****         g_current_height = (uint32_t)h;
 1357              		.loc 1 199 9 is_stmt 1 view .LVU342
 199:Core/Src/main.c ****         g_current_height = (uint32_t)h;
 1358              		.loc 1 199 25 is_stmt 0 view .LVU343
 1359 0122 7C4B     		ldr	r3, .L75+28
 1360 0124 1F60     		str	r7, [r3]
 200:Core/Src/main.c **** 
 1361              		.loc 1 200 9 is_stmt 1 view .LVU344
 200:Core/Src/main.c **** 
 1362              		.loc 1 200 26 is_stmt 0 view .LVU345
 1363 0126 7C4B     		ldr	r3, .L75+32
 1364 0128 C3F800A0 		str	r10, [r3]
 202:Core/Src/main.c ****         uint32_t start_cycles = dwt_get_cycles();
 1365              		.loc 1 202 9 is_stmt 1 view .LVU346
 202:Core/Src/main.c ****         uint32_t start_cycles = dwt_get_cycles();
 1366              		.loc 1 202 21 is_stmt 0 view .LVU347
 1367 012c 7B4D     		ldr	r5, .L75+36
 1368 012e 0023     		movs	r3, #0
 1369 0130 6B60     		str	r3, [r5, #4]
 203:Core/Src/main.c ****         uint32_t result_checksum = generate_mandelbrot_checksum_double(w, h, kMaxIter);
 1370              		.loc 1 203 9 is_stmt 1 view .LVU348
 1371              	.LBB51:
 1372              	.LBI51:
 406:Core/Src/main.c **** {
 1373              		.loc 1 406 24 view .LVU349
 1374              	.LBB52:
 408:Core/Src/main.c **** }
 1375              		.loc 1 408 2 view .LVU350
 408:Core/Src/main.c **** }
 1376              		.loc 1 408 12 is_stmt 0 view .LVU351
 1377 0132 D5F80480 		ldr	r8, [r5, #4]
 1378              	.LVL115:
 408:Core/Src/main.c **** }
 1379              		.loc 1 408 12 view .LVU352
 1380              	.LBE52:
 1381              	.LBE51:
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 55


 204:Core/Src/main.c ****         uint32_t end_cycles = dwt_get_cycles();
 1382              		.loc 1 204 9 is_stmt 1 view .LVU353
 204:Core/Src/main.c ****         uint32_t end_cycles = dwt_get_cycles();
 1383              		.loc 1 204 36 is_stmt 0 view .LVU354
 1384 0136 6422     		movs	r2, #100
 1385 0138 5146     		mov	r1, r10
 1386 013a 3846     		mov	r0, r7
 1387 013c FFF7FEFF 		bl	generate_mandelbrot_checksum_double
 1388              	.LVL116:
 1389 0140 0646     		mov	r6, r0
 1390              	.LVL117:
 205:Core/Src/main.c ****         uint32_t elapsed_cycles = end_cycles - start_cycles;
 1391              		.loc 1 205 9 is_stmt 1 view .LVU355
 1392              	.LBB53:
 1393              	.LBI53:
 406:Core/Src/main.c **** {
 1394              		.loc 1 406 24 view .LVU356
 1395              	.LBB54:
 408:Core/Src/main.c **** }
 1396              		.loc 1 408 2 view .LVU357
 408:Core/Src/main.c **** }
 1397              		.loc 1 408 12 is_stmt 0 view .LVU358
 1398 0142 6D68     		ldr	r5, [r5, #4]
 1399              	.LVL118:
 408:Core/Src/main.c **** }
 1400              		.loc 1 408 12 view .LVU359
 1401              	.LBE54:
 1402              	.LBE53:
 206:Core/Src/main.c ****         double elapsed_seconds = (double)elapsed_cycles / (double)SystemCoreClock;
 1403              		.loc 1 206 9 is_stmt 1 view .LVU360
 206:Core/Src/main.c ****         double elapsed_seconds = (double)elapsed_cycles / (double)SystemCoreClock;
 1404              		.loc 1 206 18 is_stmt 0 view .LVU361
 1405 0144 A5EB0805 		sub	r5, r5, r8
 1406              	.LVL119:
 207:Core/Src/main.c ****         double total_pixels = (double)w * (double)h;
 1407              		.loc 1 207 9 is_stmt 1 view .LVU362
 207:Core/Src/main.c ****         double total_pixels = (double)w * (double)h;
 1408              		.loc 1 207 34 is_stmt 0 view .LVU363
 1409 0148 2846     		mov	r0, r5
 1410              	.LVL120:
 207:Core/Src/main.c ****         double total_pixels = (double)w * (double)h;
 1411              		.loc 1 207 34 view .LVU364
 1412 014a FFF7FEFF 		bl	__aeabi_ui2d
 1413              	.LVL121:
 1414 014e 8046     		mov	r8, r0
 1415              	.LVL122:
 207:Core/Src/main.c ****         double total_pixels = (double)w * (double)h;
 1416              		.loc 1 207 34 view .LVU365
 1417 0150 8946     		mov	r9, r1
 207:Core/Src/main.c ****         double total_pixels = (double)w * (double)h;
 1418              		.loc 1 207 59 view .LVU366
 1419 0152 6C4B     		ldr	r3, .L75+12
 1420 0154 1868     		ldr	r0, [r3]
 1421 0156 FFF7FEFF 		bl	__aeabi_ui2d
 1422              	.LVL123:
 1423 015a 0246     		mov	r2, r0
 1424 015c 0B46     		mov	r3, r1
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 56


 207:Core/Src/main.c ****         double total_pixels = (double)w * (double)h;
 1425              		.loc 1 207 16 view .LVU367
 1426 015e 4046     		mov	r0, r8
 1427 0160 4946     		mov	r1, r9
 1428 0162 FFF7FEFF 		bl	__aeabi_ddiv
 1429              	.LVL124:
 1430 0166 8046     		mov	r8, r0
 1431 0168 8946     		mov	r9, r1
 1432              	.LVL125:
 208:Core/Src/main.c ****         double throughput = total_pixels / elapsed_seconds;
 1433              		.loc 1 208 9 is_stmt 1 view .LVU368
 208:Core/Src/main.c ****         double throughput = total_pixels / elapsed_seconds;
 1434              		.loc 1 208 31 is_stmt 0 view .LVU369
 1435 016a 3846     		mov	r0, r7
 1436 016c FFF7FEFF 		bl	__aeabi_ui2d
 1437              	.LVL126:
 1438 0170 CDE90201 		strd	r0, [sp, #8]
 208:Core/Src/main.c ****         double throughput = total_pixels / elapsed_seconds;
 1439              		.loc 1 208 43 view .LVU370
 1440 0174 5046     		mov	r0, r10
 1441 0176 FFF7FEFF 		bl	__aeabi_ui2d
 1442              	.LVL127:
 1443 017a 0246     		mov	r2, r0
 1444 017c 0B46     		mov	r3, r1
 208:Core/Src/main.c ****         double throughput = total_pixels / elapsed_seconds;
 1445              		.loc 1 208 16 view .LVU371
 1446 017e DDE90201 		ldrd	r0, [sp, #8]
 1447 0182 FFF7FEFF 		bl	__aeabi_dmul
 1448              	.LVL128:
 209:Core/Src/main.c **** 
 1449              		.loc 1 209 9 is_stmt 1 view .LVU372
 209:Core/Src/main.c **** 
 1450              		.loc 1 209 16 is_stmt 0 view .LVU373
 1451 0186 4246     		mov	r2, r8
 1452 0188 4B46     		mov	r3, r9
 1453 018a FFF7FEFF 		bl	__aeabi_ddiv
 1454              	.LVL129:
 209:Core/Src/main.c **** 
 1455              		.loc 1 209 16 view .LVU374
 1456 018e 41EC180B 		vmov	d8, r0, r1
 1457              	.LVL130:
 212:Core/Src/main.c ****         g_current_checksum = result_checksum;
 1458              		.loc 1 212 9 is_stmt 1 view .LVU375
 212:Core/Src/main.c ****         g_current_checksum = result_checksum;
 1459              		.loc 1 212 26 is_stmt 0 view .LVU376
 1460 0192 634B     		ldr	r3, .L75+40
 1461 0194 1D60     		str	r5, [r3]
 213:Core/Src/main.c ****         g_current_execution_time = elapsed_seconds * 1000.0;
 1462              		.loc 1 213 9 is_stmt 1 view .LVU377
 213:Core/Src/main.c ****         g_current_execution_time = elapsed_seconds * 1000.0;
 1463              		.loc 1 213 28 is_stmt 0 view .LVU378
 1464 0196 634B     		ldr	r3, .L75+44
 1465 0198 1E60     		str	r6, [r3]
 214:Core/Src/main.c ****         g_current_throughput = throughput;
 1466              		.loc 1 214 9 is_stmt 1 view .LVU379
 214:Core/Src/main.c ****         g_current_throughput = throughput;
 1467              		.loc 1 214 52 is_stmt 0 view .LVU380
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 57


 1468 019a 0022     		movs	r2, #0
 1469 019c 624B     		ldr	r3, .L75+48
 1470 019e 4046     		mov	r0, r8
 1471              	.LVL131:
 214:Core/Src/main.c ****         g_current_throughput = throughput;
 1472              		.loc 1 214 52 view .LVU381
 1473 01a0 4946     		mov	r1, r9
 1474 01a2 FFF7FEFF 		bl	__aeabi_dmul
 1475              	.LVL132:
 214:Core/Src/main.c ****         g_current_throughput = throughput;
 1476              		.loc 1 214 34 view .LVU382
 1477 01a6 614B     		ldr	r3, .L75+52
 1478 01a8 C3E90001 		strd	r0, [r3]
 215:Core/Src/main.c **** 
 1479              		.loc 1 215 9 is_stmt 1 view .LVU383
 215:Core/Src/main.c **** 
 1480              		.loc 1 215 30 is_stmt 0 view .LVU384
 1481 01ac 604B     		ldr	r3, .L75+56
 1482 01ae 83ED008B 		vstr.64	d8, [r3]
 218:Core/Src/main.c ****         execution_time_ms_double[size_index] = elapsed_seconds * 1000.0;
 1483              		.loc 1 218 9 is_stmt 1 view .LVU385
 218:Core/Src/main.c ****         execution_time_ms_double[size_index] = elapsed_seconds * 1000.0;
 1484              		.loc 1 218 37 is_stmt 0 view .LVU386
 1485 01b2 674B     		ldr	r3, .L75+88
 1486 01b4 43F82460 		str	r6, [r3, r4, lsl #2]
 219:Core/Src/main.c ****         cpu_cycles_double[size_index] = elapsed_cycles;
 1487              		.loc 1 219 9 is_stmt 1 view .LVU387
 219:Core/Src/main.c ****         cpu_cycles_double[size_index] = elapsed_cycles;
 1488              		.loc 1 219 46 is_stmt 0 view .LVU388
 1489 01b8 664B     		ldr	r3, .L75+92
 1490 01ba 03EBC403 		add	r3, r3, r4, lsl #3
 1491 01be C3E90001 		strd	r0, [r3]
 220:Core/Src/main.c ****         throughput_pps_double[size_index] = throughput;
 1492              		.loc 1 220 9 is_stmt 1 view .LVU389
 220:Core/Src/main.c ****         throughput_pps_double[size_index] = throughput;
 1493              		.loc 1 220 39 is_stmt 0 view .LVU390
 1494 01c2 654B     		ldr	r3, .L75+96
 1495 01c4 43F82450 		str	r5, [r3, r4, lsl #2]
 221:Core/Src/main.c **** 
 1496              		.loc 1 221 9 is_stmt 1 view .LVU391
 221:Core/Src/main.c **** 
 1497              		.loc 1 221 43 is_stmt 0 view .LVU392
 1498 01c8 644B     		ldr	r3, .L75+100
 1499 01ca 03EBC403 		add	r3, r3, r4, lsl #3
 1500 01ce 83ED008B 		vstr.64	d8, [r3]
 223:Core/Src/main.c ****       }
 1501              		.loc 1 223 9 is_stmt 1 view .LVU393
 1502 01d2 634B     		ldr	r3, .L75+104
 1503 01d4 0093     		str	r3, [sp]
 1504 01d6 B0EE480A 		vmov.f32	s0, s16
 1505 01da F0EE680A 		vmov.f32	s1, s17
 1506 01de 3346     		mov	r3, r6
 1507 01e0 2A46     		mov	r2, r5
 1508 01e2 5146     		mov	r1, r10
 1509 01e4 3846     		mov	r0, r7
 1510 01e6 FFF7FEFF 		bl	log_fpu_benchmark
 1511              	.LVL133:
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 58


 1512              	.LBE50:
 195:Core/Src/main.c ****       {
 1513              		.loc 1 195 67 discriminator 3 view .LVU394
 1514 01ea 0134     		adds	r4, r4, #1
 1515              	.LVL134:
 1516              	.L61:
 195:Core/Src/main.c ****       {
 1517              		.loc 1 195 48 discriminator 1 view .LVU395
 1518 01ec 042C     		cmp	r4, #4
 1519 01ee 92D9     		bls	.L62
 1520              	.LBE49:
 227:Core/Src/main.c ****       for (uint32_t size_index = 0; size_index < kNumResolutions; ++size_index)
 1521              		.loc 1 227 7 view .LVU396
 1522 01f0 5C48     		ldr	r0, .L75+108
 1523 01f2 FFF7FEFF 		bl	puts
 1524              	.LVL135:
 228:Core/Src/main.c ****       {
 1525              		.loc 1 228 7 view .LVU397
 1526              	.LBB55:
 228:Core/Src/main.c ****       {
 1527              		.loc 1 228 12 view .LVU398
 228:Core/Src/main.c ****       {
 1528              		.loc 1 228 21 is_stmt 0 view .LVU399
 1529 01f6 0024     		movs	r4, #0
 1530              	.LVL136:
 228:Core/Src/main.c ****       {
 1531              		.loc 1 228 7 view .LVU400
 1532 01f8 14E0     		b	.L63
 1533              	.LVL137:
 1534              	.L69:
 1535              	.LBB56:
 234:Core/Src/main.c ****         if (checksum_double[size_index] != 0) {
 1536              		.loc 1 234 16 view .LVU401
 1537 01fa 0020     		movs	r0, #0
 1538 01fc 0021     		movs	r1, #0
 1539 01fe 40E0     		b	.L64
 1540              	.LVL138:
 1541              	.L72:
 241:Core/Src/main.c ****         if (execution_time_ms_float[size_index] != 0) {
 1542              		.loc 1 241 16 view .LVU402
 1543 0200 9FED3D0B 		vldr.64	d0, .L75
 1544              	.LVL139:
 1545              	.L65:
 245:Core/Src/main.c ****         
 1546              		.loc 1 245 9 is_stmt 1 view .LVU403
 245:Core/Src/main.c ****         
 1547              		.loc 1 245 36 is_stmt 0 view .LVU404
 1548 0204 584B     		ldr	r3, .L75+112
 1549 0206 03EBC403 		add	r3, r3, r4, lsl #3
 1550 020a 83ED000B 		vstr.64	d0, [r3]
 247:Core/Src/main.c ****       }
 1551              		.loc 1 247 9 is_stmt 1 view .LVU405
 247:Core/Src/main.c ****       }
 1552              		.loc 1 247 48 is_stmt 0 view .LVU406
 1553 020e 494B     		ldr	r3, .L75+60
 1554 0210 53F82420 		ldr	r2, [r3, r4, lsl #2]
 247:Core/Src/main.c ****       }
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 59


 1555              		.loc 1 247 77 view .LVU407
 1556 0214 4E4B     		ldr	r3, .L75+88
 1557 0216 53F82430 		ldr	r3, [r3, r4, lsl #2]
 247:Core/Src/main.c ****       }
 1558              		.loc 1 247 9 view .LVU408
 1559 021a 3146     		mov	r1, r6
 1560 021c 2846     		mov	r0, r5
 1561 021e FFF7FEFF 		bl	log_fpu_comparison
 1562              	.LVL140:
 247:Core/Src/main.c ****       }
 1563              		.loc 1 247 9 view .LVU409
 1564              	.LBE56:
 228:Core/Src/main.c ****       {
 1565              		.loc 1 228 67 is_stmt 1 discriminator 2 view .LVU410
 1566 0222 0134     		adds	r4, r4, #1
 1567              	.LVL141:
 1568              	.L63:
 228:Core/Src/main.c ****       {
 1569              		.loc 1 228 48 discriminator 1 view .LVU411
 1570 0224 042C     		cmp	r4, #4
 1571 0226 4BD8     		bhi	.L74
 1572              	.LBB57:
 230:Core/Src/main.c ****         uint16_t h = kHeights[size_index];
 1573              		.loc 1 230 9 view .LVU412
 230:Core/Src/main.c ****         uint16_t h = kHeights[size_index];
 1574              		.loc 1 230 18 is_stmt 0 view .LVU413
 1575 0228 384B     		ldr	r3, .L75+20
 1576 022a 33F81450 		ldrh	r5, [r3, r4, lsl #1]
 1577              	.LVL142:
 231:Core/Src/main.c ****         
 1578              		.loc 1 231 9 is_stmt 1 view .LVU414
 231:Core/Src/main.c ****         
 1579              		.loc 1 231 18 is_stmt 0 view .LVU415
 1580 022e 384B     		ldr	r3, .L75+24
 1581 0230 33F81460 		ldrh	r6, [r3, r4, lsl #1]
 1582              	.LVL143:
 234:Core/Src/main.c ****         if (checksum_double[size_index] != 0) {
 1583              		.loc 1 234 9 is_stmt 1 view .LVU416
 235:Core/Src/main.c ****           accuracy_diff = ((double)checksum_float[size_index] - (double)checksum_double[size_index]
 1584              		.loc 1 235 9 view .LVU417
 235:Core/Src/main.c ****           accuracy_diff = ((double)checksum_float[size_index] - (double)checksum_double[size_index]
 1585              		.loc 1 235 28 is_stmt 0 view .LVU418
 1586 0234 464B     		ldr	r3, .L75+88
 1587 0236 53F82430 		ldr	r3, [r3, r4, lsl #2]
 235:Core/Src/main.c ****           accuracy_diff = ((double)checksum_float[size_index] - (double)checksum_double[size_index]
 1588              		.loc 1 235 12 view .LVU419
 1589 023a 002B     		cmp	r3, #0
 1590 023c DDD0     		beq	.L69
 236:Core/Src/main.c ****         }
 1591              		.loc 1 236 11 is_stmt 1 view .LVU420
 236:Core/Src/main.c ****         }
 1592              		.loc 1 236 50 is_stmt 0 view .LVU421
 1593 023e 3D4B     		ldr	r3, .L75+60
 1594 0240 53F82400 		ldr	r0, [r3, r4, lsl #2]
 236:Core/Src/main.c ****         }
 1595              		.loc 1 236 28 view .LVU422
 1596 0244 FFF7FEFF 		bl	__aeabi_ui2d
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 60


 1597              	.LVL144:
 1598 0248 8046     		mov	r8, r0
 1599 024a 8946     		mov	r9, r1
 236:Core/Src/main.c ****         }
 1600              		.loc 1 236 88 view .LVU423
 1601 024c 404F     		ldr	r7, .L75+88
 1602 024e 57F82400 		ldr	r0, [r7, r4, lsl #2]
 236:Core/Src/main.c ****         }
 1603              		.loc 1 236 65 view .LVU424
 1604 0252 FFF7FEFF 		bl	__aeabi_ui2d
 1605              	.LVL145:
 1606 0256 0246     		mov	r2, r0
 1607 0258 0B46     		mov	r3, r1
 236:Core/Src/main.c ****         }
 1608              		.loc 1 236 63 view .LVU425
 1609 025a 4046     		mov	r0, r8
 1610 025c 4946     		mov	r1, r9
 1611 025e FFF7FEFF 		bl	__aeabi_dsub
 1612              	.LVL146:
 1613 0262 8046     		mov	r8, r0
 1614 0264 8946     		mov	r9, r1
 236:Core/Src/main.c ****         }
 1615              		.loc 1 236 127 view .LVU426
 1616 0266 57F82400 		ldr	r0, [r7, r4, lsl #2]
 236:Core/Src/main.c ****         }
 1617              		.loc 1 236 104 view .LVU427
 1618 026a FFF7FEFF 		bl	__aeabi_ui2d
 1619              	.LVL147:
 1620 026e 0246     		mov	r2, r0
 1621 0270 0B46     		mov	r3, r1
 236:Core/Src/main.c ****         }
 1622              		.loc 1 236 102 view .LVU428
 1623 0272 4046     		mov	r0, r8
 1624 0274 4946     		mov	r1, r9
 1625 0276 FFF7FEFF 		bl	__aeabi_ddiv
 1626              	.LVL148:
 236:Core/Src/main.c ****         }
 1627              		.loc 1 236 25 view .LVU429
 1628 027a 0022     		movs	r2, #0
 1629 027c 3B4B     		ldr	r3, .L75+116
 1630 027e FFF7FEFF 		bl	__aeabi_dmul
 1631              	.LVL149:
 1632              	.L64:
 238:Core/Src/main.c ****         
 1633              		.loc 1 238 9 is_stmt 1 view .LVU430
 238:Core/Src/main.c ****         
 1634              		.loc 1 238 43 is_stmt 0 view .LVU431
 1635 0282 3B4B     		ldr	r3, .L75+120
 1636 0284 03EBC403 		add	r3, r3, r4, lsl #3
 1637 0288 C3E90001 		strd	r0, [r3]
 241:Core/Src/main.c ****         if (execution_time_ms_float[size_index] != 0) {
 1638              		.loc 1 241 9 is_stmt 1 view .LVU432
 1639              	.LVL150:
 242:Core/Src/main.c ****           speedup = execution_time_ms_double[size_index] / execution_time_ms_float[size_index];
 1640              		.loc 1 242 9 view .LVU433
 242:Core/Src/main.c ****           speedup = execution_time_ms_double[size_index] / execution_time_ms_float[size_index];
 1641              		.loc 1 242 36 is_stmt 0 view .LVU434
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 61


 1642 028c 2A49     		ldr	r1, .L75+64
 1643 028e 01EBC401 		add	r1, r1, r4, lsl #3
 242:Core/Src/main.c ****           speedup = execution_time_ms_double[size_index] / execution_time_ms_float[size_index];
 1644              		.loc 1 242 12 view .LVU435
 1645 0292 0022     		movs	r2, #0
 1646 0294 0023     		movs	r3, #0
 1647 0296 D1E90001 		ldrd	r0, [r1]
 1648              	.LVL151:
 242:Core/Src/main.c ****           speedup = execution_time_ms_double[size_index] / execution_time_ms_float[size_index];
 1649              		.loc 1 242 12 view .LVU436
 1650 029a FFF7FEFF 		bl	__aeabi_dcmpeq
 1651              	.LVL152:
 242:Core/Src/main.c ****           speedup = execution_time_ms_double[size_index] / execution_time_ms_float[size_index];
 1652              		.loc 1 242 12 view .LVU437
 1653 029e 0028     		cmp	r0, #0
 1654 02a0 AED1     		bne	.L72
 243:Core/Src/main.c ****         }
 1655              		.loc 1 243 11 is_stmt 1 view .LVU438
 243:Core/Src/main.c ****         }
 1656              		.loc 1 243 45 is_stmt 0 view .LVU439
 1657 02a2 2C4B     		ldr	r3, .L75+92
 1658 02a4 03EBC403 		add	r3, r3, r4, lsl #3
 1659 02a8 D3E90001 		ldrd	r0, [r3]
 243:Core/Src/main.c ****         }
 1660              		.loc 1 243 83 view .LVU440
 1661 02ac 224B     		ldr	r3, .L75+64
 1662 02ae 03EBC403 		add	r3, r3, r4, lsl #3
 243:Core/Src/main.c ****         }
 1663              		.loc 1 243 19 view .LVU441
 1664 02b2 D3E90023 		ldrd	r2, [r3]
 1665 02b6 FFF7FEFF 		bl	__aeabi_ddiv
 1666              	.LVL153:
 1667 02ba 41EC100B 		vmov	d0, r0, r1
 1668              	.LVL154:
 243:Core/Src/main.c ****         }
 1669              		.loc 1 243 19 view .LVU442
 1670 02be A1E7     		b	.L65
 1671              	.LVL155:
 1672              	.L74:
 243:Core/Src/main.c ****         }
 1673              		.loc 1 243 19 view .LVU443
 1674              	.LBE57:
 1675              	.LBE55:
 251:Core/Src/main.c ****       HAL_Delay(2000);
 1676              		.loc 1 251 7 is_stmt 1 view .LVU444
 1677 02c0 2C4C     		ldr	r4, .L75+124
 1678              	.LVL156:
 251:Core/Src/main.c ****       HAL_Delay(2000);
 1679              		.loc 1 251 7 is_stmt 0 view .LVU445
 1680 02c2 0122     		movs	r2, #1
 1681 02c4 0221     		movs	r1, #2
 1682 02c6 2046     		mov	r0, r4
 1683 02c8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1684              	.LVL157:
 252:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0 | GPIO_PIN_1, GPIO_PIN_RESET);
 1685              		.loc 1 252 7 is_stmt 1 view .LVU446
 1686 02cc 4FF4FA60 		mov	r0, #2000
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 62


 1687 02d0 FFF7FEFF 		bl	HAL_Delay
 1688              	.LVL158:
 253:Core/Src/main.c ****   }
 1689              		.loc 1 253 7 view .LVU447
 1690 02d4 0022     		movs	r2, #0
 1691 02d6 0321     		movs	r1, #3
 1692 02d8 2046     		mov	r0, r4
 1693 02da FFF7FEFF 		bl	HAL_GPIO_WritePin
 1694              	.LVL159:
 148:Core/Src/main.c ****   {
 1695              		.loc 1 148 9 view .LVU448
 1696              	.L68:
 148:Core/Src/main.c ****   {
 1697              		.loc 1 148 3 view .LVU449
 154:Core/Src/main.c **** 
 1698              		.loc 1 154 7 view .LVU450
 1699 02de 0122     		movs	r2, #1
 1700 02e0 1146     		mov	r1, r2
 1701 02e2 2448     		ldr	r0, .L75+124
 1702 02e4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1703              	.LVL160:
 159:Core/Src/main.c ****       printf("\r\n=== FPU Impact Analysis: FLOAT PRECISION ===\r\n");
 1704              		.loc 1 159 7 view .LVU451
 159:Core/Src/main.c ****       printf("\r\n=== FPU Impact Analysis: FLOAT PRECISION ===\r\n");
 1705              		.loc 1 159 27 is_stmt 0 view .LVU452
 1706 02e8 0024     		movs	r4, #0
 1707 02ea 174B     		ldr	r3, .L75+80
 1708 02ec 1C60     		str	r4, [r3]
 160:Core/Src/main.c ****       for (uint32_t size_index = 0; size_index < kNumResolutions; ++size_index)
 1709              		.loc 1 160 7 is_stmt 1 view .LVU453
 1710 02ee 2248     		ldr	r0, .L75+128
 1711 02f0 FFF7FEFF 		bl	puts
 1712              	.LVL161:
 161:Core/Src/main.c ****       {
 1713              		.loc 1 161 7 view .LVU454
 1714              	.LBB58:
 161:Core/Src/main.c ****       {
 1715              		.loc 1 161 12 view .LVU455
 161:Core/Src/main.c ****       {
 1716              		.loc 1 161 7 is_stmt 0 view .LVU456
 1717 02f4 05E7     		b	.L59
 1718              	.L76:
 1719 02f6 00BF     		.align	3
 1720              	.L75:
 1721 02f8 00000000 		.word	0
 1722 02fc 00000000 		.word	0
 1723 0300 00000000 		.word	.LC2
 1724 0304 00000000 		.word	SystemCoreClock
 1725 0308 38000000 		.word	.LC3
 1726 030c 00000000 		.word	kWidths
 1727 0310 00000000 		.word	kHeights
 1728 0314 00000000 		.word	g_current_width
 1729 0318 00000000 		.word	g_current_height
 1730 031c 001000E0 		.word	-536866816
 1731 0320 00000000 		.word	g_current_cycles
 1732 0324 00000000 		.word	g_current_checksum
 1733 0328 00408F40 		.word	1083129856
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 63


 1734 032c 00000000 		.word	g_current_execution_time
 1735 0330 00000000 		.word	g_current_throughput
 1736 0334 00000000 		.word	checksum_float
 1737 0338 00000000 		.word	execution_time_ms_float
 1738 033c 00000000 		.word	cpu_cycles_float
 1739 0340 00000000 		.word	throughput_pps_float
 1740 0344 7C000000 		.word	.LC5
 1741 0348 00000000 		.word	g_current_test_mode
 1742 034c 84000000 		.word	.LC6
 1743 0350 00000000 		.word	checksum_double
 1744 0354 00000000 		.word	execution_time_ms_double
 1745 0358 00000000 		.word	cpu_cycles_double
 1746 035c 00000000 		.word	throughput_pps_double
 1747 0360 B8000000 		.word	.LC7
 1748 0364 C0000000 		.word	.LC8
 1749 0368 00000000 		.word	speedup_factor
 1750 036c 00005940 		.word	1079574528
 1751 0370 00000000 		.word	accuracy_diff_percent
 1752 0374 00040240 		.word	1073873920
 1753 0378 4C000000 		.word	.LC4
 1754              	.LBE58:
 1755              		.cfi_endproc
 1756              	.LFE137:
 1758              		.global	g_fpu_enabled
 1759              		.section	.data.g_fpu_enabled,"aw"
 1760              		.align	2
 1763              	g_fpu_enabled:
 1764 0000 01000000 		.word	1
 1765              		.global	g_current_test_mode
 1766              		.section	.bss.g_current_test_mode,"aw",%nobits
 1767              		.align	2
 1770              	g_current_test_mode:
 1771 0000 00000000 		.space	4
 1772              		.global	speedup_factor
 1773              		.section	.bss.speedup_factor,"aw",%nobits
 1774              		.align	3
 1777              	speedup_factor:
 1778 0000 00000000 		.space	40
 1778      00000000 
 1778      00000000 
 1778      00000000 
 1778      00000000 
 1779              		.global	accuracy_diff_percent
 1780              		.section	.bss.accuracy_diff_percent,"aw",%nobits
 1781              		.align	3
 1784              	accuracy_diff_percent:
 1785 0000 00000000 		.space	40
 1785      00000000 
 1785      00000000 
 1785      00000000 
 1785      00000000 
 1786              		.global	throughput_pps_double
 1787              		.section	.bss.throughput_pps_double,"aw",%nobits
 1788              		.align	3
 1791              	throughput_pps_double:
 1792 0000 00000000 		.space	40
 1792      00000000 
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 64


 1792      00000000 
 1792      00000000 
 1792      00000000 
 1793              		.global	cpu_cycles_double
 1794              		.section	.bss.cpu_cycles_double,"aw",%nobits
 1795              		.align	2
 1798              	cpu_cycles_double:
 1799 0000 00000000 		.space	20
 1799      00000000 
 1799      00000000 
 1799      00000000 
 1799      00000000 
 1800              		.global	execution_time_ms_double
 1801              		.section	.bss.execution_time_ms_double,"aw",%nobits
 1802              		.align	3
 1805              	execution_time_ms_double:
 1806 0000 00000000 		.space	40
 1806      00000000 
 1806      00000000 
 1806      00000000 
 1806      00000000 
 1807              		.global	checksum_double
 1808              		.section	.bss.checksum_double,"aw",%nobits
 1809              		.align	2
 1812              	checksum_double:
 1813 0000 00000000 		.space	20
 1813      00000000 
 1813      00000000 
 1813      00000000 
 1813      00000000 
 1814              		.global	throughput_pps_float
 1815              		.section	.bss.throughput_pps_float,"aw",%nobits
 1816              		.align	3
 1819              	throughput_pps_float:
 1820 0000 00000000 		.space	40
 1820      00000000 
 1820      00000000 
 1820      00000000 
 1820      00000000 
 1821              		.global	cpu_cycles_float
 1822              		.section	.bss.cpu_cycles_float,"aw",%nobits
 1823              		.align	2
 1826              	cpu_cycles_float:
 1827 0000 00000000 		.space	20
 1827      00000000 
 1827      00000000 
 1827      00000000 
 1827      00000000 
 1828              		.global	execution_time_ms_float
 1829              		.section	.bss.execution_time_ms_float,"aw",%nobits
 1830              		.align	3
 1833              	execution_time_ms_float:
 1834 0000 00000000 		.space	40
 1834      00000000 
 1834      00000000 
 1834      00000000 
 1834      00000000 
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 65


 1835              		.global	checksum_float
 1836              		.section	.bss.checksum_float,"aw",%nobits
 1837              		.align	2
 1840              	checksum_float:
 1841 0000 00000000 		.space	20
 1841      00000000 
 1841      00000000 
 1841      00000000 
 1841      00000000 
 1842              		.global	g_current_throughput
 1843              		.section	.bss.g_current_throughput,"aw",%nobits
 1844              		.align	3
 1847              	g_current_throughput:
 1848 0000 00000000 		.space	8
 1848      00000000 
 1849              		.global	g_current_execution_time
 1850              		.section	.bss.g_current_execution_time,"aw",%nobits
 1851              		.align	3
 1854              	g_current_execution_time:
 1855 0000 00000000 		.space	8
 1855      00000000 
 1856              		.global	g_current_checksum
 1857              		.section	.bss.g_current_checksum,"aw",%nobits
 1858              		.align	2
 1861              	g_current_checksum:
 1862 0000 00000000 		.space	4
 1863              		.global	g_current_cycles
 1864              		.section	.bss.g_current_cycles,"aw",%nobits
 1865              		.align	2
 1868              	g_current_cycles:
 1869 0000 00000000 		.space	4
 1870              		.global	g_current_height
 1871              		.section	.bss.g_current_height,"aw",%nobits
 1872              		.align	2
 1875              	g_current_height:
 1876 0000 00000000 		.space	4
 1877              		.global	g_current_width
 1878              		.section	.bss.g_current_width,"aw",%nobits
 1879              		.align	2
 1882              	g_current_width:
 1883 0000 00000000 		.space	4
 1884              		.section	.rodata.kHeights,"a"
 1885              		.align	2
 1888              	kHeights:
 1889 0000 8000     		.short	128
 1890 0002 A000     		.short	160
 1891 0004 C000     		.short	192
 1892 0006 E000     		.short	224
 1893 0008 0001     		.short	256
 1894              		.section	.rodata.kWidths,"a"
 1895              		.align	2
 1898              	kWidths:
 1899 0000 8000     		.short	128
 1900 0002 A000     		.short	160
 1901 0004 C000     		.short	192
 1902 0006 E000     		.short	224
 1903 0008 0001     		.short	256
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 66


 1904              		.text
 1905              	.Letext0:
 1906              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1907              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1908              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 1909              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1910              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1911              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1912              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1913              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1914              		.file 11 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1915              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1916              		.file 13 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltoo
 1917              		.file 14 "<built-in>"
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 67


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:21     .text.generate_mandelbrot_checksum_float:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:26     .text.generate_mandelbrot_checksum_float:00000000 generate_mandelbrot_checksum_float
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:200    .text.generate_mandelbrot_checksum_float:000000b0 $d
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:211    .text.generate_mandelbrot_checksum_double:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:216    .text.generate_mandelbrot_checksum_double:00000000 generate_mandelbrot_checksum_double
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:491    .text.generate_mandelbrot_checksum_double:00000138 $d
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:499    .text.dwt_cycle_counter_init:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:504    .text.dwt_cycle_counter_init:00000000 dwt_cycle_counter_init
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:534    .text.dwt_cycle_counter_init:00000020 $d
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:540    .rodata.log_fpu_benchmark.str1.4:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:545    .text.log_fpu_benchmark:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:550    .text.log_fpu_benchmark:00000000 log_fpu_benchmark
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:624    .text.log_fpu_benchmark:00000050 $d
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:630    .rodata.log_fpu_comparison.str1.4:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:635    .text.log_fpu_comparison:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:640    .text.log_fpu_comparison:00000000 log_fpu_comparison
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:681    .text.log_fpu_comparison:0000001c $d
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:686    .text.MX_GPIO_Init:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:691    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:798    .text.MX_GPIO_Init:00000074 $d
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:804    .text.__io_putchar:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:810    .text.__io_putchar:00000000 __io_putchar
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:862    .text.__io_putchar:00000034 $d
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:867    .text.Error_Handler:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:873    .text.Error_Handler:00000000 Error_Handler
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:905    .text.SystemClock_Config:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:911    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1062   .text.SystemClock_Config:000000a4 $d
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1068   .rodata.main.str1.4:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1095   .text.main:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1101   .text.main:00000000 main
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1721   .text.main:000002f8 $d
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1898   .rodata.kWidths:00000000 kWidths
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1888   .rodata.kHeights:00000000 kHeights
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1882   .bss.g_current_width:00000000 g_current_width
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1875   .bss.g_current_height:00000000 g_current_height
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1868   .bss.g_current_cycles:00000000 g_current_cycles
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1861   .bss.g_current_checksum:00000000 g_current_checksum
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1854   .bss.g_current_execution_time:00000000 g_current_execution_time
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1847   .bss.g_current_throughput:00000000 g_current_throughput
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1840   .bss.checksum_float:00000000 checksum_float
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1833   .bss.execution_time_ms_float:00000000 execution_time_ms_float
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1826   .bss.cpu_cycles_float:00000000 cpu_cycles_float
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1819   .bss.throughput_pps_float:00000000 throughput_pps_float
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1770   .bss.g_current_test_mode:00000000 g_current_test_mode
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1812   .bss.checksum_double:00000000 checksum_double
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1805   .bss.execution_time_ms_double:00000000 execution_time_ms_double
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1798   .bss.cpu_cycles_double:00000000 cpu_cycles_double
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1791   .bss.throughput_pps_double:00000000 throughput_pps_double
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1777   .bss.speedup_factor:00000000 speedup_factor
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1784   .bss.accuracy_diff_percent:00000000 accuracy_diff_percent
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1763   .data.g_fpu_enabled:00000000 g_fpu_enabled
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1760   .data.g_fpu_enabled:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1767   .bss.g_current_test_mode:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1774   .bss.speedup_factor:00000000 $d
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s 			page 68


C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1781   .bss.accuracy_diff_percent:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1788   .bss.throughput_pps_double:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1795   .bss.cpu_cycles_double:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1802   .bss.execution_time_ms_double:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1809   .bss.checksum_double:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1816   .bss.throughput_pps_float:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1823   .bss.cpu_cycles_float:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1830   .bss.execution_time_ms_float:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1837   .bss.checksum_float:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1844   .bss.g_current_throughput:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1851   .bss.g_current_execution_time:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1858   .bss.g_current_checksum:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1865   .bss.g_current_cycles:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1872   .bss.g_current_height:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1879   .bss.g_current_width:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1885   .rodata.kHeights:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccBXTAQd.s:1895   .rodata.kWidths:00000000 $d

UNDEFINED SYMBOLS
__aeabi_ui2d
__aeabi_ddiv
__aeabi_dadd
__aeabi_dsub
__aeabi_dmul
__aeabi_dcmple
printf
SystemCoreClock
HAL_GPIO_WritePin
HAL_GPIO_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_dcmpeq
HAL_Init
puts
HAL_Delay
