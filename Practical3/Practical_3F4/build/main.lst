ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.global	__aeabi_ui2d
  21              		.global	__aeabi_ddiv
  22              		.global	__aeabi_dadd
  23              		.global	__aeabi_dsub
  24              		.global	__aeabi_dmul
  25              		.global	__aeabi_dcmple
  26              		.section	.text.generate_mandelbrot_checksum,"ax",%progbits
  27              		.align	1
  28              		.syntax unified
  29              		.thumb
  30              		.thumb_func
  32              	generate_mandelbrot_checksum:
  33              	.LVL0:
  34              	.LFB140:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdio.h>
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 2


  25:Core/Src/main.c **** #include <stdint.h>
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** //TODO: Define variables you think you might need
  48:Core/Src/main.c **** // - Performance timing variables (e.g execution time, throughput, pixels per second, clock cycles)
  49:Core/Src/main.c **** /* Task 4: Scalability test up to Full HD (1920x1080) with tiling */
  50:Core/Src/main.c **** static const uint32_t kMaxIter = 100u;
  51:Core/Src/main.c **** static const uint32_t kNumResolutions = 8;
  52:Core/Src/main.c **** static const uint16_t kWidths[8]  = {128, 256, 512, 640, 800, 1024, 1280, 1920};
  53:Core/Src/main.c **** static const uint16_t kHeights[8] = {128, 256, 512, 480, 600, 768, 720, 1080};
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Memory management for large images */
  56:Core/Src/main.c **** #define MAX_TILE_SIZE 256  /* Maximum tile size that fits in available SRAM */
  57:Core/Src/main.c **** #define TILE_OVERLAP 0     /* No overlap needed for Mandelbrot calculation */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Live Expressions: current benchmark metrics */
  60:Core/Src/main.c **** volatile uint32_t g_current_width = 0u;
  61:Core/Src/main.c **** volatile uint32_t g_current_height = 0u;
  62:Core/Src/main.c **** volatile uint32_t g_current_cycles = 0u;
  63:Core/Src/main.c **** volatile uint32_t g_current_checksum = 0u;
  64:Core/Src/main.c **** volatile double g_current_execution_time = 0.0;
  65:Core/Src/main.c **** volatile double g_current_throughput = 0.0;
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* Live Expressions: per-size results */
  68:Core/Src/main.c **** volatile uint32_t checksum[8] = {0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u};
  69:Core/Src/main.c **** volatile double execution_time_ms[8] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
  70:Core/Src/main.c **** volatile uint32_t cpu_cycles[8] = {0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u};
  71:Core/Src/main.c **** volatile double throughput_pps[8] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /* Task 4: Tiling information */
  74:Core/Src/main.c **** volatile uint32_t g_num_tiles_x = 0u;
  75:Core/Src/main.c **** volatile uint32_t g_num_tiles_y = 0u;
  76:Core/Src/main.c **** volatile uint32_t g_total_tiles = 0u;
  77:Core/Src/main.c **** volatile uint32_t g_current_tile = 0u;
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** /* USER CODE END PV */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 3


  82:Core/Src/main.c **** void SystemClock_Config(void);
  83:Core/Src/main.c **** static void MX_GPIO_Init(void);
  84:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  85:Core/Src/main.c **** //TODO: Define any function prototypes you might need such as the calculate Mandelbrot function amo
  86:Core/Src/main.c **** static uint32_t generate_mandelbrot_checksum(uint16_t width, uint16_t height, uint32_t max_iter);
  87:Core/Src/main.c **** static uint32_t generate_mandelbrot_checksum_tiled(uint16_t width, uint16_t height, uint32_t max_it
  88:Core/Src/main.c **** static void dwt_cycle_counter_init(void);
  89:Core/Src/main.c **** static inline uint32_t dwt_get_cycles(void);
  90:Core/Src/main.c **** static void log_benchmark(uint16_t width, uint16_t height, uint32_t cycles, uint32_t checksum, doub
  91:Core/Src/main.c **** static void log_tiling_info(uint16_t width, uint16_t height, uint32_t tiles_x, uint32_t tiles_y);
  92:Core/Src/main.c **** int __io_putchar(int ch);
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** /* USER CODE END PFP */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  97:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c **** /* USER CODE END 0 */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c **** /**
 102:Core/Src/main.c ****   * @brief  The application entry point.
 103:Core/Src/main.c ****   * @retval int
 104:Core/Src/main.c ****   */
 105:Core/Src/main.c **** int main(void)
 106:Core/Src/main.c **** {
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* USER CODE END 1 */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 115:Core/Src/main.c ****   HAL_Init();
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* USER CODE END Init */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /* Configure the system clock */
 122:Core/Src/main.c ****   SystemClock_Config();
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* USER CODE END SysInit */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* Initialize all configured peripherals */
 129:Core/Src/main.c ****   MX_GPIO_Init();
 130:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 131:Core/Src/main.c ****   dwt_cycle_counter_init();
 132:Core/Src/main.c ****   printf("\r\nEEE3096S Practical 3 - STM32F4 Mandelbrot Benchmark\r\n");
 133:Core/Src/main.c ****   printf("SYSCLK: %lu Hz\r\n", SystemCoreClock);
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* USER CODE END 2 */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   /* Infinite loop */
 138:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 4


 139:Core/Src/main.c ****   while (1)
 140:Core/Src/main.c ****   {
 141:Core/Src/main.c ****     /* USER CODE END WHILE */
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 144:Core/Src/main.c ****       /* Visual indicator: LED0 ON */
 145:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****       /* Task 4: Scalability test up to Full HD with tiling for large images */
 148:Core/Src/main.c ****       for (uint32_t size_index = 0; size_index < kNumResolutions; ++size_index)
 149:Core/Src/main.c ****       {
 150:Core/Src/main.c ****         uint16_t w = kWidths[size_index];
 151:Core/Src/main.c ****         uint16_t h = kHeights[size_index];
 152:Core/Src/main.c ****         g_current_width = (uint32_t)w;
 153:Core/Src/main.c ****         g_current_height = (uint32_t)h;
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****         DWT->CYCCNT = 0; // reset cycle counter
 156:Core/Src/main.c ****         uint32_t start_cycles = dwt_get_cycles();
 157:Core/Src/main.c ****         
 158:Core/Src/main.c ****         /* Use tiled approach for large images that exceed memory constraints */
 159:Core/Src/main.c ****         uint32_t result_checksum;
 160:Core/Src/main.c ****         if (w > MAX_TILE_SIZE || h > MAX_TILE_SIZE) {
 161:Core/Src/main.c ****           result_checksum = generate_mandelbrot_checksum_tiled(w, h, kMaxIter);
 162:Core/Src/main.c ****         } else {
 163:Core/Src/main.c ****           result_checksum = generate_mandelbrot_checksum(w, h, kMaxIter);
 164:Core/Src/main.c ****         }
 165:Core/Src/main.c ****         
 166:Core/Src/main.c ****         uint32_t end_cycles = dwt_get_cycles();
 167:Core/Src/main.c ****         uint32_t elapsed_cycles = end_cycles - start_cycles;
 168:Core/Src/main.c ****         double elapsed_seconds = (double)elapsed_cycles / (double)SystemCoreClock;
 169:Core/Src/main.c ****         double total_pixels = (double)w * (double)h;
 170:Core/Src/main.c ****         double throughput = total_pixels / elapsed_seconds;
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****         /* Update Live Expressions */
 173:Core/Src/main.c ****         g_current_cycles = elapsed_cycles;
 174:Core/Src/main.c ****         g_current_checksum = result_checksum;
 175:Core/Src/main.c ****         g_current_execution_time = elapsed_seconds * 1000.0; // ms
 176:Core/Src/main.c ****         g_current_throughput = throughput;
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****         /* Store results */
 179:Core/Src/main.c ****         checksum[size_index] = result_checksum;
 180:Core/Src/main.c ****         execution_time_ms[size_index] = elapsed_seconds * 1000.0;
 181:Core/Src/main.c ****         cpu_cycles[size_index] = elapsed_cycles;
 182:Core/Src/main.c ****         throughput_pps[size_index] = throughput;
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****         log_benchmark(w, h, elapsed_cycles, result_checksum, throughput);
 185:Core/Src/main.c ****       }
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****       /* Visual indicator: LED1 ON, keep ON 2s, then turn both OFF */
 188:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 189:Core/Src/main.c ****       HAL_Delay(2000);
 190:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0 | GPIO_PIN_1, GPIO_PIN_RESET);
 191:Core/Src/main.c ****   }
 192:Core/Src/main.c ****   /* USER CODE END 3 */
 193:Core/Src/main.c **** }
 194:Core/Src/main.c **** 
 195:Core/Src/main.c **** /**
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 5


 196:Core/Src/main.c ****   * @brief System Clock Configuration
 197:Core/Src/main.c ****   * @retval None
 198:Core/Src/main.c ****   */
 199:Core/Src/main.c **** void SystemClock_Config(void)
 200:Core/Src/main.c **** {
 201:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 202:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 205:Core/Src/main.c ****   */
 206:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 207:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 210:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 211:Core/Src/main.c ****   */
 212:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 213:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 214:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 215:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 216:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 217:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 218:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 219:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 220:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 221:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 222:Core/Src/main.c ****   {
 223:Core/Src/main.c ****     Error_Handler();
 224:Core/Src/main.c ****   }
 225:Core/Src/main.c **** 
 226:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 227:Core/Src/main.c ****   */
 228:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 229:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 230:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 231:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 232:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 233:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 236:Core/Src/main.c ****   {
 237:Core/Src/main.c ****     Error_Handler();
 238:Core/Src/main.c ****   }
 239:Core/Src/main.c **** }
 240:Core/Src/main.c **** 
 241:Core/Src/main.c **** /**
 242:Core/Src/main.c ****   * @brief GPIO Initialization Function
 243:Core/Src/main.c ****   * @param None
 244:Core/Src/main.c ****   * @retval None
 245:Core/Src/main.c ****   */
 246:Core/Src/main.c **** static void MX_GPIO_Init(void)
 247:Core/Src/main.c **** {
 248:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 249:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 252:Core/Src/main.c **** 
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 6


 253:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 254:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 255:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 256:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 259:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 260:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 261:Core/Src/main.c **** 
 262:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB2 PB3
 263:Core/Src/main.c ****                            PB4 PB5 PB6 PB7 */
 264:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 265:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 266:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 267:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 268:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 269:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 270:Core/Src/main.c **** 
 271:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 272:Core/Src/main.c **** 
 273:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 274:Core/Src/main.c **** }
 275:Core/Src/main.c **** 
 276:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 277:Core/Src/main.c **** //TODO: Function signatures you defined previously , implement them here
 278:Core/Src/main.c **** 
 279:Core/Src/main.c **** static uint32_t generate_mandelbrot_checksum(uint16_t width, uint16_t height, uint32_t max_iter)
 280:Core/Src/main.c **** {
  35              		.loc 1 280 1 view -0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 48
  38              		@ frame_needed = 0, uses_anonymous_args = 0
  39              		.loc 1 280 1 is_stmt 0 view .LVU1
  40 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 36
  43              		.cfi_offset 4, -36
  44              		.cfi_offset 5, -32
  45              		.cfi_offset 6, -28
  46              		.cfi_offset 7, -24
  47              		.cfi_offset 8, -20
  48              		.cfi_offset 9, -16
  49              		.cfi_offset 10, -12
  50              		.cfi_offset 11, -8
  51              		.cfi_offset 14, -4
  52 0004 8DB0     		sub	sp, sp, #52
  53              	.LCFI1:
  54              		.cfi_def_cfa_offset 88
  55 0006 0790     		str	r0, [sp, #28]
  56 0008 0F46     		mov	r7, r1
  57 000a 9346     		mov	fp, r2
 281:Core/Src/main.c **** 	uint32_t mandelbrot_sum = 0u;
  58              		.loc 1 281 2 is_stmt 1 view .LVU2
  59              	.LVL1:
 282:Core/Src/main.c **** 	for (uint16_t y = 0; y < height; ++y)
  60              		.loc 1 282 2 view .LVU3
  61              	.LBB10:
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 7


  62              		.loc 1 282 7 view .LVU4
  63              		.loc 1 282 16 is_stmt 0 view .LVU5
  64 000c 0026     		movs	r6, #0
  65              	.LBE10:
 281:Core/Src/main.c **** 	uint32_t mandelbrot_sum = 0u;
  66              		.loc 1 281 11 view .LVU6
  67 000e B046     		mov	r8, r6
  68              	.LBB18:
  69              		.loc 1 282 2 view .LVU7
  70 0010 6DE0     		b	.L2
  71              	.LVL2:
  72              	.L6:
  73              	.LBB11:
  74              	.LBB12:
  75              	.LBB13:
  76              	.LBB14:
 283:Core/Src/main.c **** 	{
 284:Core/Src/main.c **** 		double y0 = ((double)y / (double)height) * 2.0 - 1.0;
 285:Core/Src/main.c **** 		for (uint16_t x = 0; x < width; ++x)
 286:Core/Src/main.c **** 		{
 287:Core/Src/main.c **** 			double x0 = ((double)x / (double)width) * 3.5 - 2.5;
 288:Core/Src/main.c **** 			double xi = 0.0;
 289:Core/Src/main.c **** 			double yi = 0.0;
 290:Core/Src/main.c **** 			uint32_t iteration = 0u;
 291:Core/Src/main.c **** 			while (iteration < max_iter && (xi*xi + yi*yi) <= 4.0)
 292:Core/Src/main.c **** 			{
 293:Core/Src/main.c **** 				double tmp = xi*xi - yi*yi + x0;
  77              		.loc 1 293 5 is_stmt 1 view .LVU8
  78              		.loc 1 293 24 is_stmt 0 view .LVU9
  79 0012 3246     		mov	r2, r6
  80 0014 3B46     		mov	r3, r7
  81 0016 DDE90001 		ldrd	r0, [sp]
  82 001a FFF7FEFF 		bl	__aeabi_dsub
  83              	.LVL3:
  84              		.loc 1 293 12 view .LVU10
  85 001e DDE90223 		ldrd	r2, [sp, #8]
  86 0022 FFF7FEFF 		bl	__aeabi_dadd
  87              	.LVL4:
  88 0026 0646     		mov	r6, r0
  89 0028 0F46     		mov	r7, r1
  90              	.LVL5:
 294:Core/Src/main.c **** 				yi = 2.0*xi*yi + y0;
  91              		.loc 1 294 5 is_stmt 1 view .LVU11
  92              		.loc 1 294 13 is_stmt 0 view .LVU12
  93 002a 2246     		mov	r2, r4
  94 002c 2B46     		mov	r3, r5
  95 002e 2046     		mov	r0, r4
  96 0030 2946     		mov	r1, r5
  97 0032 FFF7FEFF 		bl	__aeabi_dadd
  98              	.LVL6:
  99              		.loc 1 294 16 view .LVU13
 100 0036 4246     		mov	r2, r8
 101 0038 4B46     		mov	r3, r9
 102 003a FFF7FEFF 		bl	__aeabi_dmul
 103              	.LVL7:
 104              		.loc 1 294 8 view .LVU14
 105 003e DDE90423 		ldrd	r2, [sp, #16]
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 8


 106 0042 FFF7FEFF 		bl	__aeabi_dadd
 107              	.LVL8:
 108 0046 8046     		mov	r8, r0
 109              	.LVL9:
 110              		.loc 1 294 8 view .LVU15
 111 0048 8946     		mov	r9, r1
 112              	.LVL10:
 295:Core/Src/main.c **** 				xi = tmp;
 113              		.loc 1 295 5 is_stmt 1 view .LVU16
 296:Core/Src/main.c **** 				++iteration;
 114              		.loc 1 296 5 view .LVU17
 115 004a 0AF1010A 		add	r10, r10, #1
 116              	.LVL11:
 295:Core/Src/main.c **** 				xi = tmp;
 117              		.loc 1 295 8 is_stmt 0 view .LVU18
 118 004e 3446     		mov	r4, r6
 119 0050 3D46     		mov	r5, r7
 120              	.LVL12:
 121              	.L4:
 295:Core/Src/main.c **** 				xi = tmp;
 122              		.loc 1 295 8 view .LVU19
 123              	.LBE14:
 291:Core/Src/main.c **** 			{
 124              		.loc 1 291 32 is_stmt 1 view .LVU20
 125 0052 DA45     		cmp	r10, fp
 126 0054 1BD2     		bcs	.L5
 291:Core/Src/main.c **** 			{
 127              		.loc 1 291 38 is_stmt 0 discriminator 1 view .LVU21
 128 0056 2246     		mov	r2, r4
 129 0058 2B46     		mov	r3, r5
 130 005a 2046     		mov	r0, r4
 131 005c 2946     		mov	r1, r5
 132 005e FFF7FEFF 		bl	__aeabi_dmul
 133              	.LVL13:
 134 0062 CDE90001 		strd	r0, [sp]
 291:Core/Src/main.c **** 			{
 135              		.loc 1 291 46 discriminator 1 view .LVU22
 136 0066 4246     		mov	r2, r8
 137 0068 4B46     		mov	r3, r9
 138 006a 4046     		mov	r0, r8
 139 006c 4946     		mov	r1, r9
 140 006e FFF7FEFF 		bl	__aeabi_dmul
 141              	.LVL14:
 142 0072 0646     		mov	r6, r0
 143 0074 0F46     		mov	r7, r1
 291:Core/Src/main.c **** 			{
 144              		.loc 1 291 42 discriminator 1 view .LVU23
 145 0076 0246     		mov	r2, r0
 146 0078 0B46     		mov	r3, r1
 147 007a DDE90001 		ldrd	r0, [sp]
 148 007e FFF7FEFF 		bl	__aeabi_dadd
 149              	.LVL15:
 291:Core/Src/main.c **** 			{
 150              		.loc 1 291 32 discriminator 1 view .LVU24
 151 0082 0022     		movs	r2, #0
 152 0084 2C4B     		ldr	r3, .L12
 153 0086 FFF7FEFF 		bl	__aeabi_dcmple
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 9


 154              	.LVL16:
 155 008a 0028     		cmp	r0, #0
 156 008c C1D1     		bne	.L6
 157              	.L5:
 297:Core/Src/main.c **** 			}
 298:Core/Src/main.c **** 			mandelbrot_sum += iteration;
 158              		.loc 1 298 19 view .LVU25
 159 008e 089E     		ldr	r6, [sp, #32]
 160 0090 099F     		ldr	r7, [sp, #36]
 161              		.loc 1 298 4 is_stmt 1 view .LVU26
 162              		.loc 1 298 19 is_stmt 0 view .LVU27
 163 0092 5744     		add	r7, r7, r10
 164              	.LVL17:
 165              		.loc 1 298 19 view .LVU28
 166              	.LBE13:
 285:Core/Src/main.c **** 		{
 167              		.loc 1 285 35 is_stmt 1 discriminator 2 view .LVU29
 168 0094 731C     		adds	r3, r6, #1
 169 0096 9EB2     		uxth	r6, r3
 170              	.LVL18:
 171              	.L3:
 285:Core/Src/main.c **** 		{
 172              		.loc 1 285 26 discriminator 1 view .LVU30
 173 0098 079B     		ldr	r3, [sp, #28]
 174 009a 9E42     		cmp	r6, r3
 175 009c 22D2     		bcs	.L10
 176              	.LBB15:
 287:Core/Src/main.c **** 			double xi = 0.0;
 177              		.loc 1 287 4 view .LVU31
 287:Core/Src/main.c **** 			double xi = 0.0;
 178              		.loc 1 287 17 is_stmt 0 view .LVU32
 179 009e 3046     		mov	r0, r6
 180 00a0 FFF7FEFF 		bl	__aeabi_ui2d
 181              	.LVL19:
 182 00a4 0446     		mov	r4, r0
 183 00a6 0D46     		mov	r5, r1
 287:Core/Src/main.c **** 			double xi = 0.0;
 184              		.loc 1 287 29 view .LVU33
 185 00a8 0798     		ldr	r0, [sp, #28]
 186 00aa FFF7FEFF 		bl	__aeabi_ui2d
 187              	.LVL20:
 188 00ae 0246     		mov	r2, r0
 189 00b0 0B46     		mov	r3, r1
 287:Core/Src/main.c **** 			double xi = 0.0;
 190              		.loc 1 287 27 view .LVU34
 191 00b2 2046     		mov	r0, r4
 192 00b4 2946     		mov	r1, r5
 193 00b6 FFF7FEFF 		bl	__aeabi_ddiv
 194              	.LVL21:
 287:Core/Src/main.c **** 			double xi = 0.0;
 195              		.loc 1 287 44 view .LVU35
 196 00ba 0022     		movs	r2, #0
 197 00bc 1F4B     		ldr	r3, .L12+4
 198 00be FFF7FEFF 		bl	__aeabi_dmul
 199              	.LVL22:
 287:Core/Src/main.c **** 			double xi = 0.0;
 200              		.loc 1 287 11 view .LVU36
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 10


 201 00c2 0022     		movs	r2, #0
 202 00c4 1E4B     		ldr	r3, .L12+8
 203 00c6 FFF7FEFF 		bl	__aeabi_dsub
 204              	.LVL23:
 205 00ca CDE90201 		strd	r0, [sp, #8]
 206              	.LVL24:
 288:Core/Src/main.c **** 			double yi = 0.0;
 207              		.loc 1 288 4 is_stmt 1 view .LVU37
 289:Core/Src/main.c **** 			uint32_t iteration = 0u;
 208              		.loc 1 289 4 view .LVU38
 290:Core/Src/main.c **** 			while (iteration < max_iter && (xi*xi + yi*yi) <= 4.0)
 209              		.loc 1 290 4 view .LVU39
 291:Core/Src/main.c **** 			{
 210              		.loc 1 291 4 view .LVU40
 290:Core/Src/main.c **** 			while (iteration < max_iter && (xi*xi + yi*yi) <= 4.0)
 211              		.loc 1 290 13 is_stmt 0 view .LVU41
 212 00ce 4FF0000A 		mov	r10, #0
 289:Core/Src/main.c **** 			uint32_t iteration = 0u;
 213              		.loc 1 289 11 view .LVU42
 214 00d2 4FF00008 		mov	r8, #0
 215 00d6 4FF00009 		mov	r9, #0
 288:Core/Src/main.c **** 			double yi = 0.0;
 216              		.loc 1 288 11 view .LVU43
 217 00da 4446     		mov	r4, r8
 218 00dc 4D46     		mov	r5, r9
 219 00de 0896     		str	r6, [sp, #32]
 220 00e0 0997     		str	r7, [sp, #36]
 291:Core/Src/main.c **** 			{
 221              		.loc 1 291 10 view .LVU44
 222 00e2 B6E7     		b	.L4
 223              	.LVL25:
 224              	.L10:
 291:Core/Src/main.c **** 			{
 225              		.loc 1 291 10 view .LVU45
 226              	.LBE15:
 227              	.LBE12:
 228              	.LBE11:
 282:Core/Src/main.c **** 	{
 229              		.loc 1 282 35 discriminator 2 view .LVU46
 230 00e4 0A9E     		ldr	r6, [sp, #40]
 231              	.LVL26:
 282:Core/Src/main.c **** 	{
 232              		.loc 1 282 35 discriminator 2 view .LVU47
 233 00e6 B846     		mov	r8, r7
 234 00e8 0B9F     		ldr	r7, [sp, #44]
 235              	.LVL27:
 282:Core/Src/main.c **** 	{
 236              		.loc 1 282 35 is_stmt 1 discriminator 2 view .LVU48
 237 00ea 731C     		adds	r3, r6, #1
 238 00ec 9EB2     		uxth	r6, r3
 239              	.LVL28:
 240              	.L2:
 282:Core/Src/main.c **** 	{
 241              		.loc 1 282 25 discriminator 1 view .LVU49
 242 00ee BE42     		cmp	r6, r7
 243 00f0 1ED2     		bcs	.L11
 244              	.LBB17:
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 11


 284:Core/Src/main.c **** 		for (uint16_t x = 0; x < width; ++x)
 245              		.loc 1 284 3 view .LVU50
 284:Core/Src/main.c **** 		for (uint16_t x = 0; x < width; ++x)
 246              		.loc 1 284 16 is_stmt 0 view .LVU51
 247 00f2 3046     		mov	r0, r6
 248 00f4 FFF7FEFF 		bl	__aeabi_ui2d
 249              	.LVL29:
 250 00f8 0446     		mov	r4, r0
 251 00fa 0D46     		mov	r5, r1
 284:Core/Src/main.c **** 		for (uint16_t x = 0; x < width; ++x)
 252              		.loc 1 284 28 view .LVU52
 253 00fc 3846     		mov	r0, r7
 254 00fe FFF7FEFF 		bl	__aeabi_ui2d
 255              	.LVL30:
 256 0102 0246     		mov	r2, r0
 257 0104 0B46     		mov	r3, r1
 284:Core/Src/main.c **** 		for (uint16_t x = 0; x < width; ++x)
 258              		.loc 1 284 26 view .LVU53
 259 0106 2046     		mov	r0, r4
 260 0108 2946     		mov	r1, r5
 261 010a FFF7FEFF 		bl	__aeabi_ddiv
 262              	.LVL31:
 263 010e 0246     		mov	r2, r0
 264 0110 0B46     		mov	r3, r1
 284:Core/Src/main.c **** 		for (uint16_t x = 0; x < width; ++x)
 265              		.loc 1 284 44 view .LVU54
 266 0112 FFF7FEFF 		bl	__aeabi_dadd
 267              	.LVL32:
 284:Core/Src/main.c **** 		for (uint16_t x = 0; x < width; ++x)
 268              		.loc 1 284 10 view .LVU55
 269 0116 0022     		movs	r2, #0
 270 0118 0A4B     		ldr	r3, .L12+12
 271 011a FFF7FEFF 		bl	__aeabi_dsub
 272              	.LVL33:
 273 011e CDE90401 		strd	r0, [sp, #16]
 274              	.LVL34:
 285:Core/Src/main.c **** 		{
 275              		.loc 1 285 3 is_stmt 1 view .LVU56
 276              	.LBB16:
 285:Core/Src/main.c **** 		{
 277              		.loc 1 285 8 view .LVU57
 285:Core/Src/main.c **** 		{
 278              		.loc 1 285 17 is_stmt 0 view .LVU58
 279 0122 4FF00009 		mov	r9, #0
 280 0126 0A96     		str	r6, [sp, #40]
 281 0128 4E46     		mov	r6, r9
 282              	.LVL35:
 285:Core/Src/main.c **** 		{
 283              		.loc 1 285 17 view .LVU59
 284 012a 0B97     		str	r7, [sp, #44]
 285 012c 4746     		mov	r7, r8
 285:Core/Src/main.c **** 		{
 286              		.loc 1 285 3 view .LVU60
 287 012e B3E7     		b	.L3
 288              	.LVL36:
 289              	.L11:
 285:Core/Src/main.c **** 		{
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 12


 290              		.loc 1 285 3 view .LVU61
 291              	.LBE16:
 292              	.LBE17:
 293              	.LBE18:
 299:Core/Src/main.c **** 		}
 300:Core/Src/main.c **** 	}
 301:Core/Src/main.c **** 	return mandelbrot_sum;
 294              		.loc 1 301 2 is_stmt 1 view .LVU62
 302:Core/Src/main.c **** }
 295              		.loc 1 302 1 is_stmt 0 view .LVU63
 296 0130 4046     		mov	r0, r8
 297 0132 0DB0     		add	sp, sp, #52
 298              	.LCFI2:
 299              		.cfi_def_cfa_offset 36
 300              		@ sp needed
 301 0134 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 302              	.LVL37:
 303              	.L13:
 304              		.loc 1 302 1 view .LVU64
 305              		.align	2
 306              	.L12:
 307 0138 00001040 		.word	1074790400
 308 013c 00000C40 		.word	1074528256
 309 0140 00000440 		.word	1074003968
 310 0144 0000F03F 		.word	1072693248
 311              		.cfi_endproc
 312              	.LFE140:
 314              		.section	.text.dwt_cycle_counter_init,"ax",%progbits
 315              		.align	1
 316              		.syntax unified
 317              		.thumb
 318              		.thumb_func
 320              	dwt_cycle_counter_init:
 321              	.LFB141:
 303:Core/Src/main.c **** 
 304:Core/Src/main.c **** static void dwt_cycle_counter_init(void)
 305:Core/Src/main.c **** {
 322              		.loc 1 305 1 is_stmt 1 view -0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326              		@ link register save eliminated.
 306:Core/Src/main.c **** 	/* Enable TRC */
 307:Core/Src/main.c **** 	CoreDebug->DEMCR |= CoreDebug_DEMCR_TRCENA_Msk;
 327              		.loc 1 307 2 view .LVU66
 328              		.loc 1 307 11 is_stmt 0 view .LVU67
 329 0000 074A     		ldr	r2, .L15
 330 0002 D2F8FC30 		ldr	r3, [r2, #252]
 331              		.loc 1 307 19 view .LVU68
 332 0006 43F08073 		orr	r3, r3, #16777216
 333 000a C2F8FC30 		str	r3, [r2, #252]
 308:Core/Src/main.c **** 	/* Unlock DWT (if locked) by writing the key to LAR when present */
 309:Core/Src/main.c **** #ifdef DWT_LAR
 310:Core/Src/main.c **** 	DWT->LAR = 0xC5ACCE55;
 311:Core/Src/main.c **** #endif
 312:Core/Src/main.c **** 	/* Reset the cycle counter */
 313:Core/Src/main.c **** 	DWT->CYCCNT = 0;
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 13


 334              		.loc 1 313 2 is_stmt 1 view .LVU69
 335              		.loc 1 313 14 is_stmt 0 view .LVU70
 336 000e 054B     		ldr	r3, .L15+4
 337 0010 0022     		movs	r2, #0
 338 0012 5A60     		str	r2, [r3, #4]
 314:Core/Src/main.c **** 	/* Enable the cycle counter */
 315:Core/Src/main.c **** 	DWT->CTRL |= DWT_CTRL_CYCCNTENA_Msk;
 339              		.loc 1 315 2 is_stmt 1 view .LVU71
 340              		.loc 1 315 5 is_stmt 0 view .LVU72
 341 0014 1A68     		ldr	r2, [r3]
 342              		.loc 1 315 12 view .LVU73
 343 0016 42F00102 		orr	r2, r2, #1
 344 001a 1A60     		str	r2, [r3]
 316:Core/Src/main.c **** }
 345              		.loc 1 316 1 view .LVU74
 346 001c 7047     		bx	lr
 347              	.L16:
 348 001e 00BF     		.align	2
 349              	.L15:
 350 0020 00ED00E0 		.word	-536810240
 351 0024 001000E0 		.word	-536866816
 352              		.cfi_endproc
 353              	.LFE141:
 355              		.section	.rodata.log_tiling_info.str1.4,"aMS",%progbits,1
 356              		.align	2
 357              	.LC0:
 358 0000 54696C69 		.ascii	"Tiling: %ux%u -> %lux%lu tiles (total %lu)\015\012\000"
 358      6E673A20 
 358      25757825 
 358      75202D3E 
 358      20256C75 
 359              		.section	.text.log_tiling_info,"ax",%progbits
 360              		.align	1
 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
 365              	log_tiling_info:
 366              	.LVL38:
 367              	.LFB144:
 317:Core/Src/main.c **** 
 318:Core/Src/main.c **** static inline uint32_t dwt_get_cycles(void)
 319:Core/Src/main.c **** {
 320:Core/Src/main.c **** 	return DWT->CYCCNT;
 321:Core/Src/main.c **** }
 322:Core/Src/main.c **** 
 323:Core/Src/main.c **** static uint32_t generate_mandelbrot_checksum_tiled(uint16_t width, uint16_t height, uint32_t max_it
 324:Core/Src/main.c **** {
 325:Core/Src/main.c ****   uint32_t total_checksum = 0u;
 326:Core/Src/main.c ****   
 327:Core/Src/main.c ****   /* Calculate number of tiles needed */
 328:Core/Src/main.c ****   uint32_t tiles_x = (width + MAX_TILE_SIZE - 1) / MAX_TILE_SIZE;
 329:Core/Src/main.c ****   uint32_t tiles_y = (height + MAX_TILE_SIZE - 1) / MAX_TILE_SIZE;
 330:Core/Src/main.c ****   uint32_t total_tiles = tiles_x * tiles_y;
 331:Core/Src/main.c ****   
 332:Core/Src/main.c ****   /* Update Live Expressions with tiling info */
 333:Core/Src/main.c ****   g_num_tiles_x = tiles_x;
 334:Core/Src/main.c ****   g_num_tiles_y = tiles_y;
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 14


 335:Core/Src/main.c ****   g_total_tiles = total_tiles;
 336:Core/Src/main.c ****   
 337:Core/Src/main.c ****   log_tiling_info(width, height, tiles_x, tiles_y);
 338:Core/Src/main.c ****   
 339:Core/Src/main.c ****   /* Process each tile */
 340:Core/Src/main.c ****   for (uint32_t tile_y = 0; tile_y < tiles_y; ++tile_y)
 341:Core/Src/main.c ****   {
 342:Core/Src/main.c ****     for (uint32_t tile_x = 0; tile_x < tiles_x; ++tile_x)
 343:Core/Src/main.c ****     {
 344:Core/Src/main.c ****       g_current_tile = tile_y * tiles_x + tile_x + 1;
 345:Core/Src/main.c ****       
 346:Core/Src/main.c ****       /* Calculate tile boundaries */
 347:Core/Src/main.c ****       uint16_t start_x = tile_x * MAX_TILE_SIZE;
 348:Core/Src/main.c ****       uint16_t start_y = tile_y * MAX_TILE_SIZE;
 349:Core/Src/main.c ****       uint16_t end_x = (start_x + MAX_TILE_SIZE > width) ? width : start_x + MAX_TILE_SIZE;
 350:Core/Src/main.c ****       uint16_t end_y = (start_y + MAX_TILE_SIZE > height) ? height : start_y + MAX_TILE_SIZE;
 351:Core/Src/main.c ****       uint16_t tile_width = end_x - start_x;
 352:Core/Src/main.c ****       uint16_t tile_height = end_y - start_y;
 353:Core/Src/main.c ****       
 354:Core/Src/main.c ****       /* Process this tile */
 355:Core/Src/main.c ****       for (uint16_t y = 0; y < tile_height; ++y)
 356:Core/Src/main.c ****       {
 357:Core/Src/main.c ****         uint16_t global_y = start_y + y;
 358:Core/Src/main.c ****         double y0 = ((double)global_y / (double)height) * 2.0 - 1.0;
 359:Core/Src/main.c ****         for (uint16_t x = 0; x < tile_width; ++x)
 360:Core/Src/main.c ****         {
 361:Core/Src/main.c ****           uint16_t global_x = start_x + x;
 362:Core/Src/main.c ****           double x0 = ((double)global_x / (double)width) * 3.5 - 2.5;
 363:Core/Src/main.c ****           double xi = 0.0;
 364:Core/Src/main.c ****           double yi = 0.0;
 365:Core/Src/main.c ****           uint32_t iteration = 0u;
 366:Core/Src/main.c ****           while (iteration < max_iter && (xi*xi + yi*yi) <= 4.0)
 367:Core/Src/main.c ****           {
 368:Core/Src/main.c ****             double tmp = xi*xi - yi*yi + x0;
 369:Core/Src/main.c ****             yi = 2.0*xi*yi + y0;
 370:Core/Src/main.c ****             xi = tmp;
 371:Core/Src/main.c ****             ++iteration;
 372:Core/Src/main.c ****           }
 373:Core/Src/main.c ****           total_checksum += iteration;
 374:Core/Src/main.c ****         }
 375:Core/Src/main.c ****       }
 376:Core/Src/main.c ****     }
 377:Core/Src/main.c ****   }
 378:Core/Src/main.c ****   
 379:Core/Src/main.c ****   return total_checksum;
 380:Core/Src/main.c **** }
 381:Core/Src/main.c **** 
 382:Core/Src/main.c **** static void log_tiling_info(uint16_t width, uint16_t height, uint32_t tiles_x, uint32_t tiles_y)
 383:Core/Src/main.c **** {
 368              		.loc 1 383 1 is_stmt 1 view -0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372              		.loc 1 383 1 is_stmt 0 view .LVU76
 373 0000 10B5     		push	{r4, lr}
 374              	.LCFI3:
 375              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 15


 376              		.cfi_offset 4, -8
 377              		.cfi_offset 14, -4
 378 0002 82B0     		sub	sp, sp, #8
 379              	.LCFI4:
 380              		.cfi_def_cfa_offset 16
 384:Core/Src/main.c ****   printf("Tiling: %ux%u -> %lux%lu tiles (total %lu)\r\n", 
 381              		.loc 1 384 3 is_stmt 1 view .LVU77
 385:Core/Src/main.c ****          (unsigned)width, (unsigned)height, (unsigned long)tiles_x, (unsigned long)tiles_y, (unsign
 382              		.loc 1 385 117 is_stmt 0 view .LVU78
 383 0004 03FB02F4 		mul	r4, r3, r2
 384:Core/Src/main.c ****   printf("Tiling: %ux%u -> %lux%lu tiles (total %lu)\r\n", 
 384              		.loc 1 384 3 view .LVU79
 385 0008 0194     		str	r4, [sp, #4]
 386 000a 0093     		str	r3, [sp]
 387 000c 1346     		mov	r3, r2
 388              	.LVL39:
 384:Core/Src/main.c ****   printf("Tiling: %ux%u -> %lux%lu tiles (total %lu)\r\n", 
 389              		.loc 1 384 3 view .LVU80
 390 000e 0A46     		mov	r2, r1
 391              	.LVL40:
 384:Core/Src/main.c ****   printf("Tiling: %ux%u -> %lux%lu tiles (total %lu)\r\n", 
 392              		.loc 1 384 3 view .LVU81
 393 0010 0146     		mov	r1, r0
 394              	.LVL41:
 384:Core/Src/main.c ****   printf("Tiling: %ux%u -> %lux%lu tiles (total %lu)\r\n", 
 395              		.loc 1 384 3 view .LVU82
 396 0012 0248     		ldr	r0, .L19
 397              	.LVL42:
 384:Core/Src/main.c ****   printf("Tiling: %ux%u -> %lux%lu tiles (total %lu)\r\n", 
 398              		.loc 1 384 3 view .LVU83
 399 0014 FFF7FEFF 		bl	printf
 400              	.LVL43:
 386:Core/Src/main.c **** }
 401              		.loc 1 386 1 view .LVU84
 402 0018 02B0     		add	sp, sp, #8
 403              	.LCFI5:
 404              		.cfi_def_cfa_offset 8
 405              		@ sp needed
 406 001a 10BD     		pop	{r4, pc}
 407              	.L20:
 408              		.align	2
 409              	.L19:
 410 001c 00000000 		.word	.LC0
 411              		.cfi_endproc
 412              	.LFE144:
 414              		.section	.text.generate_mandelbrot_checksum_tiled,"ax",%progbits
 415              		.align	1
 416              		.syntax unified
 417              		.thumb
 418              		.thumb_func
 420              	generate_mandelbrot_checksum_tiled:
 421              	.LVL44:
 422              	.LFB143:
 324:Core/Src/main.c ****   uint32_t total_checksum = 0u;
 423              		.loc 1 324 1 is_stmt 1 view -0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 80
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 16


 426              		@ frame_needed = 0, uses_anonymous_args = 0
 324:Core/Src/main.c ****   uint32_t total_checksum = 0u;
 427              		.loc 1 324 1 is_stmt 0 view .LVU86
 428 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 429              	.LCFI6:
 430              		.cfi_def_cfa_offset 36
 431              		.cfi_offset 4, -36
 432              		.cfi_offset 5, -32
 433              		.cfi_offset 6, -28
 434              		.cfi_offset 7, -24
 435              		.cfi_offset 8, -20
 436              		.cfi_offset 9, -16
 437              		.cfi_offset 10, -12
 438              		.cfi_offset 11, -8
 439              		.cfi_offset 14, -4
 440 0004 95B0     		sub	sp, sp, #84
 441              	.LCFI7:
 442              		.cfi_def_cfa_offset 120
 443 0006 8146     		mov	r9, r0
 444 0008 0C91     		str	r1, [sp, #48]
 445 000a 0F92     		str	r2, [sp, #60]
 325:Core/Src/main.c ****   
 446              		.loc 1 325 3 is_stmt 1 view .LVU87
 447              	.LVL45:
 328:Core/Src/main.c ****   uint32_t tiles_y = (height + MAX_TILE_SIZE - 1) / MAX_TILE_SIZE;
 448              		.loc 1 328 3 view .LVU88
 328:Core/Src/main.c ****   uint32_t tiles_y = (height + MAX_TILE_SIZE - 1) / MAX_TILE_SIZE;
 449              		.loc 1 328 50 is_stmt 0 view .LVU89
 450 000c 00F1FF03 		add	r3, r0, #255
 451 0010 1F12     		asrs	r7, r3, #8
 452              	.LVL46:
 329:Core/Src/main.c ****   uint32_t total_tiles = tiles_x * tiles_y;
 453              		.loc 1 329 3 is_stmt 1 view .LVU90
 329:Core/Src/main.c ****   uint32_t total_tiles = tiles_x * tiles_y;
 454              		.loc 1 329 51 is_stmt 0 view .LVU91
 455 0012 01F1FF03 		add	r3, r1, #255
 456 0016 1C12     		asrs	r4, r3, #8
 457              	.LVL47:
 330:Core/Src/main.c ****   
 458              		.loc 1 330 3 is_stmt 1 view .LVU92
 330:Core/Src/main.c ****   
 459              		.loc 1 330 12 is_stmt 0 view .LVU93
 460 0018 04FB07F2 		mul	r2, r4, r7
 461              	.LVL48:
 333:Core/Src/main.c ****   g_num_tiles_y = tiles_y;
 462              		.loc 1 333 3 is_stmt 1 view .LVU94
 333:Core/Src/main.c ****   g_num_tiles_y = tiles_y;
 463              		.loc 1 333 17 is_stmt 0 view .LVU95
 464 001c 774B     		ldr	r3, .L44
 465 001e 1F60     		str	r7, [r3]
 334:Core/Src/main.c ****   g_total_tiles = total_tiles;
 466              		.loc 1 334 3 is_stmt 1 view .LVU96
 334:Core/Src/main.c ****   g_total_tiles = total_tiles;
 467              		.loc 1 334 17 is_stmt 0 view .LVU97
 468 0020 774B     		ldr	r3, .L44+4
 469 0022 1C60     		str	r4, [r3]
 335:Core/Src/main.c ****   
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 17


 470              		.loc 1 335 3 is_stmt 1 view .LVU98
 335:Core/Src/main.c ****   
 471              		.loc 1 335 17 is_stmt 0 view .LVU99
 472 0024 774B     		ldr	r3, .L44+8
 473 0026 1A60     		str	r2, [r3]
 337:Core/Src/main.c ****   
 474              		.loc 1 337 3 is_stmt 1 view .LVU100
 475 0028 2346     		mov	r3, r4
 476 002a 3A46     		mov	r2, r7
 477              	.LVL49:
 337:Core/Src/main.c ****   
 478              		.loc 1 337 3 is_stmt 0 view .LVU101
 479 002c FFF7FEFF 		bl	log_tiling_info
 480              	.LVL50:
 340:Core/Src/main.c ****   {
 481              		.loc 1 340 3 is_stmt 1 view .LVU102
 482              	.LBB19:
 340:Core/Src/main.c ****   {
 483              		.loc 1 340 8 view .LVU103
 340:Core/Src/main.c ****   {
 484              		.loc 1 340 17 is_stmt 0 view .LVU104
 485 0030 4FF0000A 		mov	r10, #0
 486              	.LBE19:
 325:Core/Src/main.c ****   
 487              		.loc 1 325 12 view .LVU105
 488 0034 CDF818A0 		str	r10, [sp, #24]
 489 0038 CDF82490 		str	r9, [sp, #36]
 490              	.LBB32:
 340:Core/Src/main.c ****   {
 491              		.loc 1 340 3 view .LVU106
 492 003c D1E0     		b	.L24
 493              	.LVL51:
 494              	.L36:
 495              	.LBB20:
 496              	.LBB21:
 349:Core/Src/main.c ****       uint16_t end_y = (start_y + MAX_TILE_SIZE > height) ? height : start_y + MAX_TILE_SIZE;
 497              		.loc 1 349 16 discriminator 2 view .LVU107
 498 003e 0999     		ldr	r1, [sp, #36]
 499              	.L25:
 500              	.LVL52:
 350:Core/Src/main.c ****       uint16_t tile_width = end_x - start_x;
 501              		.loc 1 350 7 is_stmt 1 view .LVU108
 350:Core/Src/main.c ****       uint16_t tile_width = end_x - start_x;
 502              		.loc 1 350 49 is_stmt 0 view .LVU109
 503 0040 0AF1FF02 		add	r2, r10, #255
 350:Core/Src/main.c ****       uint16_t tile_width = end_x - start_x;
 504              		.loc 1 350 16 view .LVU110
 505 0044 0C9B     		ldr	r3, [sp, #48]
 506              	.LVL53:
 350:Core/Src/main.c ****       uint16_t tile_width = end_x - start_x;
 507              		.loc 1 350 16 view .LVU111
 508 0046 9342     		cmp	r3, r2
 509 0048 03DD     		ble	.L37
 350:Core/Src/main.c ****       uint16_t tile_width = end_x - start_x;
 510              		.loc 1 350 16 discriminator 1 view .LVU112
 511 004a 0AF58072 		add	r2, r10, #256
 512 004e 92B2     		uxth	r2, r2
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 18


 513 0050 00E0     		b	.L26
 514              	.L37:
 350:Core/Src/main.c ****       uint16_t tile_width = end_x - start_x;
 515              		.loc 1 350 16 discriminator 2 view .LVU113
 516 0052 0C9A     		ldr	r2, [sp, #48]
 517              	.L26:
 518              	.LVL54:
 351:Core/Src/main.c ****       uint16_t tile_height = end_y - start_y;
 519              		.loc 1 351 7 is_stmt 1 view .LVU114
 351:Core/Src/main.c ****       uint16_t tile_height = end_y - start_y;
 520              		.loc 1 351 16 is_stmt 0 view .LVU115
 521 0054 0A9B     		ldr	r3, [sp, #40]
 522 0056 C91A     		subs	r1, r1, r3
 523              	.LVL55:
 351:Core/Src/main.c ****       uint16_t tile_height = end_y - start_y;
 524              		.loc 1 351 16 view .LVU116
 525 0058 8BB2     		uxth	r3, r1
 526 005a 0893     		str	r3, [sp, #32]
 527              	.LVL56:
 352:Core/Src/main.c ****       
 528              		.loc 1 352 7 is_stmt 1 view .LVU117
 352:Core/Src/main.c ****       
 529              		.loc 1 352 16 is_stmt 0 view .LVU118
 530 005c A2EB0A02 		sub	r2, r2, r10
 531              	.LVL57:
 352:Core/Src/main.c ****       
 532              		.loc 1 352 16 view .LVU119
 533 0060 96B2     		uxth	r6, r2
 534              	.LVL58:
 355:Core/Src/main.c ****       {
 535              		.loc 1 355 7 is_stmt 1 view .LVU120
 536              	.LBB22:
 355:Core/Src/main.c ****       {
 537              		.loc 1 355 12 view .LVU121
 355:Core/Src/main.c ****       {
 538              		.loc 1 355 21 is_stmt 0 view .LVU122
 539 0062 4FF0000B 		mov	fp, #0
 540 0066 CDF84490 		str	r9, [sp, #68]
 541 006a 1294     		str	r4, [sp, #72]
 542 006c CDF838A0 		str	r10, [sp, #56]
 543 0070 0D96     		str	r6, [sp, #52]
 544 0072 5E46     		mov	r6, fp
 545              	.LVL59:
 355:Core/Src/main.c ****       {
 546              		.loc 1 355 21 view .LVU123
 547 0074 DDF83CB0 		ldr	fp, [sp, #60]
 548 0078 1395     		str	r5, [sp, #76]
 355:Core/Src/main.c ****       {
 549              		.loc 1 355 7 view .LVU124
 550 007a 70E0     		b	.L27
 551              	.LVL60:
 552              	.L30:
 553              	.LBB23:
 554              	.LBB24:
 555              	.LBB25:
 373:Core/Src/main.c ****         }
 556              		.loc 1 373 26 view .LVU125
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 19


 557 007c DDF81C80 		ldr	r8, [sp, #28]
 373:Core/Src/main.c ****         }
 558              		.loc 1 373 11 is_stmt 1 view .LVU126
 373:Core/Src/main.c ****         }
 559              		.loc 1 373 26 is_stmt 0 view .LVU127
 560 0080 069B     		ldr	r3, [sp, #24]
 561 0082 5344     		add	r3, r3, r10
 562 0084 0693     		str	r3, [sp, #24]
 563              	.LVL61:
 373:Core/Src/main.c ****         }
 564              		.loc 1 373 26 view .LVU128
 565              	.LBE25:
 359:Core/Src/main.c ****         {
 566              		.loc 1 359 46 is_stmt 1 discriminator 2 view .LVU129
 567 0086 08F10103 		add	r3, r8, #1
 568              	.LVL62:
 359:Core/Src/main.c ****         {
 569              		.loc 1 359 46 is_stmt 0 discriminator 2 view .LVU130
 570 008a 1FFA83F8 		uxth	r8, r3
 571              	.LVL63:
 572              	.L28:
 359:Core/Src/main.c ****         {
 573              		.loc 1 359 32 is_stmt 1 discriminator 1 view .LVU131
 574 008e 089B     		ldr	r3, [sp, #32]
 575 0090 9845     		cmp	r8, r3
 576 0092 61D2     		bcs	.L40
 577              	.LBB27:
 361:Core/Src/main.c ****           double x0 = ((double)global_x / (double)width) * 3.5 - 2.5;
 578              		.loc 1 361 11 view .LVU132
 361:Core/Src/main.c ****           double x0 = ((double)global_x / (double)width) * 3.5 - 2.5;
 579              		.loc 1 361 20 is_stmt 0 view .LVU133
 580 0094 0A9B     		ldr	r3, [sp, #40]
 581 0096 08EB0300 		add	r0, r8, r3
 582              	.LVL64:
 362:Core/Src/main.c ****           double xi = 0.0;
 583              		.loc 1 362 11 is_stmt 1 view .LVU134
 362:Core/Src/main.c ****           double xi = 0.0;
 584              		.loc 1 362 24 is_stmt 0 view .LVU135
 585 009a 80B2     		uxth	r0, r0
 362:Core/Src/main.c ****           double xi = 0.0;
 586              		.loc 1 362 24 view .LVU136
 587 009c FFF7FEFF 		bl	__aeabi_ui2d
 588              	.LVL65:
 362:Core/Src/main.c ****           double xi = 0.0;
 589              		.loc 1 362 24 view .LVU137
 590 00a0 0446     		mov	r4, r0
 591 00a2 0D46     		mov	r5, r1
 362:Core/Src/main.c ****           double xi = 0.0;
 592              		.loc 1 362 43 view .LVU138
 593 00a4 0998     		ldr	r0, [sp, #36]
 594 00a6 FFF7FEFF 		bl	__aeabi_ui2d
 595              	.LVL66:
 596 00aa 0246     		mov	r2, r0
 597 00ac 0B46     		mov	r3, r1
 362:Core/Src/main.c ****           double xi = 0.0;
 598              		.loc 1 362 41 view .LVU139
 599 00ae 2046     		mov	r0, r4
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 20


 600 00b0 2946     		mov	r1, r5
 601 00b2 FFF7FEFF 		bl	__aeabi_ddiv
 602              	.LVL67:
 362:Core/Src/main.c ****           double xi = 0.0;
 603              		.loc 1 362 58 view .LVU140
 604 00b6 0022     		movs	r2, #0
 605 00b8 534B     		ldr	r3, .L44+12
 606 00ba FFF7FEFF 		bl	__aeabi_dmul
 607              	.LVL68:
 362:Core/Src/main.c ****           double xi = 0.0;
 608              		.loc 1 362 18 view .LVU141
 609 00be 0022     		movs	r2, #0
 610 00c0 524B     		ldr	r3, .L44+16
 611 00c2 FFF7FEFF 		bl	__aeabi_dsub
 612              	.LVL69:
 613 00c6 CDE90201 		strd	r0, [sp, #8]
 614              	.LVL70:
 363:Core/Src/main.c ****           double yi = 0.0;
 615              		.loc 1 363 11 is_stmt 1 view .LVU142
 364:Core/Src/main.c ****           uint32_t iteration = 0u;
 616              		.loc 1 364 11 view .LVU143
 365:Core/Src/main.c ****           while (iteration < max_iter && (xi*xi + yi*yi) <= 4.0)
 617              		.loc 1 365 11 view .LVU144
 366:Core/Src/main.c ****           {
 618              		.loc 1 366 11 view .LVU145
 365:Core/Src/main.c ****           while (iteration < max_iter && (xi*xi + yi*yi) <= 4.0)
 619              		.loc 1 365 20 is_stmt 0 view .LVU146
 620 00ca 4FF0000A 		mov	r10, #0
 364:Core/Src/main.c ****           uint32_t iteration = 0u;
 621              		.loc 1 364 18 view .LVU147
 622 00ce 0026     		movs	r6, #0
 623 00d0 0027     		movs	r7, #0
 363:Core/Src/main.c ****           double yi = 0.0;
 624              		.loc 1 363 18 view .LVU148
 625 00d2 3446     		mov	r4, r6
 626 00d4 3D46     		mov	r5, r7
 627 00d6 CDF81C80 		str	r8, [sp, #28]
 628              	.LVL71:
 629              	.L29:
 366:Core/Src/main.c ****           {
 630              		.loc 1 366 39 is_stmt 1 view .LVU149
 631 00da DA45     		cmp	r10, fp
 632 00dc CED2     		bcs	.L30
 366:Core/Src/main.c ****           {
 633              		.loc 1 366 45 is_stmt 0 discriminator 1 view .LVU150
 634 00de 2246     		mov	r2, r4
 635 00e0 2B46     		mov	r3, r5
 636 00e2 2046     		mov	r0, r4
 637 00e4 2946     		mov	r1, r5
 638 00e6 FFF7FEFF 		bl	__aeabi_dmul
 639              	.LVL72:
 640 00ea CDE90001 		strd	r0, [sp]
 366:Core/Src/main.c ****           {
 641              		.loc 1 366 53 discriminator 1 view .LVU151
 642 00ee 3246     		mov	r2, r6
 643 00f0 3B46     		mov	r3, r7
 644 00f2 3046     		mov	r0, r6
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 21


 645 00f4 3946     		mov	r1, r7
 646 00f6 FFF7FEFF 		bl	__aeabi_dmul
 647              	.LVL73:
 648 00fa 8046     		mov	r8, r0
 649 00fc 8946     		mov	r9, r1
 366:Core/Src/main.c ****           {
 650              		.loc 1 366 49 discriminator 1 view .LVU152
 651 00fe 0246     		mov	r2, r0
 652 0100 0B46     		mov	r3, r1
 653 0102 DDE90001 		ldrd	r0, [sp]
 654 0106 FFF7FEFF 		bl	__aeabi_dadd
 655              	.LVL74:
 366:Core/Src/main.c ****           {
 656              		.loc 1 366 39 discriminator 1 view .LVU153
 657 010a 0022     		movs	r2, #0
 658 010c 404B     		ldr	r3, .L44+20
 659 010e FFF7FEFF 		bl	__aeabi_dcmple
 660              	.LVL75:
 661 0112 0028     		cmp	r0, #0
 662 0114 B2D0     		beq	.L30
 663              	.LBB26:
 368:Core/Src/main.c ****             yi = 2.0*xi*yi + y0;
 664              		.loc 1 368 13 is_stmt 1 view .LVU154
 368:Core/Src/main.c ****             yi = 2.0*xi*yi + y0;
 665              		.loc 1 368 32 is_stmt 0 view .LVU155
 666 0116 4246     		mov	r2, r8
 667 0118 4B46     		mov	r3, r9
 668 011a DDE90001 		ldrd	r0, [sp]
 669 011e FFF7FEFF 		bl	__aeabi_dsub
 670              	.LVL76:
 368:Core/Src/main.c ****             yi = 2.0*xi*yi + y0;
 671              		.loc 1 368 20 view .LVU156
 672 0122 DDE90223 		ldrd	r2, [sp, #8]
 673 0126 FFF7FEFF 		bl	__aeabi_dadd
 674              	.LVL77:
 675 012a 8046     		mov	r8, r0
 676 012c 8946     		mov	r9, r1
 677              	.LVL78:
 369:Core/Src/main.c ****             xi = tmp;
 678              		.loc 1 369 13 is_stmt 1 view .LVU157
 369:Core/Src/main.c ****             xi = tmp;
 679              		.loc 1 369 21 is_stmt 0 view .LVU158
 680 012e 2246     		mov	r2, r4
 681 0130 2B46     		mov	r3, r5
 682 0132 2046     		mov	r0, r4
 683 0134 2946     		mov	r1, r5
 684 0136 FFF7FEFF 		bl	__aeabi_dadd
 685              	.LVL79:
 369:Core/Src/main.c ****             xi = tmp;
 686              		.loc 1 369 24 view .LVU159
 687 013a 3246     		mov	r2, r6
 688 013c 3B46     		mov	r3, r7
 689 013e FFF7FEFF 		bl	__aeabi_dmul
 690              	.LVL80:
 369:Core/Src/main.c ****             xi = tmp;
 691              		.loc 1 369 16 view .LVU160
 692 0142 DDE90423 		ldrd	r2, [sp, #16]
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 22


 693 0146 FFF7FEFF 		bl	__aeabi_dadd
 694              	.LVL81:
 695 014a 0646     		mov	r6, r0
 696              	.LVL82:
 369:Core/Src/main.c ****             xi = tmp;
 697              		.loc 1 369 16 view .LVU161
 698 014c 0F46     		mov	r7, r1
 699              	.LVL83:
 370:Core/Src/main.c ****             ++iteration;
 700              		.loc 1 370 13 is_stmt 1 view .LVU162
 371:Core/Src/main.c ****           }
 701              		.loc 1 371 13 view .LVU163
 702 014e 0AF1010A 		add	r10, r10, #1
 703              	.LVL84:
 370:Core/Src/main.c ****             ++iteration;
 704              		.loc 1 370 16 is_stmt 0 view .LVU164
 705 0152 4446     		mov	r4, r8
 706 0154 4D46     		mov	r5, r9
 707 0156 C0E7     		b	.L29
 708              	.LVL85:
 709              	.L40:
 370:Core/Src/main.c ****             ++iteration;
 710              		.loc 1 370 16 view .LVU165
 711              	.LBE26:
 712              	.LBE27:
 713              	.LBE24:
 714              	.LBE23:
 355:Core/Src/main.c ****       {
 715              		.loc 1 355 45 discriminator 2 view .LVU166
 716 0158 0B9E     		ldr	r6, [sp, #44]
 355:Core/Src/main.c ****       {
 717              		.loc 1 355 45 is_stmt 1 discriminator 2 view .LVU167
 718 015a 731C     		adds	r3, r6, #1
 719 015c 9EB2     		uxth	r6, r3
 720              	.LVL86:
 721              	.L27:
 355:Core/Src/main.c ****       {
 722              		.loc 1 355 30 discriminator 1 view .LVU168
 723 015e 0D9B     		ldr	r3, [sp, #52]
 724 0160 9E42     		cmp	r6, r3
 725 0162 1DD2     		bcs	.L41
 726              	.LBB29:
 357:Core/Src/main.c ****         double y0 = ((double)global_y / (double)height) * 2.0 - 1.0;
 727              		.loc 1 357 9 view .LVU169
 357:Core/Src/main.c ****         double y0 = ((double)global_y / (double)height) * 2.0 - 1.0;
 728              		.loc 1 357 18 is_stmt 0 view .LVU170
 729 0164 0E9B     		ldr	r3, [sp, #56]
 730 0166 F018     		adds	r0, r6, r3
 731              	.LVL87:
 358:Core/Src/main.c ****         for (uint16_t x = 0; x < tile_width; ++x)
 732              		.loc 1 358 9 is_stmt 1 view .LVU171
 358:Core/Src/main.c ****         for (uint16_t x = 0; x < tile_width; ++x)
 733              		.loc 1 358 22 is_stmt 0 view .LVU172
 734 0168 80B2     		uxth	r0, r0
 358:Core/Src/main.c ****         for (uint16_t x = 0; x < tile_width; ++x)
 735              		.loc 1 358 22 view .LVU173
 736 016a FFF7FEFF 		bl	__aeabi_ui2d
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 23


 737              	.LVL88:
 358:Core/Src/main.c ****         for (uint16_t x = 0; x < tile_width; ++x)
 738              		.loc 1 358 22 view .LVU174
 739 016e 0446     		mov	r4, r0
 740 0170 0D46     		mov	r5, r1
 358:Core/Src/main.c ****         for (uint16_t x = 0; x < tile_width; ++x)
 741              		.loc 1 358 41 view .LVU175
 742 0172 0C98     		ldr	r0, [sp, #48]
 743 0174 FFF7FEFF 		bl	__aeabi_ui2d
 744              	.LVL89:
 745 0178 0246     		mov	r2, r0
 746 017a 0B46     		mov	r3, r1
 358:Core/Src/main.c ****         for (uint16_t x = 0; x < tile_width; ++x)
 747              		.loc 1 358 39 view .LVU176
 748 017c 2046     		mov	r0, r4
 749 017e 2946     		mov	r1, r5
 750 0180 FFF7FEFF 		bl	__aeabi_ddiv
 751              	.LVL90:
 752 0184 0246     		mov	r2, r0
 753 0186 0B46     		mov	r3, r1
 358:Core/Src/main.c ****         for (uint16_t x = 0; x < tile_width; ++x)
 754              		.loc 1 358 57 view .LVU177
 755 0188 FFF7FEFF 		bl	__aeabi_dadd
 756              	.LVL91:
 358:Core/Src/main.c ****         for (uint16_t x = 0; x < tile_width; ++x)
 757              		.loc 1 358 16 view .LVU178
 758 018c 0022     		movs	r2, #0
 759 018e 214B     		ldr	r3, .L44+24
 760 0190 FFF7FEFF 		bl	__aeabi_dsub
 761              	.LVL92:
 762 0194 CDE90401 		strd	r0, [sp, #16]
 763              	.LVL93:
 359:Core/Src/main.c ****         {
 764              		.loc 1 359 9 is_stmt 1 view .LVU179
 765              	.LBB28:
 359:Core/Src/main.c ****         {
 766              		.loc 1 359 14 view .LVU180
 359:Core/Src/main.c ****         {
 767              		.loc 1 359 23 is_stmt 0 view .LVU181
 768 0198 0023     		movs	r3, #0
 769 019a 0B96     		str	r6, [sp, #44]
 770 019c 9846     		mov	r8, r3
 359:Core/Src/main.c ****         {
 771              		.loc 1 359 9 view .LVU182
 772 019e 76E7     		b	.L28
 773              	.LVL94:
 774              	.L41:
 359:Core/Src/main.c ****         {
 775              		.loc 1 359 9 view .LVU183
 776              	.LBE28:
 777              	.LBE29:
 778              	.LBE22:
 779              	.LBE21:
 342:Core/Src/main.c ****     {
 780              		.loc 1 342 49 discriminator 2 view .LVU184
 781 01a0 DDF84490 		ldr	r9, [sp, #68]
 782 01a4 129C     		ldr	r4, [sp, #72]
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 24


 783 01a6 139D     		ldr	r5, [sp, #76]
 342:Core/Src/main.c ****     {
 784              		.loc 1 342 49 is_stmt 1 discriminator 2 view .LVU185
 785 01a8 0134     		adds	r4, r4, #1
 786              	.LVL95:
 787              	.L35:
 342:Core/Src/main.c ****     {
 788              		.loc 1 342 38 discriminator 1 view .LVU186
 789 01aa AC42     		cmp	r4, r5
 790 01ac 15D2     		bcs	.L42
 791              	.LBB30:
 344:Core/Src/main.c ****       
 792              		.loc 1 344 7 view .LVU187
 344:Core/Src/main.c ****       
 793              		.loc 1 344 41 is_stmt 0 view .LVU188
 794 01ae 05FB0942 		mla	r2, r5, r9, r4
 344:Core/Src/main.c ****       
 795              		.loc 1 344 50 view .LVU189
 796 01b2 0132     		adds	r2, r2, #1
 344:Core/Src/main.c ****       
 797              		.loc 1 344 22 view .LVU190
 798 01b4 1849     		ldr	r1, .L44+28
 799 01b6 0A60     		str	r2, [r1]
 347:Core/Src/main.c ****       uint16_t start_y = tile_y * MAX_TILE_SIZE;
 800              		.loc 1 347 7 is_stmt 1 view .LVU191
 347:Core/Src/main.c ****       uint16_t start_y = tile_y * MAX_TILE_SIZE;
 801              		.loc 1 347 16 is_stmt 0 view .LVU192
 802 01b8 2202     		lsls	r2, r4, #8
 803 01ba 93B2     		uxth	r3, r2
 804 01bc 0A93     		str	r3, [sp, #40]
 805              	.LVL96:
 348:Core/Src/main.c ****       uint16_t end_x = (start_x + MAX_TILE_SIZE > width) ? width : start_x + MAX_TILE_SIZE;
 806              		.loc 1 348 7 is_stmt 1 view .LVU193
 348:Core/Src/main.c ****       uint16_t end_x = (start_x + MAX_TILE_SIZE > width) ? width : start_x + MAX_TILE_SIZE;
 807              		.loc 1 348 16 is_stmt 0 view .LVU194
 808 01be 4FEA0922 		lsl	r2, r9, #8
 809 01c2 1FFA82FA 		uxth	r10, r2
 810              	.LVL97:
 349:Core/Src/main.c ****       uint16_t end_y = (start_y + MAX_TILE_SIZE > height) ? height : start_y + MAX_TILE_SIZE;
 811              		.loc 1 349 7 is_stmt 1 view .LVU195
 349:Core/Src/main.c ****       uint16_t end_y = (start_y + MAX_TILE_SIZE > height) ? height : start_y + MAX_TILE_SIZE;
 812              		.loc 1 349 49 is_stmt 0 view .LVU196
 813 01c6 03F1FF02 		add	r2, r3, #255
 349:Core/Src/main.c ****       uint16_t end_y = (start_y + MAX_TILE_SIZE > height) ? height : start_y + MAX_TILE_SIZE;
 814              		.loc 1 349 16 view .LVU197
 815 01ca 0999     		ldr	r1, [sp, #36]
 816 01cc 9142     		cmp	r1, r2
 817 01ce 7FF736AF 		ble	.L36
 349:Core/Src/main.c ****       uint16_t end_y = (start_y + MAX_TILE_SIZE > height) ? height : start_y + MAX_TILE_SIZE;
 818              		.loc 1 349 16 discriminator 1 view .LVU198
 819 01d2 03F58071 		add	r1, r3, #256
 820 01d6 89B2     		uxth	r1, r1
 821 01d8 32E7     		b	.L25
 822              	.LVL98:
 823              	.L42:
 349:Core/Src/main.c ****       uint16_t end_y = (start_y + MAX_TILE_SIZE > height) ? height : start_y + MAX_TILE_SIZE;
 824              		.loc 1 349 16 discriminator 1 view .LVU199
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 25


 825              	.LBE30:
 826              	.LBE20:
 340:Core/Src/main.c ****   {
 827              		.loc 1 340 47 discriminator 2 view .LVU200
 828 01da 2F46     		mov	r7, r5
 829 01dc 109C     		ldr	r4, [sp, #64]
 830              	.LVL99:
 340:Core/Src/main.c ****   {
 831              		.loc 1 340 47 is_stmt 1 discriminator 2 view .LVU201
 832 01de 09F1010A 		add	r10, r9, #1
 833              	.LVL100:
 834              	.L24:
 340:Core/Src/main.c ****   {
 835              		.loc 1 340 36 discriminator 1 view .LVU202
 836 01e2 A245     		cmp	r10, r4
 837 01e4 05D2     		bcs	.L43
 838              	.LBB31:
 342:Core/Src/main.c ****     {
 839              		.loc 1 342 19 is_stmt 0 view .LVU203
 840 01e6 0026     		movs	r6, #0
 841 01e8 D146     		mov	r9, r10
 842 01ea 3D46     		mov	r5, r7
 843 01ec 1094     		str	r4, [sp, #64]
 844 01ee 3446     		mov	r4, r6
 845 01f0 DBE7     		b	.L35
 846              	.L43:
 342:Core/Src/main.c ****     {
 847              		.loc 1 342 19 view .LVU204
 848              	.LBE31:
 849              	.LBE32:
 379:Core/Src/main.c **** }
 850              		.loc 1 379 3 is_stmt 1 view .LVU205
 380:Core/Src/main.c **** 
 851              		.loc 1 380 1 is_stmt 0 view .LVU206
 852 01f2 0698     		ldr	r0, [sp, #24]
 853 01f4 15B0     		add	sp, sp, #84
 854              	.LCFI8:
 855              		.cfi_def_cfa_offset 36
 856              		@ sp needed
 857 01f6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 858              	.LVL101:
 859              	.L45:
 380:Core/Src/main.c **** 
 860              		.loc 1 380 1 view .LVU207
 861 01fa 00BF     		.align	2
 862              	.L44:
 863 01fc 00000000 		.word	g_num_tiles_x
 864 0200 00000000 		.word	g_num_tiles_y
 865 0204 00000000 		.word	g_total_tiles
 866 0208 00000C40 		.word	1074528256
 867 020c 00000440 		.word	1074003968
 868 0210 00001040 		.word	1074790400
 869 0214 0000F03F 		.word	1072693248
 870 0218 00000000 		.word	g_current_tile
 871              		.cfi_endproc
 872              	.LFE143:
 874              		.section	.rodata.log_benchmark.str1.4,"aMS",%progbits,1
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 26


 875              		.align	2
 876              	.LC1:
 877 0000 5265736F 		.ascii	"Resolution %ux%u, cycles %lu, time %.6f s, throughp"
 877      6C757469 
 877      6F6E2025 
 877      75782575 
 877      2C206379 
 878 0033 75742025 		.ascii	"ut %.0f pps, checksum %lu\015\012\000"
 878      2E306620 
 878      7070732C 
 878      20636865 
 878      636B7375 
 879              		.section	.text.log_benchmark,"ax",%progbits
 880              		.align	1
 881              		.syntax unified
 882              		.thumb
 883              		.thumb_func
 885              	log_benchmark:
 886              	.LVL102:
 887              	.LFB145:
 387:Core/Src/main.c **** 
 388:Core/Src/main.c **** static void log_benchmark(uint16_t width, uint16_t height, uint32_t cycles, uint32_t checksum, doub
 389:Core/Src/main.c **** {
 888              		.loc 1 389 1 is_stmt 1 view -0
 889              		.cfi_startproc
 890              		@ args = 0, pretend = 0, frame = 0
 891              		@ frame_needed = 0, uses_anonymous_args = 0
 892              		.loc 1 389 1 is_stmt 0 view .LVU209
 893 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 894              	.LCFI9:
 895              		.cfi_def_cfa_offset 36
 896              		.cfi_offset 4, -36
 897              		.cfi_offset 5, -32
 898              		.cfi_offset 6, -28
 899              		.cfi_offset 7, -24
 900              		.cfi_offset 8, -20
 901              		.cfi_offset 9, -16
 902              		.cfi_offset 10, -12
 903              		.cfi_offset 11, -8
 904              		.cfi_offset 14, -4
 905 0004 87B0     		sub	sp, sp, #28
 906              	.LCFI10:
 907              		.cfi_def_cfa_offset 64
 908 0006 0546     		mov	r5, r0
 909 0008 0E46     		mov	r6, r1
 910 000a 1446     		mov	r4, r2
 911 000c 1F46     		mov	r7, r3
 912 000e 5BEC10AB 		vmov	r10, fp, d0
 390:Core/Src/main.c **** 	double seconds = (double)cycles / (double)SystemCoreClock;
 913              		.loc 1 390 2 is_stmt 1 view .LVU210
 914              		.loc 1 390 19 is_stmt 0 view .LVU211
 915 0012 1046     		mov	r0, r2
 916              	.LVL103:
 917              		.loc 1 390 19 view .LVU212
 918 0014 FFF7FEFF 		bl	__aeabi_ui2d
 919              	.LVL104:
 920              		.loc 1 390 19 view .LVU213
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 27


 921 0018 8046     		mov	r8, r0
 922 001a 8946     		mov	r9, r1
 923              		.loc 1 390 36 view .LVU214
 924 001c 0B4B     		ldr	r3, .L48
 925 001e 1868     		ldr	r0, [r3]
 926 0020 FFF7FEFF 		bl	__aeabi_ui2d
 927              	.LVL105:
 928 0024 0246     		mov	r2, r0
 929 0026 0B46     		mov	r3, r1
 930              		.loc 1 390 9 view .LVU215
 931 0028 4046     		mov	r0, r8
 932 002a 4946     		mov	r1, r9
 933 002c FFF7FEFF 		bl	__aeabi_ddiv
 934              	.LVL106:
 391:Core/Src/main.c **** 	printf("Resolution %ux%u, cycles %lu, time %.6f s, throughput %.0f pps, checksum %lu\r\n",
 935              		.loc 1 391 2 is_stmt 1 view .LVU216
 936 0030 0497     		str	r7, [sp, #16]
 937 0032 CDE902AB 		strd	r10, [sp, #8]
 938 0036 CDE90001 		strd	r0, [sp]
 939 003a 2346     		mov	r3, r4
 940 003c 3246     		mov	r2, r6
 941 003e 2946     		mov	r1, r5
 942 0040 0348     		ldr	r0, .L48+4
 943              	.LVL107:
 944              		.loc 1 391 2 is_stmt 0 view .LVU217
 945 0042 FFF7FEFF 		bl	printf
 946              	.LVL108:
 392:Core/Src/main.c **** 			(unsigned)width, (unsigned)height, (unsigned long)cycles, seconds, throughput, (unsigned long)ch
 393:Core/Src/main.c **** }
 947              		.loc 1 393 1 view .LVU218
 948 0046 07B0     		add	sp, sp, #28
 949              	.LCFI11:
 950              		.cfi_def_cfa_offset 36
 951              		@ sp needed
 952 0048 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 953              	.LVL109:
 954              	.L49:
 955              		.loc 1 393 1 view .LVU219
 956              		.align	2
 957              	.L48:
 958 004c 00000000 		.word	SystemCoreClock
 959 0050 00000000 		.word	.LC1
 960              		.cfi_endproc
 961              	.LFE145:
 963              		.section	.text.MX_GPIO_Init,"ax",%progbits
 964              		.align	1
 965              		.syntax unified
 966              		.thumb
 967              		.thumb_func
 969              	MX_GPIO_Init:
 970              	.LFB139:
 247:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 971              		.loc 1 247 1 is_stmt 1 view -0
 972              		.cfi_startproc
 973              		@ args = 0, pretend = 0, frame = 32
 974              		@ frame_needed = 0, uses_anonymous_args = 0
 975 0000 30B5     		push	{r4, r5, lr}
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 28


 976              	.LCFI12:
 977              		.cfi_def_cfa_offset 12
 978              		.cfi_offset 4, -12
 979              		.cfi_offset 5, -8
 980              		.cfi_offset 14, -4
 981 0002 89B0     		sub	sp, sp, #36
 982              	.LCFI13:
 983              		.cfi_def_cfa_offset 48
 248:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 984              		.loc 1 248 3 view .LVU221
 248:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 985              		.loc 1 248 20 is_stmt 0 view .LVU222
 986 0004 0024     		movs	r4, #0
 987 0006 0394     		str	r4, [sp, #12]
 988 0008 0494     		str	r4, [sp, #16]
 989 000a 0594     		str	r4, [sp, #20]
 990 000c 0694     		str	r4, [sp, #24]
 991 000e 0794     		str	r4, [sp, #28]
 254:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 992              		.loc 1 254 3 is_stmt 1 view .LVU223
 993              	.LBB33:
 254:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 994              		.loc 1 254 3 view .LVU224
 995 0010 0094     		str	r4, [sp]
 254:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 996              		.loc 1 254 3 view .LVU225
 997 0012 184B     		ldr	r3, .L52
 998 0014 1A6B     		ldr	r2, [r3, #48]
 999 0016 42F00402 		orr	r2, r2, #4
 1000 001a 1A63     		str	r2, [r3, #48]
 254:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 1001              		.loc 1 254 3 view .LVU226
 1002 001c 1A6B     		ldr	r2, [r3, #48]
 1003 001e 02F00402 		and	r2, r2, #4
 1004 0022 0092     		str	r2, [sp]
 254:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 1005              		.loc 1 254 3 view .LVU227
 1006 0024 009A     		ldr	r2, [sp]
 1007              	.LBE33:
 254:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 1008              		.loc 1 254 3 view .LVU228
 255:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 1009              		.loc 1 255 3 view .LVU229
 1010              	.LBB34:
 255:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 1011              		.loc 1 255 3 view .LVU230
 1012 0026 0194     		str	r4, [sp, #4]
 255:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 1013              		.loc 1 255 3 view .LVU231
 1014 0028 1A6B     		ldr	r2, [r3, #48]
 1015 002a 42F08002 		orr	r2, r2, #128
 1016 002e 1A63     		str	r2, [r3, #48]
 255:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 1017              		.loc 1 255 3 view .LVU232
 1018 0030 1A6B     		ldr	r2, [r3, #48]
 1019 0032 02F08002 		and	r2, r2, #128
 1020 0036 0192     		str	r2, [sp, #4]
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 29


 255:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 1021              		.loc 1 255 3 view .LVU233
 1022 0038 019A     		ldr	r2, [sp, #4]
 1023              	.LBE34:
 255:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 1024              		.loc 1 255 3 view .LVU234
 256:Core/Src/main.c **** 
 1025              		.loc 1 256 3 view .LVU235
 1026              	.LBB35:
 256:Core/Src/main.c **** 
 1027              		.loc 1 256 3 view .LVU236
 1028 003a 0294     		str	r4, [sp, #8]
 256:Core/Src/main.c **** 
 1029              		.loc 1 256 3 view .LVU237
 1030 003c 1A6B     		ldr	r2, [r3, #48]
 1031 003e 42F00202 		orr	r2, r2, #2
 1032 0042 1A63     		str	r2, [r3, #48]
 256:Core/Src/main.c **** 
 1033              		.loc 1 256 3 view .LVU238
 1034 0044 1B6B     		ldr	r3, [r3, #48]
 1035 0046 03F00203 		and	r3, r3, #2
 1036 004a 0293     		str	r3, [sp, #8]
 256:Core/Src/main.c **** 
 1037              		.loc 1 256 3 view .LVU239
 1038 004c 029B     		ldr	r3, [sp, #8]
 1039              	.LBE35:
 256:Core/Src/main.c **** 
 1040              		.loc 1 256 3 view .LVU240
 259:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 1041              		.loc 1 259 3 view .LVU241
 1042 004e 0A4D     		ldr	r5, .L52+4
 1043 0050 2246     		mov	r2, r4
 1044 0052 FF21     		movs	r1, #255
 1045 0054 2846     		mov	r0, r5
 1046 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1047              	.LVL110:
 264:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 1048              		.loc 1 264 3 view .LVU242
 264:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 1049              		.loc 1 264 23 is_stmt 0 view .LVU243
 1050 005a FF23     		movs	r3, #255
 1051 005c 0393     		str	r3, [sp, #12]
 266:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1052              		.loc 1 266 3 is_stmt 1 view .LVU244
 266:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1053              		.loc 1 266 24 is_stmt 0 view .LVU245
 1054 005e 0123     		movs	r3, #1
 1055 0060 0493     		str	r3, [sp, #16]
 267:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1056              		.loc 1 267 3 is_stmt 1 view .LVU246
 267:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1057              		.loc 1 267 24 is_stmt 0 view .LVU247
 1058 0062 0594     		str	r4, [sp, #20]
 268:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 1059              		.loc 1 268 3 is_stmt 1 view .LVU248
 268:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 1060              		.loc 1 268 25 is_stmt 0 view .LVU249
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 30


 1061 0064 0694     		str	r4, [sp, #24]
 269:Core/Src/main.c **** 
 1062              		.loc 1 269 3 is_stmt 1 view .LVU250
 1063 0066 03A9     		add	r1, sp, #12
 1064 0068 2846     		mov	r0, r5
 1065 006a FFF7FEFF 		bl	HAL_GPIO_Init
 1066              	.LVL111:
 274:Core/Src/main.c **** 
 1067              		.loc 1 274 1 is_stmt 0 view .LVU251
 1068 006e 09B0     		add	sp, sp, #36
 1069              	.LCFI14:
 1070              		.cfi_def_cfa_offset 12
 1071              		@ sp needed
 1072 0070 30BD     		pop	{r4, r5, pc}
 1073              	.L53:
 1074 0072 00BF     		.align	2
 1075              	.L52:
 1076 0074 00380240 		.word	1073887232
 1077 0078 00040240 		.word	1073873920
 1078              		.cfi_endproc
 1079              	.LFE139:
 1081              		.section	.text.__io_putchar,"ax",%progbits
 1082              		.align	1
 1083              		.global	__io_putchar
 1084              		.syntax unified
 1085              		.thumb
 1086              		.thumb_func
 1088              	__io_putchar:
 1089              	.LVL112:
 1090              	.LFB146:
 394:Core/Src/main.c **** 
 395:Core/Src/main.c **** int __io_putchar(int ch)
 396:Core/Src/main.c **** {
 1091              		.loc 1 396 1 is_stmt 1 view -0
 1092              		.cfi_startproc
 1093              		@ args = 0, pretend = 0, frame = 0
 1094              		@ frame_needed = 0, uses_anonymous_args = 0
 1095              		@ link register save eliminated.
 397:Core/Src/main.c **** 	/* Route to ITM stimulus port 0 for SWV view. Requires debugger and SWO enabled. */
 398:Core/Src/main.c **** 	if ((ITM->TCR & ITM_TCR_ITMENA_Msk) && (CoreDebug->DEMCR & CoreDebug_DEMCR_TRCENA_Msk))
 1096              		.loc 1 398 2 view .LVU253
 1097              		.loc 1 398 10 is_stmt 0 view .LVU254
 1098 0000 4FF06043 		mov	r3, #-536870912
 1099 0004 D3F8803E 		ldr	r3, [r3, #3712]
 1100              		.loc 1 398 5 view .LVU255
 1101 0008 13F0010F 		tst	r3, #1
 1102 000c 05D0     		beq	.L55
 1103              		.loc 1 398 51 discriminator 1 view .LVU256
 1104 000e 094B     		ldr	r3, .L58
 1105 0010 D3F8FC30 		ldr	r3, [r3, #252]
 1106              		.loc 1 398 38 discriminator 1 view .LVU257
 1107 0014 13F0807F 		tst	r3, #16777216
 1108 0018 01D1     		bne	.L56
 1109              	.L55:
 399:Core/Src/main.c **** 	{
 400:Core/Src/main.c **** 		while (ITM->PORT[0].u32 == 0) { __NOP(); }
 401:Core/Src/main.c **** 		ITM->PORT[0].u8 = (uint8_t)ch;
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 31


 402:Core/Src/main.c **** 		return ch;
 403:Core/Src/main.c **** 	}
 404:Core/Src/main.c **** 	/* Fallback: do nothing */
 405:Core/Src/main.c **** 	return ch;
 406:Core/Src/main.c **** }
 1110              		.loc 1 406 1 view .LVU258
 1111 001a 7047     		bx	lr
 1112              	.L57:
 400:Core/Src/main.c **** 		ITM->PORT[0].u8 = (uint8_t)ch;
 1113              		.loc 1 400 35 is_stmt 1 discriminator 2 view .LVU259
 1114              		.syntax unified
 1115              	@ 400 "Core/Src/main.c" 1
 1116 001c 00BF     		nop
 1117              	@ 0 "" 2
 1118              		.thumb
 1119              		.syntax unified
 1120              	.L56:
 400:Core/Src/main.c **** 		ITM->PORT[0].u8 = (uint8_t)ch;
 1121              		.loc 1 400 27 discriminator 1 view .LVU260
 400:Core/Src/main.c **** 		ITM->PORT[0].u8 = (uint8_t)ch;
 1122              		.loc 1 400 22 is_stmt 0 discriminator 1 view .LVU261
 1123 001e 4FF06043 		mov	r3, #-536870912
 1124 0022 1B68     		ldr	r3, [r3]
 400:Core/Src/main.c **** 		ITM->PORT[0].u8 = (uint8_t)ch;
 1125              		.loc 1 400 27 discriminator 1 view .LVU262
 1126 0024 002B     		cmp	r3, #0
 1127 0026 F9D0     		beq	.L57
 401:Core/Src/main.c **** 		return ch;
 1128              		.loc 1 401 3 is_stmt 1 view .LVU263
 401:Core/Src/main.c **** 		return ch;
 1129              		.loc 1 401 21 is_stmt 0 view .LVU264
 1130 0028 C3B2     		uxtb	r3, r0
 401:Core/Src/main.c **** 		return ch;
 1131              		.loc 1 401 19 view .LVU265
 1132 002a 4FF06042 		mov	r2, #-536870912
 1133 002e 1370     		strb	r3, [r2]
 402:Core/Src/main.c **** 	}
 1134              		.loc 1 402 3 is_stmt 1 view .LVU266
 402:Core/Src/main.c **** 	}
 1135              		.loc 1 402 10 is_stmt 0 view .LVU267
 1136 0030 F3E7     		b	.L55
 1137              	.L59:
 1138 0032 00BF     		.align	2
 1139              	.L58:
 1140 0034 00ED00E0 		.word	-536810240
 1141              		.cfi_endproc
 1142              	.LFE146:
 1144              		.section	.text.Error_Handler,"ax",%progbits
 1145              		.align	1
 1146              		.global	Error_Handler
 1147              		.syntax unified
 1148              		.thumb
 1149              		.thumb_func
 1151              	Error_Handler:
 1152              	.LFB147:
 407:Core/Src/main.c **** 
 408:Core/Src/main.c **** /* USER CODE END 4 */
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 32


 409:Core/Src/main.c **** 
 410:Core/Src/main.c **** /**
 411:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 412:Core/Src/main.c ****   * @retval None
 413:Core/Src/main.c ****   */
 414:Core/Src/main.c **** void Error_Handler(void)
 415:Core/Src/main.c **** {
 1153              		.loc 1 415 1 is_stmt 1 view -0
 1154              		.cfi_startproc
 1155              		@ Volatile: function does not return.
 1156              		@ args = 0, pretend = 0, frame = 0
 1157              		@ frame_needed = 0, uses_anonymous_args = 0
 1158              		@ link register save eliminated.
 416:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 417:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 418:Core/Src/main.c ****   __disable_irq();
 1159              		.loc 1 418 3 view .LVU269
 1160              	.LBB36:
 1161              	.LBI36:
 1162              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 33


  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 34


  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 35


 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 36


 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 37


 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 38


 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 39


 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 40


 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 41


 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 42


 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 43


 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 44


 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 45


 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 46


 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 47


 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 48


 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 49


 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1163              		.loc 2 960 27 view .LVU270
 1164              	.LBB37:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1165              		.loc 2 962 3 view .LVU271
 1166              		.syntax unified
 1167              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1168 0000 72B6     		cpsid i
 1169              	@ 0 "" 2
 1170              		.thumb
 1171              		.syntax unified
 1172              	.L61:
 1173              	.LBE37:
 1174              	.LBE36:
 419:Core/Src/main.c ****   while (1)
 1175              		.loc 1 419 3 view .LVU272
 420:Core/Src/main.c ****   {
 421:Core/Src/main.c ****   }
 1176              		.loc 1 421 3 view .LVU273
 419:Core/Src/main.c ****   while (1)
 1177              		.loc 1 419 9 view .LVU274
 1178 0002 FEE7     		b	.L61
 1179              		.cfi_endproc
 1180              	.LFE147:
 1182              		.section	.text.SystemClock_Config,"ax",%progbits
 1183              		.align	1
 1184              		.global	SystemClock_Config
 1185              		.syntax unified
 1186              		.thumb
 1187              		.thumb_func
 1189              	SystemClock_Config:
 1190              	.LFB138:
 200:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1191              		.loc 1 200 1 view -0
 1192              		.cfi_startproc
 1193              		@ args = 0, pretend = 0, frame = 80
 1194              		@ frame_needed = 0, uses_anonymous_args = 0
 1195 0000 00B5     		push	{lr}
 1196              	.LCFI15:
 1197              		.cfi_def_cfa_offset 4
 1198              		.cfi_offset 14, -4
 1199 0002 95B0     		sub	sp, sp, #84
 1200              	.LCFI16:
 1201              		.cfi_def_cfa_offset 88
 201:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1202              		.loc 1 201 3 view .LVU276
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 50


 201:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1203              		.loc 1 201 22 is_stmt 0 view .LVU277
 1204 0004 3422     		movs	r2, #52
 1205 0006 0021     		movs	r1, #0
 1206 0008 07A8     		add	r0, sp, #28
 1207 000a FFF7FEFF 		bl	memset
 1208              	.LVL113:
 202:Core/Src/main.c **** 
 1209              		.loc 1 202 3 is_stmt 1 view .LVU278
 202:Core/Src/main.c **** 
 1210              		.loc 1 202 22 is_stmt 0 view .LVU279
 1211 000e 0023     		movs	r3, #0
 1212 0010 0293     		str	r3, [sp, #8]
 1213 0012 0393     		str	r3, [sp, #12]
 1214 0014 0493     		str	r3, [sp, #16]
 1215 0016 0593     		str	r3, [sp, #20]
 1216 0018 0693     		str	r3, [sp, #24]
 206:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1217              		.loc 1 206 3 is_stmt 1 view .LVU280
 1218              	.LBB38:
 206:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1219              		.loc 1 206 3 view .LVU281
 1220 001a 0093     		str	r3, [sp]
 206:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1221              		.loc 1 206 3 view .LVU282
 1222 001c 214A     		ldr	r2, .L68
 1223 001e 116C     		ldr	r1, [r2, #64]
 1224 0020 41F08051 		orr	r1, r1, #268435456
 1225 0024 1164     		str	r1, [r2, #64]
 206:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1226              		.loc 1 206 3 view .LVU283
 1227 0026 126C     		ldr	r2, [r2, #64]
 1228 0028 02F08052 		and	r2, r2, #268435456
 1229 002c 0092     		str	r2, [sp]
 206:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1230              		.loc 1 206 3 view .LVU284
 1231 002e 009A     		ldr	r2, [sp]
 1232              	.LBE38:
 206:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1233              		.loc 1 206 3 view .LVU285
 207:Core/Src/main.c **** 
 1234              		.loc 1 207 3 view .LVU286
 1235              	.LBB39:
 207:Core/Src/main.c **** 
 1236              		.loc 1 207 3 view .LVU287
 1237 0030 0193     		str	r3, [sp, #4]
 207:Core/Src/main.c **** 
 1238              		.loc 1 207 3 view .LVU288
 1239 0032 1D4A     		ldr	r2, .L68+4
 1240 0034 1368     		ldr	r3, [r2]
 1241 0036 23F44043 		bic	r3, r3, #49152
 1242 003a 43F48043 		orr	r3, r3, #16384
 1243 003e 1360     		str	r3, [r2]
 207:Core/Src/main.c **** 
 1244              		.loc 1 207 3 view .LVU289
 1245 0040 1368     		ldr	r3, [r2]
 1246 0042 03F44043 		and	r3, r3, #49152
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 51


 1247 0046 0193     		str	r3, [sp, #4]
 207:Core/Src/main.c **** 
 1248              		.loc 1 207 3 view .LVU290
 1249 0048 019B     		ldr	r3, [sp, #4]
 1250              	.LBE39:
 207:Core/Src/main.c **** 
 1251              		.loc 1 207 3 view .LVU291
 212:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1252              		.loc 1 212 3 view .LVU292
 212:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1253              		.loc 1 212 36 is_stmt 0 view .LVU293
 1254 004a 0123     		movs	r3, #1
 1255 004c 0793     		str	r3, [sp, #28]
 213:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1256              		.loc 1 213 3 is_stmt 1 view .LVU294
 213:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1257              		.loc 1 213 30 is_stmt 0 view .LVU295
 1258 004e 4FF48033 		mov	r3, #65536
 1259 0052 0893     		str	r3, [sp, #32]
 214:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1260              		.loc 1 214 3 is_stmt 1 view .LVU296
 214:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1261              		.loc 1 214 34 is_stmt 0 view .LVU297
 1262 0054 0223     		movs	r3, #2
 1263 0056 0D93     		str	r3, [sp, #52]
 215:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 1264              		.loc 1 215 3 is_stmt 1 view .LVU298
 215:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 1265              		.loc 1 215 35 is_stmt 0 view .LVU299
 1266 0058 4FF48002 		mov	r2, #4194304
 1267 005c 0E92     		str	r2, [sp, #56]
 216:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 1268              		.loc 1 216 3 is_stmt 1 view .LVU300
 216:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 1269              		.loc 1 216 30 is_stmt 0 view .LVU301
 1270 005e 0F22     		movs	r2, #15
 1271 0060 0F92     		str	r2, [sp, #60]
 217:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1272              		.loc 1 217 3 is_stmt 1 view .LVU302
 217:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1273              		.loc 1 217 30 is_stmt 0 view .LVU303
 1274 0062 9022     		movs	r2, #144
 1275 0064 1092     		str	r2, [sp, #64]
 218:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 1276              		.loc 1 218 3 is_stmt 1 view .LVU304
 218:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 1277              		.loc 1 218 30 is_stmt 0 view .LVU305
 1278 0066 1193     		str	r3, [sp, #68]
 219:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1279              		.loc 1 219 3 is_stmt 1 view .LVU306
 219:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1280              		.loc 1 219 30 is_stmt 0 view .LVU307
 1281 0068 1293     		str	r3, [sp, #72]
 220:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1282              		.loc 1 220 3 is_stmt 1 view .LVU308
 220:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1283              		.loc 1 220 30 is_stmt 0 view .LVU309
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 52


 1284 006a 1393     		str	r3, [sp, #76]
 221:Core/Src/main.c ****   {
 1285              		.loc 1 221 3 is_stmt 1 view .LVU310
 221:Core/Src/main.c ****   {
 1286              		.loc 1 221 7 is_stmt 0 view .LVU311
 1287 006c 07A8     		add	r0, sp, #28
 1288 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 1289              	.LVL114:
 221:Core/Src/main.c ****   {
 1290              		.loc 1 221 6 discriminator 1 view .LVU312
 1291 0072 98B9     		cbnz	r0, .L66
 228:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1292              		.loc 1 228 3 is_stmt 1 view .LVU313
 228:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1293              		.loc 1 228 31 is_stmt 0 view .LVU314
 1294 0074 0F23     		movs	r3, #15
 1295 0076 0293     		str	r3, [sp, #8]
 230:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1296              		.loc 1 230 3 is_stmt 1 view .LVU315
 230:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1297              		.loc 1 230 34 is_stmt 0 view .LVU316
 1298 0078 0223     		movs	r3, #2
 1299 007a 0393     		str	r3, [sp, #12]
 231:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1300              		.loc 1 231 3 is_stmt 1 view .LVU317
 231:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1301              		.loc 1 231 35 is_stmt 0 view .LVU318
 1302 007c 0023     		movs	r3, #0
 1303 007e 0493     		str	r3, [sp, #16]
 232:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1304              		.loc 1 232 3 is_stmt 1 view .LVU319
 232:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1305              		.loc 1 232 36 is_stmt 0 view .LVU320
 1306 0080 4FF4A053 		mov	r3, #5120
 1307 0084 0593     		str	r3, [sp, #20]
 233:Core/Src/main.c **** 
 1308              		.loc 1 233 3 is_stmt 1 view .LVU321
 233:Core/Src/main.c **** 
 1309              		.loc 1 233 36 is_stmt 0 view .LVU322
 1310 0086 4FF48053 		mov	r3, #4096
 1311 008a 0693     		str	r3, [sp, #24]
 235:Core/Src/main.c ****   {
 1312              		.loc 1 235 3 is_stmt 1 view .LVU323
 235:Core/Src/main.c ****   {
 1313              		.loc 1 235 7 is_stmt 0 view .LVU324
 1314 008c 0321     		movs	r1, #3
 1315 008e 02A8     		add	r0, sp, #8
 1316 0090 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1317              	.LVL115:
 235:Core/Src/main.c ****   {
 1318              		.loc 1 235 6 discriminator 1 view .LVU325
 1319 0094 20B9     		cbnz	r0, .L67
 239:Core/Src/main.c **** 
 1320              		.loc 1 239 1 view .LVU326
 1321 0096 15B0     		add	sp, sp, #84
 1322              	.LCFI17:
 1323              		.cfi_remember_state
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 53


 1324              		.cfi_def_cfa_offset 4
 1325              		@ sp needed
 1326 0098 5DF804FB 		ldr	pc, [sp], #4
 1327              	.L66:
 1328              	.LCFI18:
 1329              		.cfi_restore_state
 223:Core/Src/main.c ****   }
 1330              		.loc 1 223 5 is_stmt 1 view .LVU327
 1331 009c FFF7FEFF 		bl	Error_Handler
 1332              	.LVL116:
 1333              	.L67:
 237:Core/Src/main.c ****   }
 1334              		.loc 1 237 5 view .LVU328
 1335 00a0 FFF7FEFF 		bl	Error_Handler
 1336              	.LVL117:
 1337              	.L69:
 1338              		.align	2
 1339              	.L68:
 1340 00a4 00380240 		.word	1073887232
 1341 00a8 00700040 		.word	1073770496
 1342              		.cfi_endproc
 1343              	.LFE138:
 1345              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1346              		.align	2
 1347              	.LC2:
 1348 0000 0D0A4545 		.ascii	"\015\012EEE3096S Practical 3 - STM32F4 Mandelbrot B"
 1348      45333039 
 1348      36532050 
 1348      72616374 
 1348      6963616C 
 1349 002d 656E6368 		.ascii	"enchmark\015\000"
 1349      6D61726B 
 1349      0D00
 1350 0037 00       		.align	2
 1351              	.LC3:
 1352 0038 53595343 		.ascii	"SYSCLK: %lu Hz\015\012\000"
 1352      4C4B3A20 
 1352      256C7520 
 1352      487A0D0A 
 1352      00
 1353              		.section	.text.main,"ax",%progbits
 1354              		.align	1
 1355              		.global	main
 1356              		.syntax unified
 1357              		.thumb
 1358              		.thumb_func
 1360              	main:
 1361              	.LFB137:
 106:Core/Src/main.c **** 
 1362              		.loc 1 106 1 view -0
 1363              		.cfi_startproc
 1364              		@ args = 0, pretend = 0, frame = 8
 1365              		@ frame_needed = 0, uses_anonymous_args = 0
 1366 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1367              	.LCFI19:
 1368              		.cfi_def_cfa_offset 32
 1369              		.cfi_offset 4, -32
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 54


 1370              		.cfi_offset 5, -28
 1371              		.cfi_offset 6, -24
 1372              		.cfi_offset 7, -20
 1373              		.cfi_offset 8, -16
 1374              		.cfi_offset 9, -12
 1375              		.cfi_offset 10, -8
 1376              		.cfi_offset 14, -4
 1377 0004 2DED028B 		vpush.64	{d8}
 1378              	.LCFI20:
 1379              		.cfi_def_cfa_offset 40
 1380              		.cfi_offset 80, -40
 1381              		.cfi_offset 81, -36
 1382 0008 82B0     		sub	sp, sp, #8
 1383              	.LCFI21:
 1384              		.cfi_def_cfa_offset 48
 115:Core/Src/main.c **** 
 1385              		.loc 1 115 3 view .LVU330
 1386 000a FFF7FEFF 		bl	HAL_Init
 1387              	.LVL118:
 122:Core/Src/main.c **** 
 1388              		.loc 1 122 3 view .LVU331
 1389 000e FFF7FEFF 		bl	SystemClock_Config
 1390              	.LVL119:
 129:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1391              		.loc 1 129 3 view .LVU332
 1392 0012 FFF7FEFF 		bl	MX_GPIO_Init
 1393              	.LVL120:
 131:Core/Src/main.c ****   printf("\r\nEEE3096S Practical 3 - STM32F4 Mandelbrot Benchmark\r\n");
 1394              		.loc 1 131 3 view .LVU333
 1395 0016 FFF7FEFF 		bl	dwt_cycle_counter_init
 1396              	.LVL121:
 132:Core/Src/main.c ****   printf("SYSCLK: %lu Hz\r\n", SystemCoreClock);
 1397              		.loc 1 132 3 view .LVU334
 1398 001a 4B48     		ldr	r0, .L79
 1399 001c FFF7FEFF 		bl	puts
 1400              	.LVL122:
 133:Core/Src/main.c **** 
 1401              		.loc 1 133 3 view .LVU335
 1402 0020 4A4B     		ldr	r3, .L79+4
 1403 0022 1968     		ldr	r1, [r3]
 1404 0024 4A48     		ldr	r0, .L79+8
 1405 0026 FFF7FEFF 		bl	printf
 1406              	.LVL123:
 1407 002a 85E0     		b	.L76
 1408              	.LVL124:
 1409              	.L72:
 1410              	.LBB40:
 1411              	.LBB41:
 161:Core/Src/main.c ****         } else {
 1412              		.loc 1 161 11 view .LVU336
 161:Core/Src/main.c ****         } else {
 1413              		.loc 1 161 29 is_stmt 0 view .LVU337
 1414 002c 6422     		movs	r2, #100
 1415 002e 5146     		mov	r1, r10
 1416 0030 3046     		mov	r0, r6
 1417 0032 FFF7FEFF 		bl	generate_mandelbrot_checksum_tiled
 1418              	.LVL125:
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 55


 1419 0036 0746     		mov	r7, r0
 1420              	.LVL126:
 1421              	.L74:
 166:Core/Src/main.c ****         uint32_t elapsed_cycles = end_cycles - start_cycles;
 1422              		.loc 1 166 9 is_stmt 1 view .LVU338
 1423              	.LBB42:
 1424              	.LBI42:
 318:Core/Src/main.c **** {
 1425              		.loc 1 318 24 view .LVU339
 1426              	.LBB43:
 320:Core/Src/main.c **** }
 1427              		.loc 1 320 2 view .LVU340
 320:Core/Src/main.c **** }
 1428              		.loc 1 320 12 is_stmt 0 view .LVU341
 1429 0038 464B     		ldr	r3, .L79+12
 1430 003a 5B68     		ldr	r3, [r3, #4]
 1431              	.LVL127:
 320:Core/Src/main.c **** }
 1432              		.loc 1 320 12 view .LVU342
 1433              	.LBE43:
 1434              	.LBE42:
 167:Core/Src/main.c ****         double elapsed_seconds = (double)elapsed_cycles / (double)SystemCoreClock;
 1435              		.loc 1 167 9 is_stmt 1 view .LVU343
 167:Core/Src/main.c ****         double elapsed_seconds = (double)elapsed_cycles / (double)SystemCoreClock;
 1436              		.loc 1 167 18 is_stmt 0 view .LVU344
 1437 003c 5D1B     		subs	r5, r3, r5
 1438              	.LVL128:
 168:Core/Src/main.c ****         double total_pixels = (double)w * (double)h;
 1439              		.loc 1 168 9 is_stmt 1 view .LVU345
 168:Core/Src/main.c ****         double total_pixels = (double)w * (double)h;
 1440              		.loc 1 168 34 is_stmt 0 view .LVU346
 1441 003e 2846     		mov	r0, r5
 1442              	.LVL129:
 168:Core/Src/main.c ****         double total_pixels = (double)w * (double)h;
 1443              		.loc 1 168 34 view .LVU347
 1444 0040 FFF7FEFF 		bl	__aeabi_ui2d
 1445              	.LVL130:
 168:Core/Src/main.c ****         double total_pixels = (double)w * (double)h;
 1446              		.loc 1 168 34 view .LVU348
 1447 0044 8046     		mov	r8, r0
 1448 0046 8946     		mov	r9, r1
 168:Core/Src/main.c ****         double total_pixels = (double)w * (double)h;
 1449              		.loc 1 168 59 view .LVU349
 1450 0048 404B     		ldr	r3, .L79+4
 1451 004a 1868     		ldr	r0, [r3]
 1452 004c FFF7FEFF 		bl	__aeabi_ui2d
 1453              	.LVL131:
 1454 0050 0246     		mov	r2, r0
 1455 0052 0B46     		mov	r3, r1
 168:Core/Src/main.c ****         double total_pixels = (double)w * (double)h;
 1456              		.loc 1 168 16 view .LVU350
 1457 0054 4046     		mov	r0, r8
 1458 0056 4946     		mov	r1, r9
 1459 0058 FFF7FEFF 		bl	__aeabi_ddiv
 1460              	.LVL132:
 1461 005c 8046     		mov	r8, r0
 1462 005e 8946     		mov	r9, r1
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 56


 1463              	.LVL133:
 169:Core/Src/main.c ****         double throughput = total_pixels / elapsed_seconds;
 1464              		.loc 1 169 9 is_stmt 1 view .LVU351
 169:Core/Src/main.c ****         double throughput = total_pixels / elapsed_seconds;
 1465              		.loc 1 169 31 is_stmt 0 view .LVU352
 1466 0060 3046     		mov	r0, r6
 1467 0062 FFF7FEFF 		bl	__aeabi_ui2d
 1468              	.LVL134:
 1469 0066 CDE90001 		strd	r0, [sp]
 169:Core/Src/main.c ****         double throughput = total_pixels / elapsed_seconds;
 1470              		.loc 1 169 43 view .LVU353
 1471 006a 5046     		mov	r0, r10
 1472 006c FFF7FEFF 		bl	__aeabi_ui2d
 1473              	.LVL135:
 1474 0070 0246     		mov	r2, r0
 1475 0072 0B46     		mov	r3, r1
 169:Core/Src/main.c ****         double throughput = total_pixels / elapsed_seconds;
 1476              		.loc 1 169 16 view .LVU354
 1477 0074 DDE90001 		ldrd	r0, [sp]
 1478 0078 FFF7FEFF 		bl	__aeabi_dmul
 1479              	.LVL136:
 170:Core/Src/main.c **** 
 1480              		.loc 1 170 9 is_stmt 1 view .LVU355
 170:Core/Src/main.c **** 
 1481              		.loc 1 170 16 is_stmt 0 view .LVU356
 1482 007c 4246     		mov	r2, r8
 1483 007e 4B46     		mov	r3, r9
 1484 0080 FFF7FEFF 		bl	__aeabi_ddiv
 1485              	.LVL137:
 170:Core/Src/main.c **** 
 1486              		.loc 1 170 16 view .LVU357
 1487 0084 41EC180B 		vmov	d8, r0, r1
 1488              	.LVL138:
 173:Core/Src/main.c ****         g_current_checksum = result_checksum;
 1489              		.loc 1 173 9 is_stmt 1 view .LVU358
 173:Core/Src/main.c ****         g_current_checksum = result_checksum;
 1490              		.loc 1 173 26 is_stmt 0 view .LVU359
 1491 0088 334B     		ldr	r3, .L79+16
 1492 008a 1D60     		str	r5, [r3]
 174:Core/Src/main.c ****         g_current_execution_time = elapsed_seconds * 1000.0; // ms
 1493              		.loc 1 174 9 is_stmt 1 view .LVU360
 174:Core/Src/main.c ****         g_current_execution_time = elapsed_seconds * 1000.0; // ms
 1494              		.loc 1 174 28 is_stmt 0 view .LVU361
 1495 008c 334B     		ldr	r3, .L79+20
 1496 008e 1F60     		str	r7, [r3]
 175:Core/Src/main.c ****         g_current_throughput = throughput;
 1497              		.loc 1 175 9 is_stmt 1 view .LVU362
 175:Core/Src/main.c ****         g_current_throughput = throughput;
 1498              		.loc 1 175 52 is_stmt 0 view .LVU363
 1499 0090 0022     		movs	r2, #0
 1500 0092 334B     		ldr	r3, .L79+24
 1501 0094 4046     		mov	r0, r8
 1502              	.LVL139:
 175:Core/Src/main.c ****         g_current_throughput = throughput;
 1503              		.loc 1 175 52 view .LVU364
 1504 0096 4946     		mov	r1, r9
 1505 0098 FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 57


 1506              	.LVL140:
 175:Core/Src/main.c ****         g_current_throughput = throughput;
 1507              		.loc 1 175 34 view .LVU365
 1508 009c 314B     		ldr	r3, .L79+28
 1509 009e C3E90001 		strd	r0, [r3]
 176:Core/Src/main.c **** 
 1510              		.loc 1 176 9 is_stmt 1 view .LVU366
 176:Core/Src/main.c **** 
 1511              		.loc 1 176 30 is_stmt 0 view .LVU367
 1512 00a2 314B     		ldr	r3, .L79+32
 1513 00a4 83ED008B 		vstr.64	d8, [r3]
 179:Core/Src/main.c ****         execution_time_ms[size_index] = elapsed_seconds * 1000.0;
 1514              		.loc 1 179 9 is_stmt 1 view .LVU368
 179:Core/Src/main.c ****         execution_time_ms[size_index] = elapsed_seconds * 1000.0;
 1515              		.loc 1 179 30 is_stmt 0 view .LVU369
 1516 00a8 304B     		ldr	r3, .L79+36
 1517 00aa 43F82470 		str	r7, [r3, r4, lsl #2]
 180:Core/Src/main.c ****         cpu_cycles[size_index] = elapsed_cycles;
 1518              		.loc 1 180 9 is_stmt 1 view .LVU370
 180:Core/Src/main.c ****         cpu_cycles[size_index] = elapsed_cycles;
 1519              		.loc 1 180 39 is_stmt 0 view .LVU371
 1520 00ae 304B     		ldr	r3, .L79+40
 1521 00b0 03EBC403 		add	r3, r3, r4, lsl #3
 1522 00b4 C3E90001 		strd	r0, [r3]
 181:Core/Src/main.c ****         throughput_pps[size_index] = throughput;
 1523              		.loc 1 181 9 is_stmt 1 view .LVU372
 181:Core/Src/main.c ****         throughput_pps[size_index] = throughput;
 1524              		.loc 1 181 32 is_stmt 0 view .LVU373
 1525 00b8 2E4B     		ldr	r3, .L79+44
 1526 00ba 43F82450 		str	r5, [r3, r4, lsl #2]
 182:Core/Src/main.c **** 
 1527              		.loc 1 182 9 is_stmt 1 view .LVU374
 182:Core/Src/main.c **** 
 1528              		.loc 1 182 36 is_stmt 0 view .LVU375
 1529 00be 2E4B     		ldr	r3, .L79+48
 1530 00c0 03EBC403 		add	r3, r3, r4, lsl #3
 1531 00c4 83ED008B 		vstr.64	d8, [r3]
 184:Core/Src/main.c ****       }
 1532              		.loc 1 184 9 is_stmt 1 view .LVU376
 1533 00c8 B0EE480A 		vmov.f32	s0, s16
 1534 00cc F0EE680A 		vmov.f32	s1, s17
 1535 00d0 3B46     		mov	r3, r7
 1536 00d2 2A46     		mov	r2, r5
 1537 00d4 5146     		mov	r1, r10
 1538 00d6 3046     		mov	r0, r6
 1539 00d8 FFF7FEFF 		bl	log_benchmark
 1540              	.LVL141:
 1541              	.LBE41:
 148:Core/Src/main.c ****       {
 1542              		.loc 1 148 67 discriminator 2 view .LVU377
 1543 00dc 0134     		adds	r4, r4, #1
 1544              	.LVL142:
 1545              	.L71:
 148:Core/Src/main.c ****       {
 1546              		.loc 1 148 48 discriminator 1 view .LVU378
 1547 00de 072C     		cmp	r4, #7
 1548 00e0 1BD8     		bhi	.L78
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 58


 1549              	.LBB46:
 150:Core/Src/main.c ****         uint16_t h = kHeights[size_index];
 1550              		.loc 1 150 9 view .LVU379
 150:Core/Src/main.c ****         uint16_t h = kHeights[size_index];
 1551              		.loc 1 150 18 is_stmt 0 view .LVU380
 1552 00e2 264B     		ldr	r3, .L79+52
 1553 00e4 33F81460 		ldrh	r6, [r3, r4, lsl #1]
 1554              	.LVL143:
 151:Core/Src/main.c ****         g_current_width = (uint32_t)w;
 1555              		.loc 1 151 9 is_stmt 1 view .LVU381
 151:Core/Src/main.c ****         g_current_width = (uint32_t)w;
 1556              		.loc 1 151 18 is_stmt 0 view .LVU382
 1557 00e8 254B     		ldr	r3, .L79+56
 1558 00ea 33F814A0 		ldrh	r10, [r3, r4, lsl #1]
 1559              	.LVL144:
 152:Core/Src/main.c ****         g_current_height = (uint32_t)h;
 1560              		.loc 1 152 9 is_stmt 1 view .LVU383
 152:Core/Src/main.c ****         g_current_height = (uint32_t)h;
 1561              		.loc 1 152 25 is_stmt 0 view .LVU384
 1562 00ee 254B     		ldr	r3, .L79+60
 1563 00f0 1E60     		str	r6, [r3]
 153:Core/Src/main.c **** 
 1564              		.loc 1 153 9 is_stmt 1 view .LVU385
 153:Core/Src/main.c **** 
 1565              		.loc 1 153 26 is_stmt 0 view .LVU386
 1566 00f2 254B     		ldr	r3, .L79+64
 1567 00f4 C3F800A0 		str	r10, [r3]
 155:Core/Src/main.c ****         uint32_t start_cycles = dwt_get_cycles();
 1568              		.loc 1 155 9 is_stmt 1 view .LVU387
 155:Core/Src/main.c ****         uint32_t start_cycles = dwt_get_cycles();
 1569              		.loc 1 155 21 is_stmt 0 view .LVU388
 1570 00f8 164B     		ldr	r3, .L79+12
 1571 00fa 0022     		movs	r2, #0
 1572 00fc 5A60     		str	r2, [r3, #4]
 156:Core/Src/main.c ****         
 1573              		.loc 1 156 9 is_stmt 1 view .LVU389
 1574              	.LBB44:
 1575              	.LBI44:
 318:Core/Src/main.c **** {
 1576              		.loc 1 318 24 view .LVU390
 1577              	.LBB45:
 320:Core/Src/main.c **** }
 1578              		.loc 1 320 2 view .LVU391
 320:Core/Src/main.c **** }
 1579              		.loc 1 320 12 is_stmt 0 view .LVU392
 1580 00fe 5D68     		ldr	r5, [r3, #4]
 1581              	.LVL145:
 320:Core/Src/main.c **** }
 1582              		.loc 1 320 12 view .LVU393
 1583              	.LBE45:
 1584              	.LBE44:
 159:Core/Src/main.c ****         if (w > MAX_TILE_SIZE || h > MAX_TILE_SIZE) {
 1585              		.loc 1 159 9 is_stmt 1 view .LVU394
 160:Core/Src/main.c ****           result_checksum = generate_mandelbrot_checksum_tiled(w, h, kMaxIter);
 1586              		.loc 1 160 9 view .LVU395
 160:Core/Src/main.c ****           result_checksum = generate_mandelbrot_checksum_tiled(w, h, kMaxIter);
 1587              		.loc 1 160 12 is_stmt 0 view .LVU396
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 59


 1588 0100 B6F5807F 		cmp	r6, #256
 1589 0104 92D8     		bhi	.L72
 160:Core/Src/main.c ****           result_checksum = generate_mandelbrot_checksum_tiled(w, h, kMaxIter);
 1590              		.loc 1 160 31 discriminator 1 view .LVU397
 1591 0106 BAF5807F 		cmp	r10, #256
 1592 010a 8FD8     		bhi	.L72
 163:Core/Src/main.c ****         }
 1593              		.loc 1 163 11 is_stmt 1 view .LVU398
 163:Core/Src/main.c ****         }
 1594              		.loc 1 163 29 is_stmt 0 view .LVU399
 1595 010c 6422     		movs	r2, #100
 1596 010e 5146     		mov	r1, r10
 1597 0110 3046     		mov	r0, r6
 1598 0112 FFF7FEFF 		bl	generate_mandelbrot_checksum
 1599              	.LVL146:
 1600 0116 0746     		mov	r7, r0
 1601              	.LVL147:
 163:Core/Src/main.c ****         }
 1602              		.loc 1 163 29 view .LVU400
 1603 0118 8EE7     		b	.L74
 1604              	.LVL148:
 1605              	.L78:
 163:Core/Src/main.c ****         }
 1606              		.loc 1 163 29 view .LVU401
 1607              	.LBE46:
 1608              	.LBE40:
 188:Core/Src/main.c ****       HAL_Delay(2000);
 1609              		.loc 1 188 7 is_stmt 1 view .LVU402
 1610 011a 1C4C     		ldr	r4, .L79+68
 1611              	.LVL149:
 188:Core/Src/main.c ****       HAL_Delay(2000);
 1612              		.loc 1 188 7 is_stmt 0 view .LVU403
 1613 011c 0122     		movs	r2, #1
 1614 011e 0221     		movs	r1, #2
 1615 0120 2046     		mov	r0, r4
 1616 0122 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1617              	.LVL150:
 189:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0 | GPIO_PIN_1, GPIO_PIN_RESET);
 1618              		.loc 1 189 7 is_stmt 1 view .LVU404
 1619 0126 4FF4FA60 		mov	r0, #2000
 1620 012a FFF7FEFF 		bl	HAL_Delay
 1621              	.LVL151:
 190:Core/Src/main.c ****   }
 1622              		.loc 1 190 7 view .LVU405
 1623 012e 0022     		movs	r2, #0
 1624 0130 0321     		movs	r1, #3
 1625 0132 2046     		mov	r0, r4
 1626 0134 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1627              	.LVL152:
 139:Core/Src/main.c ****   {
 1628              		.loc 1 139 9 view .LVU406
 1629              	.L76:
 139:Core/Src/main.c ****   {
 1630              		.loc 1 139 3 view .LVU407
 145:Core/Src/main.c **** 
 1631              		.loc 1 145 7 view .LVU408
 1632 0138 0122     		movs	r2, #1
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 60


 1633 013a 1146     		mov	r1, r2
 1634 013c 1348     		ldr	r0, .L79+68
 1635 013e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1636              	.LVL153:
 148:Core/Src/main.c ****       {
 1637              		.loc 1 148 7 view .LVU409
 1638              	.LBB47:
 148:Core/Src/main.c ****       {
 1639              		.loc 1 148 12 view .LVU410
 148:Core/Src/main.c ****       {
 1640              		.loc 1 148 21 is_stmt 0 view .LVU411
 1641 0142 0024     		movs	r4, #0
 148:Core/Src/main.c ****       {
 1642              		.loc 1 148 7 view .LVU412
 1643 0144 CBE7     		b	.L71
 1644              	.L80:
 1645 0146 00BF     		.align	2
 1646              	.L79:
 1647 0148 00000000 		.word	.LC2
 1648 014c 00000000 		.word	SystemCoreClock
 1649 0150 38000000 		.word	.LC3
 1650 0154 001000E0 		.word	-536866816
 1651 0158 00000000 		.word	g_current_cycles
 1652 015c 00000000 		.word	g_current_checksum
 1653 0160 00408F40 		.word	1083129856
 1654 0164 00000000 		.word	g_current_execution_time
 1655 0168 00000000 		.word	g_current_throughput
 1656 016c 00000000 		.word	checksum
 1657 0170 00000000 		.word	execution_time_ms
 1658 0174 00000000 		.word	cpu_cycles
 1659 0178 00000000 		.word	throughput_pps
 1660 017c 00000000 		.word	kWidths
 1661 0180 00000000 		.word	kHeights
 1662 0184 00000000 		.word	g_current_width
 1663 0188 00000000 		.word	g_current_height
 1664 018c 00040240 		.word	1073873920
 1665              	.LBE47:
 1666              		.cfi_endproc
 1667              	.LFE137:
 1669              		.global	g_current_tile
 1670              		.section	.bss.g_current_tile,"aw",%nobits
 1671              		.align	2
 1674              	g_current_tile:
 1675 0000 00000000 		.space	4
 1676              		.global	g_total_tiles
 1677              		.section	.bss.g_total_tiles,"aw",%nobits
 1678              		.align	2
 1681              	g_total_tiles:
 1682 0000 00000000 		.space	4
 1683              		.global	g_num_tiles_y
 1684              		.section	.bss.g_num_tiles_y,"aw",%nobits
 1685              		.align	2
 1688              	g_num_tiles_y:
 1689 0000 00000000 		.space	4
 1690              		.global	g_num_tiles_x
 1691              		.section	.bss.g_num_tiles_x,"aw",%nobits
 1692              		.align	2
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 61


 1695              	g_num_tiles_x:
 1696 0000 00000000 		.space	4
 1697              		.global	throughput_pps
 1698              		.section	.bss.throughput_pps,"aw",%nobits
 1699              		.align	3
 1702              	throughput_pps:
 1703 0000 00000000 		.space	64
 1703      00000000 
 1703      00000000 
 1703      00000000 
 1703      00000000 
 1704              		.global	cpu_cycles
 1705              		.section	.bss.cpu_cycles,"aw",%nobits
 1706              		.align	2
 1709              	cpu_cycles:
 1710 0000 00000000 		.space	32
 1710      00000000 
 1710      00000000 
 1710      00000000 
 1710      00000000 
 1711              		.global	execution_time_ms
 1712              		.section	.bss.execution_time_ms,"aw",%nobits
 1713              		.align	3
 1716              	execution_time_ms:
 1717 0000 00000000 		.space	64
 1717      00000000 
 1717      00000000 
 1717      00000000 
 1717      00000000 
 1718              		.global	checksum
 1719              		.section	.bss.checksum,"aw",%nobits
 1720              		.align	2
 1723              	checksum:
 1724 0000 00000000 		.space	32
 1724      00000000 
 1724      00000000 
 1724      00000000 
 1724      00000000 
 1725              		.global	g_current_throughput
 1726              		.section	.bss.g_current_throughput,"aw",%nobits
 1727              		.align	3
 1730              	g_current_throughput:
 1731 0000 00000000 		.space	8
 1731      00000000 
 1732              		.global	g_current_execution_time
 1733              		.section	.bss.g_current_execution_time,"aw",%nobits
 1734              		.align	3
 1737              	g_current_execution_time:
 1738 0000 00000000 		.space	8
 1738      00000000 
 1739              		.global	g_current_checksum
 1740              		.section	.bss.g_current_checksum,"aw",%nobits
 1741              		.align	2
 1744              	g_current_checksum:
 1745 0000 00000000 		.space	4
 1746              		.global	g_current_cycles
 1747              		.section	.bss.g_current_cycles,"aw",%nobits
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 62


 1748              		.align	2
 1751              	g_current_cycles:
 1752 0000 00000000 		.space	4
 1753              		.global	g_current_height
 1754              		.section	.bss.g_current_height,"aw",%nobits
 1755              		.align	2
 1758              	g_current_height:
 1759 0000 00000000 		.space	4
 1760              		.global	g_current_width
 1761              		.section	.bss.g_current_width,"aw",%nobits
 1762              		.align	2
 1765              	g_current_width:
 1766 0000 00000000 		.space	4
 1767              		.section	.rodata.kHeights,"a"
 1768              		.align	2
 1771              	kHeights:
 1772 0000 8000     		.short	128
 1773 0002 0001     		.short	256
 1774 0004 0002     		.short	512
 1775 0006 E001     		.short	480
 1776 0008 5802     		.short	600
 1777 000a 0003     		.short	768
 1778 000c D002     		.short	720
 1779 000e 3804     		.short	1080
 1780              		.section	.rodata.kWidths,"a"
 1781              		.align	2
 1784              	kWidths:
 1785 0000 8000     		.short	128
 1786 0002 0001     		.short	256
 1787 0004 0002     		.short	512
 1788 0006 8002     		.short	640
 1789 0008 2003     		.short	800
 1790 000a 0004     		.short	1024
 1791 000c 0005     		.short	1280
 1792 000e 8007     		.short	1920
 1793              		.text
 1794              	.Letext0:
 1795              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1796              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1797              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 1798              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1799              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1800              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1801              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1802              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1803              		.file 11 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1804              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1805              		.file 13 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltoo
 1806              		.file 14 "<built-in>"
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 63


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:27     .text.generate_mandelbrot_checksum:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:32     .text.generate_mandelbrot_checksum:00000000 generate_mandelbrot_checksum
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:307    .text.generate_mandelbrot_checksum:00000138 $d
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:315    .text.dwt_cycle_counter_init:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:320    .text.dwt_cycle_counter_init:00000000 dwt_cycle_counter_init
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:350    .text.dwt_cycle_counter_init:00000020 $d
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:356    .rodata.log_tiling_info.str1.4:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:360    .text.log_tiling_info:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:365    .text.log_tiling_info:00000000 log_tiling_info
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:410    .text.log_tiling_info:0000001c $d
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:415    .text.generate_mandelbrot_checksum_tiled:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:420    .text.generate_mandelbrot_checksum_tiled:00000000 generate_mandelbrot_checksum_tiled
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:863    .text.generate_mandelbrot_checksum_tiled:000001fc $d
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1695   .bss.g_num_tiles_x:00000000 g_num_tiles_x
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1688   .bss.g_num_tiles_y:00000000 g_num_tiles_y
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1681   .bss.g_total_tiles:00000000 g_total_tiles
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1674   .bss.g_current_tile:00000000 g_current_tile
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:875    .rodata.log_benchmark.str1.4:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:880    .text.log_benchmark:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:885    .text.log_benchmark:00000000 log_benchmark
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:958    .text.log_benchmark:0000004c $d
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:964    .text.MX_GPIO_Init:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:969    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1076   .text.MX_GPIO_Init:00000074 $d
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1082   .text.__io_putchar:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1088   .text.__io_putchar:00000000 __io_putchar
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1140   .text.__io_putchar:00000034 $d
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1145   .text.Error_Handler:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1151   .text.Error_Handler:00000000 Error_Handler
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1183   .text.SystemClock_Config:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1189   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1340   .text.SystemClock_Config:000000a4 $d
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1346   .rodata.main.str1.4:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1354   .text.main:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1360   .text.main:00000000 main
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1647   .text.main:00000148 $d
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1751   .bss.g_current_cycles:00000000 g_current_cycles
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1744   .bss.g_current_checksum:00000000 g_current_checksum
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1737   .bss.g_current_execution_time:00000000 g_current_execution_time
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1730   .bss.g_current_throughput:00000000 g_current_throughput
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1723   .bss.checksum:00000000 checksum
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1716   .bss.execution_time_ms:00000000 execution_time_ms
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1709   .bss.cpu_cycles:00000000 cpu_cycles
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1702   .bss.throughput_pps:00000000 throughput_pps
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1784   .rodata.kWidths:00000000 kWidths
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1771   .rodata.kHeights:00000000 kHeights
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1765   .bss.g_current_width:00000000 g_current_width
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1758   .bss.g_current_height:00000000 g_current_height
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1671   .bss.g_current_tile:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1678   .bss.g_total_tiles:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1685   .bss.g_num_tiles_y:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1692   .bss.g_num_tiles_x:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1699   .bss.throughput_pps:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1706   .bss.cpu_cycles:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1713   .bss.execution_time_ms:00000000 $d
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccy1eGva.s 			page 64


C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1720   .bss.checksum:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1727   .bss.g_current_throughput:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1734   .bss.g_current_execution_time:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1741   .bss.g_current_checksum:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1748   .bss.g_current_cycles:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1755   .bss.g_current_height:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1762   .bss.g_current_width:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1768   .rodata.kHeights:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccy1eGva.s:1781   .rodata.kWidths:00000000 $d

UNDEFINED SYMBOLS
__aeabi_ui2d
__aeabi_ddiv
__aeabi_dadd
__aeabi_dsub
__aeabi_dmul
__aeabi_dcmple
printf
SystemCoreClock
HAL_GPIO_WritePin
HAL_GPIO_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
puts
HAL_Delay
