ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.global	__aeabi_ui2d
  21              		.global	__aeabi_ddiv
  22              		.global	__aeabi_dadd
  23              		.global	__aeabi_dsub
  24              		.global	__aeabi_dmul
  25              		.global	__aeabi_dcmple
  26              		.section	.text.generate_mandelbrot_checksum,"ax",%progbits
  27              		.align	1
  28              		.syntax unified
  29              		.thumb
  30              		.thumb_func
  32              	generate_mandelbrot_checksum:
  33              	.LVL0:
  34              	.LFB140:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdio.h>
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 2


  25:Core/Src/main.c **** #include <stdint.h>
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** //TODO: Define variables you think you might need
  48:Core/Src/main.c **** // - Performance timing variables (e.g execution time, throughput, pixels per second, clock cycles)
  49:Core/Src/main.c **** /* Task 3: Fixed MAX_ITER = 100, measure cycles and throughput */
  50:Core/Src/main.c **** static const uint32_t kMaxIter = 100u;
  51:Core/Src/main.c **** static const uint32_t kNumResolutions = 5;
  52:Core/Src/main.c **** static const uint16_t kWidths[5]  = {128, 160, 192, 224, 256};
  53:Core/Src/main.c **** static const uint16_t kHeights[5] = {128, 160, 192, 224, 256};
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Live Expressions: current benchmark metrics */
  56:Core/Src/main.c **** volatile uint32_t g_current_width = 0u;
  57:Core/Src/main.c **** volatile uint32_t g_current_height = 0u;
  58:Core/Src/main.c **** volatile uint32_t g_current_cycles = 0u;
  59:Core/Src/main.c **** volatile uint32_t g_current_checksum = 0u;
  60:Core/Src/main.c **** volatile double g_current_execution_time = 0.0;
  61:Core/Src/main.c **** volatile double g_current_throughput = 0.0;
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* Live Expressions: per-size results */
  64:Core/Src/main.c **** volatile uint32_t checksum[5] = {0u, 0u, 0u, 0u, 0u};
  65:Core/Src/main.c **** volatile double execution_time_ms[5] = {0.0, 0.0, 0.0, 0.0, 0.0};
  66:Core/Src/main.c **** volatile uint32_t cpu_cycles[5] = {0u, 0u, 0u, 0u, 0u};
  67:Core/Src/main.c **** volatile double throughput_pps[5] = {0.0, 0.0, 0.0, 0.0, 0.0};
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* USER CODE END PV */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  72:Core/Src/main.c **** void SystemClock_Config(void);
  73:Core/Src/main.c **** static void MX_GPIO_Init(void);
  74:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  75:Core/Src/main.c **** //TODO: Define any function prototypes you might need such as the calculate Mandelbrot function amo
  76:Core/Src/main.c **** static uint32_t generate_mandelbrot_checksum(uint16_t width, uint16_t height, uint32_t max_iter);
  77:Core/Src/main.c **** static void dwt_cycle_counter_init(void);
  78:Core/Src/main.c **** static inline uint32_t dwt_get_cycles(void);
  79:Core/Src/main.c **** static void log_benchmark(uint16_t width, uint16_t height, uint32_t cycles, uint32_t checksum, doub
  80:Core/Src/main.c **** int __io_putchar(int ch);
  81:Core/Src/main.c **** 
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 3


  82:Core/Src/main.c **** /* USER CODE END PFP */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  85:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** /* USER CODE END 0 */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** /**
  90:Core/Src/main.c ****   * @brief  The application entry point.
  91:Core/Src/main.c ****   * @retval int
  92:Core/Src/main.c ****   */
  93:Core/Src/main.c **** int main(void)
  94:Core/Src/main.c **** {
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE END 1 */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 103:Core/Src/main.c ****   HAL_Init();
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* USER CODE END Init */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* Configure the system clock */
 110:Core/Src/main.c ****   SystemClock_Config();
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* USER CODE END SysInit */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* Initialize all configured peripherals */
 117:Core/Src/main.c ****   MX_GPIO_Init();
 118:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 119:Core/Src/main.c ****   dwt_cycle_counter_init();
 120:Core/Src/main.c ****   printf("\r\nEEE3096S Practical 3 - STM32F4 Mandelbrot Benchmark\r\n");
 121:Core/Src/main.c ****   printf("SYSCLK: %lu Hz\r\n", SystemCoreClock);
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /* USER CODE END 2 */
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* Infinite loop */
 126:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 127:Core/Src/main.c ****   while (1)
 128:Core/Src/main.c ****   {
 129:Core/Src/main.c ****     /* USER CODE END WHILE */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 132:Core/Src/main.c ****       /* Visual indicator: LED0 ON */
 133:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****       /* Task 3: Benchmark with fixed MAX_ITER=100, measure cycles and throughput */
 136:Core/Src/main.c ****       for (uint32_t size_index = 0; size_index < kNumResolutions; ++size_index)
 137:Core/Src/main.c ****       {
 138:Core/Src/main.c ****         uint16_t w = kWidths[size_index];
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 4


 139:Core/Src/main.c ****         uint16_t h = kHeights[size_index];
 140:Core/Src/main.c ****         g_current_width = (uint32_t)w;
 141:Core/Src/main.c ****         g_current_height = (uint32_t)h;
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****         DWT->CYCCNT = 0; // reset cycle counter
 144:Core/Src/main.c ****         uint32_t start_cycles = dwt_get_cycles();
 145:Core/Src/main.c ****         uint32_t result_checksum = generate_mandelbrot_checksum(w, h, kMaxIter);
 146:Core/Src/main.c ****         uint32_t end_cycles = dwt_get_cycles();
 147:Core/Src/main.c ****         uint32_t elapsed_cycles = end_cycles - start_cycles;
 148:Core/Src/main.c ****         double elapsed_seconds = (double)elapsed_cycles / (double)SystemCoreClock;
 149:Core/Src/main.c ****         double total_pixels = (double)w * (double)h;
 150:Core/Src/main.c ****         double throughput = total_pixels / elapsed_seconds;
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****         /* Update Live Expressions */
 153:Core/Src/main.c ****         g_current_cycles = elapsed_cycles;
 154:Core/Src/main.c ****         g_current_checksum = result_checksum;
 155:Core/Src/main.c ****         g_current_execution_time = elapsed_seconds * 1000.0; // ms
 156:Core/Src/main.c ****         g_current_throughput = throughput;
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****         /* Store results */
 159:Core/Src/main.c ****         checksum[size_index] = result_checksum;
 160:Core/Src/main.c ****         execution_time_ms[size_index] = elapsed_seconds * 1000.0;
 161:Core/Src/main.c ****         cpu_cycles[size_index] = elapsed_cycles;
 162:Core/Src/main.c ****         throughput_pps[size_index] = throughput;
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****         log_benchmark(w, h, elapsed_cycles, result_checksum, throughput);
 165:Core/Src/main.c ****       }
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****       /* Visual indicator: LED1 ON, keep ON 2s, then turn both OFF */
 168:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 169:Core/Src/main.c ****       HAL_Delay(2000);
 170:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0 | GPIO_PIN_1, GPIO_PIN_RESET);
 171:Core/Src/main.c ****   }
 172:Core/Src/main.c ****   /* USER CODE END 3 */
 173:Core/Src/main.c **** }
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** /**
 176:Core/Src/main.c ****   * @brief System Clock Configuration
 177:Core/Src/main.c ****   * @retval None
 178:Core/Src/main.c ****   */
 179:Core/Src/main.c **** void SystemClock_Config(void)
 180:Core/Src/main.c **** {
 181:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 182:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 185:Core/Src/main.c ****   */
 186:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 187:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 190:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 191:Core/Src/main.c ****   */
 192:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 193:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 5


 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 197:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 198:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 199:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 200:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 201:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 202:Core/Src/main.c ****   {
 203:Core/Src/main.c ****     Error_Handler();
 204:Core/Src/main.c ****   }
 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 207:Core/Src/main.c ****   */
 208:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 209:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 210:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 211:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 212:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 213:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 216:Core/Src/main.c ****   {
 217:Core/Src/main.c ****     Error_Handler();
 218:Core/Src/main.c ****   }
 219:Core/Src/main.c **** }
 220:Core/Src/main.c **** 
 221:Core/Src/main.c **** /**
 222:Core/Src/main.c ****   * @brief GPIO Initialization Function
 223:Core/Src/main.c ****   * @param None
 224:Core/Src/main.c ****   * @retval None
 225:Core/Src/main.c ****   */
 226:Core/Src/main.c **** static void MX_GPIO_Init(void)
 227:Core/Src/main.c **** {
 228:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 229:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 234:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 235:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 236:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 239:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 240:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 241:Core/Src/main.c **** 
 242:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB2 PB3
 243:Core/Src/main.c ****                            PB4 PB5 PB6 PB7 */
 244:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 245:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 246:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 247:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 248:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 249:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 252:Core/Src/main.c **** 
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 6


 253:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 254:Core/Src/main.c **** }
 255:Core/Src/main.c **** 
 256:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 257:Core/Src/main.c **** //TODO: Function signatures you defined previously , implement them here
 258:Core/Src/main.c **** 
 259:Core/Src/main.c **** static uint32_t generate_mandelbrot_checksum(uint16_t width, uint16_t height, uint32_t max_iter)
 260:Core/Src/main.c **** {
  35              		.loc 1 260 1 view -0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 48
  38              		@ frame_needed = 0, uses_anonymous_args = 0
  39              		.loc 1 260 1 is_stmt 0 view .LVU1
  40 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 36
  43              		.cfi_offset 4, -36
  44              		.cfi_offset 5, -32
  45              		.cfi_offset 6, -28
  46              		.cfi_offset 7, -24
  47              		.cfi_offset 8, -20
  48              		.cfi_offset 9, -16
  49              		.cfi_offset 10, -12
  50              		.cfi_offset 11, -8
  51              		.cfi_offset 14, -4
  52 0004 8DB0     		sub	sp, sp, #52
  53              	.LCFI1:
  54              		.cfi_def_cfa_offset 88
  55 0006 0790     		str	r0, [sp, #28]
  56 0008 0F46     		mov	r7, r1
  57 000a 9346     		mov	fp, r2
 261:Core/Src/main.c **** 	uint32_t mandelbrot_sum = 0u;
  58              		.loc 1 261 2 is_stmt 1 view .LVU2
  59              	.LVL1:
 262:Core/Src/main.c **** 	for (uint16_t y = 0; y < height; ++y)
  60              		.loc 1 262 2 view .LVU3
  61              	.LBB10:
  62              		.loc 1 262 7 view .LVU4
  63              		.loc 1 262 16 is_stmt 0 view .LVU5
  64 000c 0026     		movs	r6, #0
  65              	.LBE10:
 261:Core/Src/main.c **** 	uint32_t mandelbrot_sum = 0u;
  66              		.loc 1 261 11 view .LVU6
  67 000e B046     		mov	r8, r6
  68              	.LBB18:
  69              		.loc 1 262 2 view .LVU7
  70 0010 6DE0     		b	.L2
  71              	.LVL2:
  72              	.L6:
  73              	.LBB11:
  74              	.LBB12:
  75              	.LBB13:
  76              	.LBB14:
 263:Core/Src/main.c **** 	{
 264:Core/Src/main.c **** 		double y0 = ((double)y / (double)height) * 2.0 - 1.0;
 265:Core/Src/main.c **** 		for (uint16_t x = 0; x < width; ++x)
 266:Core/Src/main.c **** 		{
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 7


 267:Core/Src/main.c **** 			double x0 = ((double)x / (double)width) * 3.5 - 2.5;
 268:Core/Src/main.c **** 			double xi = 0.0;
 269:Core/Src/main.c **** 			double yi = 0.0;
 270:Core/Src/main.c **** 			uint32_t iteration = 0u;
 271:Core/Src/main.c **** 			while (iteration < max_iter && (xi*xi + yi*yi) <= 4.0)
 272:Core/Src/main.c **** 			{
 273:Core/Src/main.c **** 				double tmp = xi*xi - yi*yi + x0;
  77              		.loc 1 273 5 is_stmt 1 view .LVU8
  78              		.loc 1 273 24 is_stmt 0 view .LVU9
  79 0012 3246     		mov	r2, r6
  80 0014 3B46     		mov	r3, r7
  81 0016 DDE90001 		ldrd	r0, [sp]
  82 001a FFF7FEFF 		bl	__aeabi_dsub
  83              	.LVL3:
  84              		.loc 1 273 12 view .LVU10
  85 001e DDE90223 		ldrd	r2, [sp, #8]
  86 0022 FFF7FEFF 		bl	__aeabi_dadd
  87              	.LVL4:
  88 0026 0646     		mov	r6, r0
  89 0028 0F46     		mov	r7, r1
  90              	.LVL5:
 274:Core/Src/main.c **** 				yi = 2.0*xi*yi + y0;
  91              		.loc 1 274 5 is_stmt 1 view .LVU11
  92              		.loc 1 274 13 is_stmt 0 view .LVU12
  93 002a 2246     		mov	r2, r4
  94 002c 2B46     		mov	r3, r5
  95 002e 2046     		mov	r0, r4
  96 0030 2946     		mov	r1, r5
  97 0032 FFF7FEFF 		bl	__aeabi_dadd
  98              	.LVL6:
  99              		.loc 1 274 16 view .LVU13
 100 0036 4246     		mov	r2, r8
 101 0038 4B46     		mov	r3, r9
 102 003a FFF7FEFF 		bl	__aeabi_dmul
 103              	.LVL7:
 104              		.loc 1 274 8 view .LVU14
 105 003e DDE90423 		ldrd	r2, [sp, #16]
 106 0042 FFF7FEFF 		bl	__aeabi_dadd
 107              	.LVL8:
 108 0046 8046     		mov	r8, r0
 109              	.LVL9:
 110              		.loc 1 274 8 view .LVU15
 111 0048 8946     		mov	r9, r1
 112              	.LVL10:
 275:Core/Src/main.c **** 				xi = tmp;
 113              		.loc 1 275 5 is_stmt 1 view .LVU16
 276:Core/Src/main.c **** 				++iteration;
 114              		.loc 1 276 5 view .LVU17
 115 004a 0AF1010A 		add	r10, r10, #1
 116              	.LVL11:
 275:Core/Src/main.c **** 				xi = tmp;
 117              		.loc 1 275 8 is_stmt 0 view .LVU18
 118 004e 3446     		mov	r4, r6
 119 0050 3D46     		mov	r5, r7
 120              	.LVL12:
 121              	.L4:
 275:Core/Src/main.c **** 				xi = tmp;
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 8


 122              		.loc 1 275 8 view .LVU19
 123              	.LBE14:
 271:Core/Src/main.c **** 			{
 124              		.loc 1 271 32 is_stmt 1 view .LVU20
 125 0052 DA45     		cmp	r10, fp
 126 0054 1BD2     		bcs	.L5
 271:Core/Src/main.c **** 			{
 127              		.loc 1 271 38 is_stmt 0 discriminator 1 view .LVU21
 128 0056 2246     		mov	r2, r4
 129 0058 2B46     		mov	r3, r5
 130 005a 2046     		mov	r0, r4
 131 005c 2946     		mov	r1, r5
 132 005e FFF7FEFF 		bl	__aeabi_dmul
 133              	.LVL13:
 134 0062 CDE90001 		strd	r0, [sp]
 271:Core/Src/main.c **** 			{
 135              		.loc 1 271 46 discriminator 1 view .LVU22
 136 0066 4246     		mov	r2, r8
 137 0068 4B46     		mov	r3, r9
 138 006a 4046     		mov	r0, r8
 139 006c 4946     		mov	r1, r9
 140 006e FFF7FEFF 		bl	__aeabi_dmul
 141              	.LVL14:
 142 0072 0646     		mov	r6, r0
 143 0074 0F46     		mov	r7, r1
 271:Core/Src/main.c **** 			{
 144              		.loc 1 271 42 discriminator 1 view .LVU23
 145 0076 0246     		mov	r2, r0
 146 0078 0B46     		mov	r3, r1
 147 007a DDE90001 		ldrd	r0, [sp]
 148 007e FFF7FEFF 		bl	__aeabi_dadd
 149              	.LVL15:
 271:Core/Src/main.c **** 			{
 150              		.loc 1 271 32 discriminator 1 view .LVU24
 151 0082 0022     		movs	r2, #0
 152 0084 2C4B     		ldr	r3, .L12
 153 0086 FFF7FEFF 		bl	__aeabi_dcmple
 154              	.LVL16:
 155 008a 0028     		cmp	r0, #0
 156 008c C1D1     		bne	.L6
 157              	.L5:
 277:Core/Src/main.c **** 			}
 278:Core/Src/main.c **** 			mandelbrot_sum += iteration;
 158              		.loc 1 278 19 view .LVU25
 159 008e 089E     		ldr	r6, [sp, #32]
 160 0090 099F     		ldr	r7, [sp, #36]
 161              		.loc 1 278 4 is_stmt 1 view .LVU26
 162              		.loc 1 278 19 is_stmt 0 view .LVU27
 163 0092 5744     		add	r7, r7, r10
 164              	.LVL17:
 165              		.loc 1 278 19 view .LVU28
 166              	.LBE13:
 265:Core/Src/main.c **** 		{
 167              		.loc 1 265 35 is_stmt 1 discriminator 2 view .LVU29
 168 0094 731C     		adds	r3, r6, #1
 169 0096 9EB2     		uxth	r6, r3
 170              	.LVL18:
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 9


 171              	.L3:
 265:Core/Src/main.c **** 		{
 172              		.loc 1 265 26 discriminator 1 view .LVU30
 173 0098 079B     		ldr	r3, [sp, #28]
 174 009a 9E42     		cmp	r6, r3
 175 009c 22D2     		bcs	.L10
 176              	.LBB15:
 267:Core/Src/main.c **** 			double xi = 0.0;
 177              		.loc 1 267 4 view .LVU31
 267:Core/Src/main.c **** 			double xi = 0.0;
 178              		.loc 1 267 17 is_stmt 0 view .LVU32
 179 009e 3046     		mov	r0, r6
 180 00a0 FFF7FEFF 		bl	__aeabi_ui2d
 181              	.LVL19:
 182 00a4 0446     		mov	r4, r0
 183 00a6 0D46     		mov	r5, r1
 267:Core/Src/main.c **** 			double xi = 0.0;
 184              		.loc 1 267 29 view .LVU33
 185 00a8 0798     		ldr	r0, [sp, #28]
 186 00aa FFF7FEFF 		bl	__aeabi_ui2d
 187              	.LVL20:
 188 00ae 0246     		mov	r2, r0
 189 00b0 0B46     		mov	r3, r1
 267:Core/Src/main.c **** 			double xi = 0.0;
 190              		.loc 1 267 27 view .LVU34
 191 00b2 2046     		mov	r0, r4
 192 00b4 2946     		mov	r1, r5
 193 00b6 FFF7FEFF 		bl	__aeabi_ddiv
 194              	.LVL21:
 267:Core/Src/main.c **** 			double xi = 0.0;
 195              		.loc 1 267 44 view .LVU35
 196 00ba 0022     		movs	r2, #0
 197 00bc 1F4B     		ldr	r3, .L12+4
 198 00be FFF7FEFF 		bl	__aeabi_dmul
 199              	.LVL22:
 267:Core/Src/main.c **** 			double xi = 0.0;
 200              		.loc 1 267 11 view .LVU36
 201 00c2 0022     		movs	r2, #0
 202 00c4 1E4B     		ldr	r3, .L12+8
 203 00c6 FFF7FEFF 		bl	__aeabi_dsub
 204              	.LVL23:
 205 00ca CDE90201 		strd	r0, [sp, #8]
 206              	.LVL24:
 268:Core/Src/main.c **** 			double yi = 0.0;
 207              		.loc 1 268 4 is_stmt 1 view .LVU37
 269:Core/Src/main.c **** 			uint32_t iteration = 0u;
 208              		.loc 1 269 4 view .LVU38
 270:Core/Src/main.c **** 			while (iteration < max_iter && (xi*xi + yi*yi) <= 4.0)
 209              		.loc 1 270 4 view .LVU39
 271:Core/Src/main.c **** 			{
 210              		.loc 1 271 4 view .LVU40
 270:Core/Src/main.c **** 			while (iteration < max_iter && (xi*xi + yi*yi) <= 4.0)
 211              		.loc 1 270 13 is_stmt 0 view .LVU41
 212 00ce 4FF0000A 		mov	r10, #0
 269:Core/Src/main.c **** 			uint32_t iteration = 0u;
 213              		.loc 1 269 11 view .LVU42
 214 00d2 4FF00008 		mov	r8, #0
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 10


 215 00d6 4FF00009 		mov	r9, #0
 268:Core/Src/main.c **** 			double yi = 0.0;
 216              		.loc 1 268 11 view .LVU43
 217 00da 4446     		mov	r4, r8
 218 00dc 4D46     		mov	r5, r9
 219 00de 0896     		str	r6, [sp, #32]
 220 00e0 0997     		str	r7, [sp, #36]
 271:Core/Src/main.c **** 			{
 221              		.loc 1 271 10 view .LVU44
 222 00e2 B6E7     		b	.L4
 223              	.LVL25:
 224              	.L10:
 271:Core/Src/main.c **** 			{
 225              		.loc 1 271 10 view .LVU45
 226              	.LBE15:
 227              	.LBE12:
 228              	.LBE11:
 262:Core/Src/main.c **** 	{
 229              		.loc 1 262 35 discriminator 2 view .LVU46
 230 00e4 0A9E     		ldr	r6, [sp, #40]
 231              	.LVL26:
 262:Core/Src/main.c **** 	{
 232              		.loc 1 262 35 discriminator 2 view .LVU47
 233 00e6 B846     		mov	r8, r7
 234 00e8 0B9F     		ldr	r7, [sp, #44]
 235              	.LVL27:
 262:Core/Src/main.c **** 	{
 236              		.loc 1 262 35 is_stmt 1 discriminator 2 view .LVU48
 237 00ea 731C     		adds	r3, r6, #1
 238 00ec 9EB2     		uxth	r6, r3
 239              	.LVL28:
 240              	.L2:
 262:Core/Src/main.c **** 	{
 241              		.loc 1 262 25 discriminator 1 view .LVU49
 242 00ee BE42     		cmp	r6, r7
 243 00f0 1ED2     		bcs	.L11
 244              	.LBB17:
 264:Core/Src/main.c **** 		for (uint16_t x = 0; x < width; ++x)
 245              		.loc 1 264 3 view .LVU50
 264:Core/Src/main.c **** 		for (uint16_t x = 0; x < width; ++x)
 246              		.loc 1 264 16 is_stmt 0 view .LVU51
 247 00f2 3046     		mov	r0, r6
 248 00f4 FFF7FEFF 		bl	__aeabi_ui2d
 249              	.LVL29:
 250 00f8 0446     		mov	r4, r0
 251 00fa 0D46     		mov	r5, r1
 264:Core/Src/main.c **** 		for (uint16_t x = 0; x < width; ++x)
 252              		.loc 1 264 28 view .LVU52
 253 00fc 3846     		mov	r0, r7
 254 00fe FFF7FEFF 		bl	__aeabi_ui2d
 255              	.LVL30:
 256 0102 0246     		mov	r2, r0
 257 0104 0B46     		mov	r3, r1
 264:Core/Src/main.c **** 		for (uint16_t x = 0; x < width; ++x)
 258              		.loc 1 264 26 view .LVU53
 259 0106 2046     		mov	r0, r4
 260 0108 2946     		mov	r1, r5
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 11


 261 010a FFF7FEFF 		bl	__aeabi_ddiv
 262              	.LVL31:
 263 010e 0246     		mov	r2, r0
 264 0110 0B46     		mov	r3, r1
 264:Core/Src/main.c **** 		for (uint16_t x = 0; x < width; ++x)
 265              		.loc 1 264 44 view .LVU54
 266 0112 FFF7FEFF 		bl	__aeabi_dadd
 267              	.LVL32:
 264:Core/Src/main.c **** 		for (uint16_t x = 0; x < width; ++x)
 268              		.loc 1 264 10 view .LVU55
 269 0116 0022     		movs	r2, #0
 270 0118 0A4B     		ldr	r3, .L12+12
 271 011a FFF7FEFF 		bl	__aeabi_dsub
 272              	.LVL33:
 273 011e CDE90401 		strd	r0, [sp, #16]
 274              	.LVL34:
 265:Core/Src/main.c **** 		{
 275              		.loc 1 265 3 is_stmt 1 view .LVU56
 276              	.LBB16:
 265:Core/Src/main.c **** 		{
 277              		.loc 1 265 8 view .LVU57
 265:Core/Src/main.c **** 		{
 278              		.loc 1 265 17 is_stmt 0 view .LVU58
 279 0122 4FF00009 		mov	r9, #0
 280 0126 0A96     		str	r6, [sp, #40]
 281 0128 4E46     		mov	r6, r9
 282              	.LVL35:
 265:Core/Src/main.c **** 		{
 283              		.loc 1 265 17 view .LVU59
 284 012a 0B97     		str	r7, [sp, #44]
 285 012c 4746     		mov	r7, r8
 265:Core/Src/main.c **** 		{
 286              		.loc 1 265 3 view .LVU60
 287 012e B3E7     		b	.L3
 288              	.LVL36:
 289              	.L11:
 265:Core/Src/main.c **** 		{
 290              		.loc 1 265 3 view .LVU61
 291              	.LBE16:
 292              	.LBE17:
 293              	.LBE18:
 279:Core/Src/main.c **** 		}
 280:Core/Src/main.c **** 	}
 281:Core/Src/main.c **** 	return mandelbrot_sum;
 294              		.loc 1 281 2 is_stmt 1 view .LVU62
 282:Core/Src/main.c **** }
 295              		.loc 1 282 1 is_stmt 0 view .LVU63
 296 0130 4046     		mov	r0, r8
 297 0132 0DB0     		add	sp, sp, #52
 298              	.LCFI2:
 299              		.cfi_def_cfa_offset 36
 300              		@ sp needed
 301 0134 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 302              	.LVL37:
 303              	.L13:
 304              		.loc 1 282 1 view .LVU64
 305              		.align	2
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 12


 306              	.L12:
 307 0138 00001040 		.word	1074790400
 308 013c 00000C40 		.word	1074528256
 309 0140 00000440 		.word	1074003968
 310 0144 0000F03F 		.word	1072693248
 311              		.cfi_endproc
 312              	.LFE140:
 314              		.section	.text.dwt_cycle_counter_init,"ax",%progbits
 315              		.align	1
 316              		.syntax unified
 317              		.thumb
 318              		.thumb_func
 320              	dwt_cycle_counter_init:
 321              	.LFB141:
 283:Core/Src/main.c **** 
 284:Core/Src/main.c **** static void dwt_cycle_counter_init(void)
 285:Core/Src/main.c **** {
 322              		.loc 1 285 1 is_stmt 1 view -0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326              		@ link register save eliminated.
 286:Core/Src/main.c **** 	/* Enable TRC */
 287:Core/Src/main.c **** 	CoreDebug->DEMCR |= CoreDebug_DEMCR_TRCENA_Msk;
 327              		.loc 1 287 2 view .LVU66
 328              		.loc 1 287 11 is_stmt 0 view .LVU67
 329 0000 074A     		ldr	r2, .L15
 330 0002 D2F8FC30 		ldr	r3, [r2, #252]
 331              		.loc 1 287 19 view .LVU68
 332 0006 43F08073 		orr	r3, r3, #16777216
 333 000a C2F8FC30 		str	r3, [r2, #252]
 288:Core/Src/main.c **** 	/* Unlock DWT (if locked) by writing the key to LAR when present */
 289:Core/Src/main.c **** #ifdef DWT_LAR
 290:Core/Src/main.c **** 	DWT->LAR = 0xC5ACCE55;
 291:Core/Src/main.c **** #endif
 292:Core/Src/main.c **** 	/* Reset the cycle counter */
 293:Core/Src/main.c **** 	DWT->CYCCNT = 0;
 334              		.loc 1 293 2 is_stmt 1 view .LVU69
 335              		.loc 1 293 14 is_stmt 0 view .LVU70
 336 000e 054B     		ldr	r3, .L15+4
 337 0010 0022     		movs	r2, #0
 338 0012 5A60     		str	r2, [r3, #4]
 294:Core/Src/main.c **** 	/* Enable the cycle counter */
 295:Core/Src/main.c **** 	DWT->CTRL |= DWT_CTRL_CYCCNTENA_Msk;
 339              		.loc 1 295 2 is_stmt 1 view .LVU71
 340              		.loc 1 295 5 is_stmt 0 view .LVU72
 341 0014 1A68     		ldr	r2, [r3]
 342              		.loc 1 295 12 view .LVU73
 343 0016 42F00102 		orr	r2, r2, #1
 344 001a 1A60     		str	r2, [r3]
 296:Core/Src/main.c **** }
 345              		.loc 1 296 1 view .LVU74
 346 001c 7047     		bx	lr
 347              	.L16:
 348 001e 00BF     		.align	2
 349              	.L15:
 350 0020 00ED00E0 		.word	-536810240
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 13


 351 0024 001000E0 		.word	-536866816
 352              		.cfi_endproc
 353              	.LFE141:
 355              		.section	.rodata.log_benchmark.str1.4,"aMS",%progbits,1
 356              		.align	2
 357              	.LC0:
 358 0000 5265736F 		.ascii	"Resolution %ux%u, cycles %lu, time %.6f s, throughp"
 358      6C757469 
 358      6F6E2025 
 358      75782575 
 358      2C206379 
 359 0033 75742025 		.ascii	"ut %.0f pps, checksum %lu\015\012\000"
 359      2E306620 
 359      7070732C 
 359      20636865 
 359      636B7375 
 360              		.section	.text.log_benchmark,"ax",%progbits
 361              		.align	1
 362              		.syntax unified
 363              		.thumb
 364              		.thumb_func
 366              	log_benchmark:
 367              	.LVL38:
 368              	.LFB143:
 297:Core/Src/main.c **** 
 298:Core/Src/main.c **** static inline uint32_t dwt_get_cycles(void)
 299:Core/Src/main.c **** {
 300:Core/Src/main.c **** 	return DWT->CYCCNT;
 301:Core/Src/main.c **** }
 302:Core/Src/main.c **** 
 303:Core/Src/main.c **** static void log_benchmark(uint16_t width, uint16_t height, uint32_t cycles, uint32_t checksum, doub
 304:Core/Src/main.c **** {
 369              		.loc 1 304 1 is_stmt 1 view -0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373              		.loc 1 304 1 is_stmt 0 view .LVU76
 374 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 375              	.LCFI3:
 376              		.cfi_def_cfa_offset 36
 377              		.cfi_offset 4, -36
 378              		.cfi_offset 5, -32
 379              		.cfi_offset 6, -28
 380              		.cfi_offset 7, -24
 381              		.cfi_offset 8, -20
 382              		.cfi_offset 9, -16
 383              		.cfi_offset 10, -12
 384              		.cfi_offset 11, -8
 385              		.cfi_offset 14, -4
 386 0004 87B0     		sub	sp, sp, #28
 387              	.LCFI4:
 388              		.cfi_def_cfa_offset 64
 389 0006 0546     		mov	r5, r0
 390 0008 0E46     		mov	r6, r1
 391 000a 1446     		mov	r4, r2
 392 000c 1F46     		mov	r7, r3
 393 000e 5BEC10AB 		vmov	r10, fp, d0
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 14


 305:Core/Src/main.c **** 	double seconds = (double)cycles / (double)SystemCoreClock;
 394              		.loc 1 305 2 is_stmt 1 view .LVU77
 395              		.loc 1 305 19 is_stmt 0 view .LVU78
 396 0012 1046     		mov	r0, r2
 397              	.LVL39:
 398              		.loc 1 305 19 view .LVU79
 399 0014 FFF7FEFF 		bl	__aeabi_ui2d
 400              	.LVL40:
 401              		.loc 1 305 19 view .LVU80
 402 0018 8046     		mov	r8, r0
 403 001a 8946     		mov	r9, r1
 404              		.loc 1 305 36 view .LVU81
 405 001c 0B4B     		ldr	r3, .L19
 406 001e 1868     		ldr	r0, [r3]
 407 0020 FFF7FEFF 		bl	__aeabi_ui2d
 408              	.LVL41:
 409 0024 0246     		mov	r2, r0
 410 0026 0B46     		mov	r3, r1
 411              		.loc 1 305 9 view .LVU82
 412 0028 4046     		mov	r0, r8
 413 002a 4946     		mov	r1, r9
 414 002c FFF7FEFF 		bl	__aeabi_ddiv
 415              	.LVL42:
 306:Core/Src/main.c **** 	printf("Resolution %ux%u, cycles %lu, time %.6f s, throughput %.0f pps, checksum %lu\r\n",
 416              		.loc 1 306 2 is_stmt 1 view .LVU83
 417 0030 0497     		str	r7, [sp, #16]
 418 0032 CDE902AB 		strd	r10, [sp, #8]
 419 0036 CDE90001 		strd	r0, [sp]
 420 003a 2346     		mov	r3, r4
 421 003c 3246     		mov	r2, r6
 422 003e 2946     		mov	r1, r5
 423 0040 0348     		ldr	r0, .L19+4
 424              	.LVL43:
 425              		.loc 1 306 2 is_stmt 0 view .LVU84
 426 0042 FFF7FEFF 		bl	printf
 427              	.LVL44:
 307:Core/Src/main.c **** 			(unsigned)width, (unsigned)height, (unsigned long)cycles, seconds, throughput, (unsigned long)ch
 308:Core/Src/main.c **** }
 428              		.loc 1 308 1 view .LVU85
 429 0046 07B0     		add	sp, sp, #28
 430              	.LCFI5:
 431              		.cfi_def_cfa_offset 36
 432              		@ sp needed
 433 0048 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 434              	.LVL45:
 435              	.L20:
 436              		.loc 1 308 1 view .LVU86
 437              		.align	2
 438              	.L19:
 439 004c 00000000 		.word	SystemCoreClock
 440 0050 00000000 		.word	.LC0
 441              		.cfi_endproc
 442              	.LFE143:
 444              		.section	.text.MX_GPIO_Init,"ax",%progbits
 445              		.align	1
 446              		.syntax unified
 447              		.thumb
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 15


 448              		.thumb_func
 450              	MX_GPIO_Init:
 451              	.LFB139:
 227:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 452              		.loc 1 227 1 is_stmt 1 view -0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 32
 455              		@ frame_needed = 0, uses_anonymous_args = 0
 456 0000 30B5     		push	{r4, r5, lr}
 457              	.LCFI6:
 458              		.cfi_def_cfa_offset 12
 459              		.cfi_offset 4, -12
 460              		.cfi_offset 5, -8
 461              		.cfi_offset 14, -4
 462 0002 89B0     		sub	sp, sp, #36
 463              	.LCFI7:
 464              		.cfi_def_cfa_offset 48
 228:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 465              		.loc 1 228 3 view .LVU88
 228:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 466              		.loc 1 228 20 is_stmt 0 view .LVU89
 467 0004 0024     		movs	r4, #0
 468 0006 0394     		str	r4, [sp, #12]
 469 0008 0494     		str	r4, [sp, #16]
 470 000a 0594     		str	r4, [sp, #20]
 471 000c 0694     		str	r4, [sp, #24]
 472 000e 0794     		str	r4, [sp, #28]
 234:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 473              		.loc 1 234 3 is_stmt 1 view .LVU90
 474              	.LBB19:
 234:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 475              		.loc 1 234 3 view .LVU91
 476 0010 0094     		str	r4, [sp]
 234:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 477              		.loc 1 234 3 view .LVU92
 478 0012 184B     		ldr	r3, .L23
 479 0014 1A6B     		ldr	r2, [r3, #48]
 480 0016 42F00402 		orr	r2, r2, #4
 481 001a 1A63     		str	r2, [r3, #48]
 234:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 482              		.loc 1 234 3 view .LVU93
 483 001c 1A6B     		ldr	r2, [r3, #48]
 484 001e 02F00402 		and	r2, r2, #4
 485 0022 0092     		str	r2, [sp]
 234:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 486              		.loc 1 234 3 view .LVU94
 487 0024 009A     		ldr	r2, [sp]
 488              	.LBE19:
 234:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 489              		.loc 1 234 3 view .LVU95
 235:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 490              		.loc 1 235 3 view .LVU96
 491              	.LBB20:
 235:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 492              		.loc 1 235 3 view .LVU97
 493 0026 0194     		str	r4, [sp, #4]
 235:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 16


 494              		.loc 1 235 3 view .LVU98
 495 0028 1A6B     		ldr	r2, [r3, #48]
 496 002a 42F08002 		orr	r2, r2, #128
 497 002e 1A63     		str	r2, [r3, #48]
 235:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 498              		.loc 1 235 3 view .LVU99
 499 0030 1A6B     		ldr	r2, [r3, #48]
 500 0032 02F08002 		and	r2, r2, #128
 501 0036 0192     		str	r2, [sp, #4]
 235:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 502              		.loc 1 235 3 view .LVU100
 503 0038 019A     		ldr	r2, [sp, #4]
 504              	.LBE20:
 235:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 505              		.loc 1 235 3 view .LVU101
 236:Core/Src/main.c **** 
 506              		.loc 1 236 3 view .LVU102
 507              	.LBB21:
 236:Core/Src/main.c **** 
 508              		.loc 1 236 3 view .LVU103
 509 003a 0294     		str	r4, [sp, #8]
 236:Core/Src/main.c **** 
 510              		.loc 1 236 3 view .LVU104
 511 003c 1A6B     		ldr	r2, [r3, #48]
 512 003e 42F00202 		orr	r2, r2, #2
 513 0042 1A63     		str	r2, [r3, #48]
 236:Core/Src/main.c **** 
 514              		.loc 1 236 3 view .LVU105
 515 0044 1B6B     		ldr	r3, [r3, #48]
 516 0046 03F00203 		and	r3, r3, #2
 517 004a 0293     		str	r3, [sp, #8]
 236:Core/Src/main.c **** 
 518              		.loc 1 236 3 view .LVU106
 519 004c 029B     		ldr	r3, [sp, #8]
 520              	.LBE21:
 236:Core/Src/main.c **** 
 521              		.loc 1 236 3 view .LVU107
 239:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 522              		.loc 1 239 3 view .LVU108
 523 004e 0A4D     		ldr	r5, .L23+4
 524 0050 2246     		mov	r2, r4
 525 0052 FF21     		movs	r1, #255
 526 0054 2846     		mov	r0, r5
 527 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
 528              	.LVL46:
 244:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 529              		.loc 1 244 3 view .LVU109
 244:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 530              		.loc 1 244 23 is_stmt 0 view .LVU110
 531 005a FF23     		movs	r3, #255
 532 005c 0393     		str	r3, [sp, #12]
 246:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 533              		.loc 1 246 3 is_stmt 1 view .LVU111
 246:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 534              		.loc 1 246 24 is_stmt 0 view .LVU112
 535 005e 0123     		movs	r3, #1
 536 0060 0493     		str	r3, [sp, #16]
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 17


 247:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 537              		.loc 1 247 3 is_stmt 1 view .LVU113
 247:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 538              		.loc 1 247 24 is_stmt 0 view .LVU114
 539 0062 0594     		str	r4, [sp, #20]
 248:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 540              		.loc 1 248 3 is_stmt 1 view .LVU115
 248:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 541              		.loc 1 248 25 is_stmt 0 view .LVU116
 542 0064 0694     		str	r4, [sp, #24]
 249:Core/Src/main.c **** 
 543              		.loc 1 249 3 is_stmt 1 view .LVU117
 544 0066 03A9     		add	r1, sp, #12
 545 0068 2846     		mov	r0, r5
 546 006a FFF7FEFF 		bl	HAL_GPIO_Init
 547              	.LVL47:
 254:Core/Src/main.c **** 
 548              		.loc 1 254 1 is_stmt 0 view .LVU118
 549 006e 09B0     		add	sp, sp, #36
 550              	.LCFI8:
 551              		.cfi_def_cfa_offset 12
 552              		@ sp needed
 553 0070 30BD     		pop	{r4, r5, pc}
 554              	.L24:
 555 0072 00BF     		.align	2
 556              	.L23:
 557 0074 00380240 		.word	1073887232
 558 0078 00040240 		.word	1073873920
 559              		.cfi_endproc
 560              	.LFE139:
 562              		.section	.text.__io_putchar,"ax",%progbits
 563              		.align	1
 564              		.global	__io_putchar
 565              		.syntax unified
 566              		.thumb
 567              		.thumb_func
 569              	__io_putchar:
 570              	.LVL48:
 571              	.LFB144:
 309:Core/Src/main.c **** 
 310:Core/Src/main.c **** int __io_putchar(int ch)
 311:Core/Src/main.c **** {
 572              		.loc 1 311 1 is_stmt 1 view -0
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 0
 575              		@ frame_needed = 0, uses_anonymous_args = 0
 576              		@ link register save eliminated.
 312:Core/Src/main.c **** 	/* Route to ITM stimulus port 0 for SWV view. Requires debugger and SWO enabled. */
 313:Core/Src/main.c **** 	if ((ITM->TCR & ITM_TCR_ITMENA_Msk) && (CoreDebug->DEMCR & CoreDebug_DEMCR_TRCENA_Msk))
 577              		.loc 1 313 2 view .LVU120
 578              		.loc 1 313 10 is_stmt 0 view .LVU121
 579 0000 4FF06043 		mov	r3, #-536870912
 580 0004 D3F8803E 		ldr	r3, [r3, #3712]
 581              		.loc 1 313 5 view .LVU122
 582 0008 13F0010F 		tst	r3, #1
 583 000c 05D0     		beq	.L26
 584              		.loc 1 313 51 discriminator 1 view .LVU123
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 18


 585 000e 094B     		ldr	r3, .L29
 586 0010 D3F8FC30 		ldr	r3, [r3, #252]
 587              		.loc 1 313 38 discriminator 1 view .LVU124
 588 0014 13F0807F 		tst	r3, #16777216
 589 0018 01D1     		bne	.L27
 590              	.L26:
 314:Core/Src/main.c **** 	{
 315:Core/Src/main.c **** 		while (ITM->PORT[0].u32 == 0) { __NOP(); }
 316:Core/Src/main.c **** 		ITM->PORT[0].u8 = (uint8_t)ch;
 317:Core/Src/main.c **** 		return ch;
 318:Core/Src/main.c **** 	}
 319:Core/Src/main.c **** 	/* Fallback: do nothing */
 320:Core/Src/main.c **** 	return ch;
 321:Core/Src/main.c **** }
 591              		.loc 1 321 1 view .LVU125
 592 001a 7047     		bx	lr
 593              	.L28:
 315:Core/Src/main.c **** 		ITM->PORT[0].u8 = (uint8_t)ch;
 594              		.loc 1 315 35 is_stmt 1 discriminator 2 view .LVU126
 595              		.syntax unified
 596              	@ 315 "Core/Src/main.c" 1
 597 001c 00BF     		nop
 598              	@ 0 "" 2
 599              		.thumb
 600              		.syntax unified
 601              	.L27:
 315:Core/Src/main.c **** 		ITM->PORT[0].u8 = (uint8_t)ch;
 602              		.loc 1 315 27 discriminator 1 view .LVU127
 315:Core/Src/main.c **** 		ITM->PORT[0].u8 = (uint8_t)ch;
 603              		.loc 1 315 22 is_stmt 0 discriminator 1 view .LVU128
 604 001e 4FF06043 		mov	r3, #-536870912
 605 0022 1B68     		ldr	r3, [r3]
 315:Core/Src/main.c **** 		ITM->PORT[0].u8 = (uint8_t)ch;
 606              		.loc 1 315 27 discriminator 1 view .LVU129
 607 0024 002B     		cmp	r3, #0
 608 0026 F9D0     		beq	.L28
 316:Core/Src/main.c **** 		return ch;
 609              		.loc 1 316 3 is_stmt 1 view .LVU130
 316:Core/Src/main.c **** 		return ch;
 610              		.loc 1 316 21 is_stmt 0 view .LVU131
 611 0028 C3B2     		uxtb	r3, r0
 316:Core/Src/main.c **** 		return ch;
 612              		.loc 1 316 19 view .LVU132
 613 002a 4FF06042 		mov	r2, #-536870912
 614 002e 1370     		strb	r3, [r2]
 317:Core/Src/main.c **** 	}
 615              		.loc 1 317 3 is_stmt 1 view .LVU133
 317:Core/Src/main.c **** 	}
 616              		.loc 1 317 10 is_stmt 0 view .LVU134
 617 0030 F3E7     		b	.L26
 618              	.L30:
 619 0032 00BF     		.align	2
 620              	.L29:
 621 0034 00ED00E0 		.word	-536810240
 622              		.cfi_endproc
 623              	.LFE144:
 625              		.section	.text.Error_Handler,"ax",%progbits
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 19


 626              		.align	1
 627              		.global	Error_Handler
 628              		.syntax unified
 629              		.thumb
 630              		.thumb_func
 632              	Error_Handler:
 633              	.LFB145:
 322:Core/Src/main.c **** 
 323:Core/Src/main.c **** /* USER CODE END 4 */
 324:Core/Src/main.c **** 
 325:Core/Src/main.c **** /**
 326:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 327:Core/Src/main.c ****   * @retval None
 328:Core/Src/main.c ****   */
 329:Core/Src/main.c **** void Error_Handler(void)
 330:Core/Src/main.c **** {
 634              		.loc 1 330 1 is_stmt 1 view -0
 635              		.cfi_startproc
 636              		@ Volatile: function does not return.
 637              		@ args = 0, pretend = 0, frame = 0
 638              		@ frame_needed = 0, uses_anonymous_args = 0
 639              		@ link register save eliminated.
 331:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 332:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 333:Core/Src/main.c ****   __disable_irq();
 640              		.loc 1 333 3 view .LVU136
 641              	.LBB22:
 642              	.LBI22:
 643              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 20


  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 21


  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 22


 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 23


 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 24


 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 25


 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 26


 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 27


 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 28


 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 29


 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 30


 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 31


 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 32


 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 33


 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 34


 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 35


 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 36


 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 644              		.loc 2 960 27 view .LVU137
 645              	.LBB23:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 646              		.loc 2 962 3 view .LVU138
 647              		.syntax unified
 648              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 649 0000 72B6     		cpsid i
 650              	@ 0 "" 2
 651              		.thumb
 652              		.syntax unified
 653              	.L32:
 654              	.LBE23:
 655              	.LBE22:
 334:Core/Src/main.c ****   while (1)
 656              		.loc 1 334 3 view .LVU139
 335:Core/Src/main.c ****   {
 336:Core/Src/main.c ****   }
 657              		.loc 1 336 3 view .LVU140
 334:Core/Src/main.c ****   while (1)
 658              		.loc 1 334 9 view .LVU141
 659 0002 FEE7     		b	.L32
 660              		.cfi_endproc
 661              	.LFE145:
 663              		.section	.text.SystemClock_Config,"ax",%progbits
 664              		.align	1
 665              		.global	SystemClock_Config
 666              		.syntax unified
 667              		.thumb
 668              		.thumb_func
 670              	SystemClock_Config:
 671              	.LFB138:
 180:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 672              		.loc 1 180 1 view -0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 80
 675              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 37


 676 0000 00B5     		push	{lr}
 677              	.LCFI9:
 678              		.cfi_def_cfa_offset 4
 679              		.cfi_offset 14, -4
 680 0002 95B0     		sub	sp, sp, #84
 681              	.LCFI10:
 682              		.cfi_def_cfa_offset 88
 181:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 683              		.loc 1 181 3 view .LVU143
 181:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 684              		.loc 1 181 22 is_stmt 0 view .LVU144
 685 0004 3422     		movs	r2, #52
 686 0006 0021     		movs	r1, #0
 687 0008 07A8     		add	r0, sp, #28
 688 000a FFF7FEFF 		bl	memset
 689              	.LVL49:
 182:Core/Src/main.c **** 
 690              		.loc 1 182 3 is_stmt 1 view .LVU145
 182:Core/Src/main.c **** 
 691              		.loc 1 182 22 is_stmt 0 view .LVU146
 692 000e 0023     		movs	r3, #0
 693 0010 0293     		str	r3, [sp, #8]
 694 0012 0393     		str	r3, [sp, #12]
 695 0014 0493     		str	r3, [sp, #16]
 696 0016 0593     		str	r3, [sp, #20]
 697 0018 0693     		str	r3, [sp, #24]
 186:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 698              		.loc 1 186 3 is_stmt 1 view .LVU147
 699              	.LBB24:
 186:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 700              		.loc 1 186 3 view .LVU148
 701 001a 0093     		str	r3, [sp]
 186:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 702              		.loc 1 186 3 view .LVU149
 703 001c 214A     		ldr	r2, .L39
 704 001e 116C     		ldr	r1, [r2, #64]
 705 0020 41F08051 		orr	r1, r1, #268435456
 706 0024 1164     		str	r1, [r2, #64]
 186:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 707              		.loc 1 186 3 view .LVU150
 708 0026 126C     		ldr	r2, [r2, #64]
 709 0028 02F08052 		and	r2, r2, #268435456
 710 002c 0092     		str	r2, [sp]
 186:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 711              		.loc 1 186 3 view .LVU151
 712 002e 009A     		ldr	r2, [sp]
 713              	.LBE24:
 186:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 714              		.loc 1 186 3 view .LVU152
 187:Core/Src/main.c **** 
 715              		.loc 1 187 3 view .LVU153
 716              	.LBB25:
 187:Core/Src/main.c **** 
 717              		.loc 1 187 3 view .LVU154
 718 0030 0193     		str	r3, [sp, #4]
 187:Core/Src/main.c **** 
 719              		.loc 1 187 3 view .LVU155
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 38


 720 0032 1D4A     		ldr	r2, .L39+4
 721 0034 1368     		ldr	r3, [r2]
 722 0036 23F44043 		bic	r3, r3, #49152
 723 003a 43F48043 		orr	r3, r3, #16384
 724 003e 1360     		str	r3, [r2]
 187:Core/Src/main.c **** 
 725              		.loc 1 187 3 view .LVU156
 726 0040 1368     		ldr	r3, [r2]
 727 0042 03F44043 		and	r3, r3, #49152
 728 0046 0193     		str	r3, [sp, #4]
 187:Core/Src/main.c **** 
 729              		.loc 1 187 3 view .LVU157
 730 0048 019B     		ldr	r3, [sp, #4]
 731              	.LBE25:
 187:Core/Src/main.c **** 
 732              		.loc 1 187 3 view .LVU158
 192:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 733              		.loc 1 192 3 view .LVU159
 192:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 734              		.loc 1 192 36 is_stmt 0 view .LVU160
 735 004a 0123     		movs	r3, #1
 736 004c 0793     		str	r3, [sp, #28]
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 737              		.loc 1 193 3 is_stmt 1 view .LVU161
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 738              		.loc 1 193 30 is_stmt 0 view .LVU162
 739 004e 4FF48033 		mov	r3, #65536
 740 0052 0893     		str	r3, [sp, #32]
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 741              		.loc 1 194 3 is_stmt 1 view .LVU163
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 742              		.loc 1 194 34 is_stmt 0 view .LVU164
 743 0054 0223     		movs	r3, #2
 744 0056 0D93     		str	r3, [sp, #52]
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 745              		.loc 1 195 3 is_stmt 1 view .LVU165
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 746              		.loc 1 195 35 is_stmt 0 view .LVU166
 747 0058 4FF48002 		mov	r2, #4194304
 748 005c 0E92     		str	r2, [sp, #56]
 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 749              		.loc 1 196 3 is_stmt 1 view .LVU167
 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 750              		.loc 1 196 30 is_stmt 0 view .LVU168
 751 005e 0F22     		movs	r2, #15
 752 0060 0F92     		str	r2, [sp, #60]
 197:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 753              		.loc 1 197 3 is_stmt 1 view .LVU169
 197:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 754              		.loc 1 197 30 is_stmt 0 view .LVU170
 755 0062 9022     		movs	r2, #144
 756 0064 1092     		str	r2, [sp, #64]
 198:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 757              		.loc 1 198 3 is_stmt 1 view .LVU171
 198:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 758              		.loc 1 198 30 is_stmt 0 view .LVU172
 759 0066 1193     		str	r3, [sp, #68]
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 39


 199:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 760              		.loc 1 199 3 is_stmt 1 view .LVU173
 199:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 761              		.loc 1 199 30 is_stmt 0 view .LVU174
 762 0068 1293     		str	r3, [sp, #72]
 200:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 763              		.loc 1 200 3 is_stmt 1 view .LVU175
 200:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 764              		.loc 1 200 30 is_stmt 0 view .LVU176
 765 006a 1393     		str	r3, [sp, #76]
 201:Core/Src/main.c ****   {
 766              		.loc 1 201 3 is_stmt 1 view .LVU177
 201:Core/Src/main.c ****   {
 767              		.loc 1 201 7 is_stmt 0 view .LVU178
 768 006c 07A8     		add	r0, sp, #28
 769 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 770              	.LVL50:
 201:Core/Src/main.c ****   {
 771              		.loc 1 201 6 discriminator 1 view .LVU179
 772 0072 98B9     		cbnz	r0, .L37
 208:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 773              		.loc 1 208 3 is_stmt 1 view .LVU180
 208:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 774              		.loc 1 208 31 is_stmt 0 view .LVU181
 775 0074 0F23     		movs	r3, #15
 776 0076 0293     		str	r3, [sp, #8]
 210:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 777              		.loc 1 210 3 is_stmt 1 view .LVU182
 210:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 778              		.loc 1 210 34 is_stmt 0 view .LVU183
 779 0078 0223     		movs	r3, #2
 780 007a 0393     		str	r3, [sp, #12]
 211:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 781              		.loc 1 211 3 is_stmt 1 view .LVU184
 211:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 782              		.loc 1 211 35 is_stmt 0 view .LVU185
 783 007c 0023     		movs	r3, #0
 784 007e 0493     		str	r3, [sp, #16]
 212:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 785              		.loc 1 212 3 is_stmt 1 view .LVU186
 212:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 786              		.loc 1 212 36 is_stmt 0 view .LVU187
 787 0080 4FF4A053 		mov	r3, #5120
 788 0084 0593     		str	r3, [sp, #20]
 213:Core/Src/main.c **** 
 789              		.loc 1 213 3 is_stmt 1 view .LVU188
 213:Core/Src/main.c **** 
 790              		.loc 1 213 36 is_stmt 0 view .LVU189
 791 0086 4FF48053 		mov	r3, #4096
 792 008a 0693     		str	r3, [sp, #24]
 215:Core/Src/main.c ****   {
 793              		.loc 1 215 3 is_stmt 1 view .LVU190
 215:Core/Src/main.c ****   {
 794              		.loc 1 215 7 is_stmt 0 view .LVU191
 795 008c 0321     		movs	r1, #3
 796 008e 02A8     		add	r0, sp, #8
 797 0090 FFF7FEFF 		bl	HAL_RCC_ClockConfig
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 40


 798              	.LVL51:
 215:Core/Src/main.c ****   {
 799              		.loc 1 215 6 discriminator 1 view .LVU192
 800 0094 20B9     		cbnz	r0, .L38
 219:Core/Src/main.c **** 
 801              		.loc 1 219 1 view .LVU193
 802 0096 15B0     		add	sp, sp, #84
 803              	.LCFI11:
 804              		.cfi_remember_state
 805              		.cfi_def_cfa_offset 4
 806              		@ sp needed
 807 0098 5DF804FB 		ldr	pc, [sp], #4
 808              	.L37:
 809              	.LCFI12:
 810              		.cfi_restore_state
 203:Core/Src/main.c ****   }
 811              		.loc 1 203 5 is_stmt 1 view .LVU194
 812 009c FFF7FEFF 		bl	Error_Handler
 813              	.LVL52:
 814              	.L38:
 217:Core/Src/main.c ****   }
 815              		.loc 1 217 5 view .LVU195
 816 00a0 FFF7FEFF 		bl	Error_Handler
 817              	.LVL53:
 818              	.L40:
 819              		.align	2
 820              	.L39:
 821 00a4 00380240 		.word	1073887232
 822 00a8 00700040 		.word	1073770496
 823              		.cfi_endproc
 824              	.LFE138:
 826              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 827              		.align	2
 828              	.LC1:
 829 0000 0D0A4545 		.ascii	"\015\012EEE3096S Practical 3 - STM32F4 Mandelbrot B"
 829      45333039 
 829      36532050 
 829      72616374 
 829      6963616C 
 830 002d 656E6368 		.ascii	"enchmark\015\000"
 830      6D61726B 
 830      0D00
 831 0037 00       		.align	2
 832              	.LC2:
 833 0038 53595343 		.ascii	"SYSCLK: %lu Hz\015\012\000"
 833      4C4B3A20 
 833      256C7520 
 833      487A0D0A 
 833      00
 834              		.section	.text.main,"ax",%progbits
 835              		.align	1
 836              		.global	main
 837              		.syntax unified
 838              		.thumb
 839              		.thumb_func
 841              	main:
 842              	.LFB137:
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 41


  94:Core/Src/main.c **** 
 843              		.loc 1 94 1 view -0
 844              		.cfi_startproc
 845              		@ args = 0, pretend = 0, frame = 8
 846              		@ frame_needed = 0, uses_anonymous_args = 0
 847 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 848              	.LCFI13:
 849              		.cfi_def_cfa_offset 32
 850              		.cfi_offset 4, -32
 851              		.cfi_offset 5, -28
 852              		.cfi_offset 6, -24
 853              		.cfi_offset 7, -20
 854              		.cfi_offset 8, -16
 855              		.cfi_offset 9, -12
 856              		.cfi_offset 10, -8
 857              		.cfi_offset 14, -4
 858 0004 2DED028B 		vpush.64	{d8}
 859              	.LCFI14:
 860              		.cfi_def_cfa_offset 40
 861              		.cfi_offset 80, -40
 862              		.cfi_offset 81, -36
 863 0008 82B0     		sub	sp, sp, #8
 864              	.LCFI15:
 865              		.cfi_def_cfa_offset 48
 103:Core/Src/main.c **** 
 866              		.loc 1 103 3 view .LVU197
 867 000a FFF7FEFF 		bl	HAL_Init
 868              	.LVL54:
 110:Core/Src/main.c **** 
 869              		.loc 1 110 3 view .LVU198
 870 000e FFF7FEFF 		bl	SystemClock_Config
 871              	.LVL55:
 117:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 872              		.loc 1 117 3 view .LVU199
 873 0012 FFF7FEFF 		bl	MX_GPIO_Init
 874              	.LVL56:
 119:Core/Src/main.c ****   printf("\r\nEEE3096S Practical 3 - STM32F4 Mandelbrot Benchmark\r\n");
 875              		.loc 1 119 3 view .LVU200
 876 0016 FFF7FEFF 		bl	dwt_cycle_counter_init
 877              	.LVL57:
 120:Core/Src/main.c ****   printf("SYSCLK: %lu Hz\r\n", SystemCoreClock);
 878              		.loc 1 120 3 view .LVU201
 879 001a 4548     		ldr	r0, .L46
 880 001c FFF7FEFF 		bl	puts
 881              	.LVL58:
 121:Core/Src/main.c **** 
 882              		.loc 1 121 3 view .LVU202
 883 0020 444B     		ldr	r3, .L46+4
 884 0022 1968     		ldr	r1, [r3]
 885 0024 4448     		ldr	r0, .L46+8
 886 0026 FFF7FEFF 		bl	printf
 887              	.LVL59:
 888 002a 79E0     		b	.L44
 889              	.LVL60:
 890              	.L43:
 891              	.LBB26:
 892              	.LBB27:
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 42


 138:Core/Src/main.c ****         uint16_t h = kHeights[size_index];
 893              		.loc 1 138 9 view .LVU203
 138:Core/Src/main.c ****         uint16_t h = kHeights[size_index];
 894              		.loc 1 138 18 is_stmt 0 view .LVU204
 895 002c 434B     		ldr	r3, .L46+12
 896 002e 33F81470 		ldrh	r7, [r3, r4, lsl #1]
 897              	.LVL61:
 139:Core/Src/main.c ****         g_current_width = (uint32_t)w;
 898              		.loc 1 139 9 is_stmt 1 view .LVU205
 139:Core/Src/main.c ****         g_current_width = (uint32_t)w;
 899              		.loc 1 139 18 is_stmt 0 view .LVU206
 900 0032 434B     		ldr	r3, .L46+16
 901 0034 33F814A0 		ldrh	r10, [r3, r4, lsl #1]
 902              	.LVL62:
 140:Core/Src/main.c ****         g_current_height = (uint32_t)h;
 903              		.loc 1 140 9 is_stmt 1 view .LVU207
 140:Core/Src/main.c ****         g_current_height = (uint32_t)h;
 904              		.loc 1 140 25 is_stmt 0 view .LVU208
 905 0038 424B     		ldr	r3, .L46+20
 906 003a 1F60     		str	r7, [r3]
 141:Core/Src/main.c **** 
 907              		.loc 1 141 9 is_stmt 1 view .LVU209
 141:Core/Src/main.c **** 
 908              		.loc 1 141 26 is_stmt 0 view .LVU210
 909 003c 424B     		ldr	r3, .L46+24
 910 003e C3F800A0 		str	r10, [r3]
 143:Core/Src/main.c ****         uint32_t start_cycles = dwt_get_cycles();
 911              		.loc 1 143 9 is_stmt 1 view .LVU211
 143:Core/Src/main.c ****         uint32_t start_cycles = dwt_get_cycles();
 912              		.loc 1 143 21 is_stmt 0 view .LVU212
 913 0042 424D     		ldr	r5, .L46+28
 914 0044 0023     		movs	r3, #0
 915 0046 6B60     		str	r3, [r5, #4]
 144:Core/Src/main.c ****         uint32_t result_checksum = generate_mandelbrot_checksum(w, h, kMaxIter);
 916              		.loc 1 144 9 is_stmt 1 view .LVU213
 917              	.LBB28:
 918              	.LBI28:
 298:Core/Src/main.c **** {
 919              		.loc 1 298 24 view .LVU214
 920              	.LBB29:
 300:Core/Src/main.c **** }
 921              		.loc 1 300 2 view .LVU215
 300:Core/Src/main.c **** }
 922              		.loc 1 300 12 is_stmt 0 view .LVU216
 923 0048 D5F80480 		ldr	r8, [r5, #4]
 924              	.LVL63:
 300:Core/Src/main.c **** }
 925              		.loc 1 300 12 view .LVU217
 926              	.LBE29:
 927              	.LBE28:
 145:Core/Src/main.c ****         uint32_t end_cycles = dwt_get_cycles();
 928              		.loc 1 145 9 is_stmt 1 view .LVU218
 145:Core/Src/main.c ****         uint32_t end_cycles = dwt_get_cycles();
 929              		.loc 1 145 36 is_stmt 0 view .LVU219
 930 004c 6422     		movs	r2, #100
 931 004e 5146     		mov	r1, r10
 932 0050 3846     		mov	r0, r7
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 43


 933 0052 FFF7FEFF 		bl	generate_mandelbrot_checksum
 934              	.LVL64:
 935 0056 0646     		mov	r6, r0
 936              	.LVL65:
 146:Core/Src/main.c ****         uint32_t elapsed_cycles = end_cycles - start_cycles;
 937              		.loc 1 146 9 is_stmt 1 view .LVU220
 938              	.LBB30:
 939              	.LBI30:
 298:Core/Src/main.c **** {
 940              		.loc 1 298 24 view .LVU221
 941              	.LBB31:
 300:Core/Src/main.c **** }
 942              		.loc 1 300 2 view .LVU222
 300:Core/Src/main.c **** }
 943              		.loc 1 300 12 is_stmt 0 view .LVU223
 944 0058 6D68     		ldr	r5, [r5, #4]
 945              	.LVL66:
 300:Core/Src/main.c **** }
 946              		.loc 1 300 12 view .LVU224
 947              	.LBE31:
 948              	.LBE30:
 147:Core/Src/main.c ****         double elapsed_seconds = (double)elapsed_cycles / (double)SystemCoreClock;
 949              		.loc 1 147 9 is_stmt 1 view .LVU225
 147:Core/Src/main.c ****         double elapsed_seconds = (double)elapsed_cycles / (double)SystemCoreClock;
 950              		.loc 1 147 18 is_stmt 0 view .LVU226
 951 005a A5EB0805 		sub	r5, r5, r8
 952              	.LVL67:
 148:Core/Src/main.c ****         double total_pixels = (double)w * (double)h;
 953              		.loc 1 148 9 is_stmt 1 view .LVU227
 148:Core/Src/main.c ****         double total_pixels = (double)w * (double)h;
 954              		.loc 1 148 34 is_stmt 0 view .LVU228
 955 005e 2846     		mov	r0, r5
 956              	.LVL68:
 148:Core/Src/main.c ****         double total_pixels = (double)w * (double)h;
 957              		.loc 1 148 34 view .LVU229
 958 0060 FFF7FEFF 		bl	__aeabi_ui2d
 959              	.LVL69:
 960 0064 8046     		mov	r8, r0
 961              	.LVL70:
 148:Core/Src/main.c ****         double total_pixels = (double)w * (double)h;
 962              		.loc 1 148 34 view .LVU230
 963 0066 8946     		mov	r9, r1
 148:Core/Src/main.c ****         double total_pixels = (double)w * (double)h;
 964              		.loc 1 148 59 view .LVU231
 965 0068 324B     		ldr	r3, .L46+4
 966 006a 1868     		ldr	r0, [r3]
 967 006c FFF7FEFF 		bl	__aeabi_ui2d
 968              	.LVL71:
 969 0070 0246     		mov	r2, r0
 970 0072 0B46     		mov	r3, r1
 148:Core/Src/main.c ****         double total_pixels = (double)w * (double)h;
 971              		.loc 1 148 16 view .LVU232
 972 0074 4046     		mov	r0, r8
 973 0076 4946     		mov	r1, r9
 974 0078 FFF7FEFF 		bl	__aeabi_ddiv
 975              	.LVL72:
 976 007c 8046     		mov	r8, r0
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 44


 977 007e 8946     		mov	r9, r1
 978              	.LVL73:
 149:Core/Src/main.c ****         double throughput = total_pixels / elapsed_seconds;
 979              		.loc 1 149 9 is_stmt 1 view .LVU233
 149:Core/Src/main.c ****         double throughput = total_pixels / elapsed_seconds;
 980              		.loc 1 149 31 is_stmt 0 view .LVU234
 981 0080 3846     		mov	r0, r7
 982 0082 FFF7FEFF 		bl	__aeabi_ui2d
 983              	.LVL74:
 984 0086 CDE90001 		strd	r0, [sp]
 149:Core/Src/main.c ****         double throughput = total_pixels / elapsed_seconds;
 985              		.loc 1 149 43 view .LVU235
 986 008a 5046     		mov	r0, r10
 987 008c FFF7FEFF 		bl	__aeabi_ui2d
 988              	.LVL75:
 989 0090 0246     		mov	r2, r0
 990 0092 0B46     		mov	r3, r1
 149:Core/Src/main.c ****         double throughput = total_pixels / elapsed_seconds;
 991              		.loc 1 149 16 view .LVU236
 992 0094 DDE90001 		ldrd	r0, [sp]
 993 0098 FFF7FEFF 		bl	__aeabi_dmul
 994              	.LVL76:
 150:Core/Src/main.c **** 
 995              		.loc 1 150 9 is_stmt 1 view .LVU237
 150:Core/Src/main.c **** 
 996              		.loc 1 150 16 is_stmt 0 view .LVU238
 997 009c 4246     		mov	r2, r8
 998 009e 4B46     		mov	r3, r9
 999 00a0 FFF7FEFF 		bl	__aeabi_ddiv
 1000              	.LVL77:
 150:Core/Src/main.c **** 
 1001              		.loc 1 150 16 view .LVU239
 1002 00a4 41EC180B 		vmov	d8, r0, r1
 1003              	.LVL78:
 153:Core/Src/main.c ****         g_current_checksum = result_checksum;
 1004              		.loc 1 153 9 is_stmt 1 view .LVU240
 153:Core/Src/main.c ****         g_current_checksum = result_checksum;
 1005              		.loc 1 153 26 is_stmt 0 view .LVU241
 1006 00a8 294B     		ldr	r3, .L46+32
 1007 00aa 1D60     		str	r5, [r3]
 154:Core/Src/main.c ****         g_current_execution_time = elapsed_seconds * 1000.0; // ms
 1008              		.loc 1 154 9 is_stmt 1 view .LVU242
 154:Core/Src/main.c ****         g_current_execution_time = elapsed_seconds * 1000.0; // ms
 1009              		.loc 1 154 28 is_stmt 0 view .LVU243
 1010 00ac 294B     		ldr	r3, .L46+36
 1011 00ae 1E60     		str	r6, [r3]
 155:Core/Src/main.c ****         g_current_throughput = throughput;
 1012              		.loc 1 155 9 is_stmt 1 view .LVU244
 155:Core/Src/main.c ****         g_current_throughput = throughput;
 1013              		.loc 1 155 52 is_stmt 0 view .LVU245
 1014 00b0 0022     		movs	r2, #0
 1015 00b2 294B     		ldr	r3, .L46+40
 1016 00b4 4046     		mov	r0, r8
 1017              	.LVL79:
 155:Core/Src/main.c ****         g_current_throughput = throughput;
 1018              		.loc 1 155 52 view .LVU246
 1019 00b6 4946     		mov	r1, r9
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 45


 1020 00b8 FFF7FEFF 		bl	__aeabi_dmul
 1021              	.LVL80:
 155:Core/Src/main.c ****         g_current_throughput = throughput;
 1022              		.loc 1 155 34 view .LVU247
 1023 00bc 274B     		ldr	r3, .L46+44
 1024 00be C3E90001 		strd	r0, [r3]
 156:Core/Src/main.c **** 
 1025              		.loc 1 156 9 is_stmt 1 view .LVU248
 156:Core/Src/main.c **** 
 1026              		.loc 1 156 30 is_stmt 0 view .LVU249
 1027 00c2 274B     		ldr	r3, .L46+48
 1028 00c4 83ED008B 		vstr.64	d8, [r3]
 159:Core/Src/main.c ****         execution_time_ms[size_index] = elapsed_seconds * 1000.0;
 1029              		.loc 1 159 9 is_stmt 1 view .LVU250
 159:Core/Src/main.c ****         execution_time_ms[size_index] = elapsed_seconds * 1000.0;
 1030              		.loc 1 159 30 is_stmt 0 view .LVU251
 1031 00c8 264B     		ldr	r3, .L46+52
 1032 00ca 43F82460 		str	r6, [r3, r4, lsl #2]
 160:Core/Src/main.c ****         cpu_cycles[size_index] = elapsed_cycles;
 1033              		.loc 1 160 9 is_stmt 1 view .LVU252
 160:Core/Src/main.c ****         cpu_cycles[size_index] = elapsed_cycles;
 1034              		.loc 1 160 39 is_stmt 0 view .LVU253
 1035 00ce 264B     		ldr	r3, .L46+56
 1036 00d0 03EBC403 		add	r3, r3, r4, lsl #3
 1037 00d4 C3E90001 		strd	r0, [r3]
 161:Core/Src/main.c ****         throughput_pps[size_index] = throughput;
 1038              		.loc 1 161 9 is_stmt 1 view .LVU254
 161:Core/Src/main.c ****         throughput_pps[size_index] = throughput;
 1039              		.loc 1 161 32 is_stmt 0 view .LVU255
 1040 00d8 244B     		ldr	r3, .L46+60
 1041 00da 43F82450 		str	r5, [r3, r4, lsl #2]
 162:Core/Src/main.c **** 
 1042              		.loc 1 162 9 is_stmt 1 view .LVU256
 162:Core/Src/main.c **** 
 1043              		.loc 1 162 36 is_stmt 0 view .LVU257
 1044 00de 244B     		ldr	r3, .L46+64
 1045 00e0 03EBC403 		add	r3, r3, r4, lsl #3
 1046 00e4 83ED008B 		vstr.64	d8, [r3]
 164:Core/Src/main.c ****       }
 1047              		.loc 1 164 9 is_stmt 1 view .LVU258
 1048 00e8 B0EE480A 		vmov.f32	s0, s16
 1049 00ec F0EE680A 		vmov.f32	s1, s17
 1050 00f0 3346     		mov	r3, r6
 1051 00f2 2A46     		mov	r2, r5
 1052 00f4 5146     		mov	r1, r10
 1053 00f6 3846     		mov	r0, r7
 1054 00f8 FFF7FEFF 		bl	log_benchmark
 1055              	.LVL81:
 1056              	.LBE27:
 136:Core/Src/main.c ****       {
 1057              		.loc 1 136 67 discriminator 3 view .LVU259
 1058 00fc 0134     		adds	r4, r4, #1
 1059              	.LVL82:
 1060              	.L42:
 136:Core/Src/main.c ****       {
 1061              		.loc 1 136 48 discriminator 1 view .LVU260
 1062 00fe 042C     		cmp	r4, #4
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 46


 1063 0100 94D9     		bls	.L43
 1064              	.LBE26:
 168:Core/Src/main.c ****       HAL_Delay(2000);
 1065              		.loc 1 168 7 view .LVU261
 1066 0102 1C4C     		ldr	r4, .L46+68
 1067              	.LVL83:
 168:Core/Src/main.c ****       HAL_Delay(2000);
 1068              		.loc 1 168 7 is_stmt 0 view .LVU262
 1069 0104 0122     		movs	r2, #1
 1070 0106 0221     		movs	r1, #2
 1071 0108 2046     		mov	r0, r4
 1072 010a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1073              	.LVL84:
 169:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0 | GPIO_PIN_1, GPIO_PIN_RESET);
 1074              		.loc 1 169 7 is_stmt 1 view .LVU263
 1075 010e 4FF4FA60 		mov	r0, #2000
 1076 0112 FFF7FEFF 		bl	HAL_Delay
 1077              	.LVL85:
 170:Core/Src/main.c ****   }
 1078              		.loc 1 170 7 view .LVU264
 1079 0116 0022     		movs	r2, #0
 1080 0118 0321     		movs	r1, #3
 1081 011a 2046     		mov	r0, r4
 1082 011c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1083              	.LVL86:
 127:Core/Src/main.c ****   {
 1084              		.loc 1 127 9 view .LVU265
 1085              	.L44:
 127:Core/Src/main.c ****   {
 1086              		.loc 1 127 3 view .LVU266
 133:Core/Src/main.c **** 
 1087              		.loc 1 133 7 view .LVU267
 1088 0120 0122     		movs	r2, #1
 1089 0122 1146     		mov	r1, r2
 1090 0124 1348     		ldr	r0, .L46+68
 1091 0126 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1092              	.LVL87:
 136:Core/Src/main.c ****       {
 1093              		.loc 1 136 7 view .LVU268
 1094              	.LBB32:
 136:Core/Src/main.c ****       {
 1095              		.loc 1 136 12 view .LVU269
 136:Core/Src/main.c ****       {
 1096              		.loc 1 136 21 is_stmt 0 view .LVU270
 1097 012a 0024     		movs	r4, #0
 136:Core/Src/main.c ****       {
 1098              		.loc 1 136 7 view .LVU271
 1099 012c E7E7     		b	.L42
 1100              	.L47:
 1101 012e 00BF     		.align	2
 1102              	.L46:
 1103 0130 00000000 		.word	.LC1
 1104 0134 00000000 		.word	SystemCoreClock
 1105 0138 38000000 		.word	.LC2
 1106 013c 00000000 		.word	kWidths
 1107 0140 00000000 		.word	kHeights
 1108 0144 00000000 		.word	g_current_width
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 47


 1109 0148 00000000 		.word	g_current_height
 1110 014c 001000E0 		.word	-536866816
 1111 0150 00000000 		.word	g_current_cycles
 1112 0154 00000000 		.word	g_current_checksum
 1113 0158 00408F40 		.word	1083129856
 1114 015c 00000000 		.word	g_current_execution_time
 1115 0160 00000000 		.word	g_current_throughput
 1116 0164 00000000 		.word	checksum
 1117 0168 00000000 		.word	execution_time_ms
 1118 016c 00000000 		.word	cpu_cycles
 1119 0170 00000000 		.word	throughput_pps
 1120 0174 00040240 		.word	1073873920
 1121              	.LBE32:
 1122              		.cfi_endproc
 1123              	.LFE137:
 1125              		.global	throughput_pps
 1126              		.section	.bss.throughput_pps,"aw",%nobits
 1127              		.align	3
 1130              	throughput_pps:
 1131 0000 00000000 		.space	40
 1131      00000000 
 1131      00000000 
 1131      00000000 
 1131      00000000 
 1132              		.global	cpu_cycles
 1133              		.section	.bss.cpu_cycles,"aw",%nobits
 1134              		.align	2
 1137              	cpu_cycles:
 1138 0000 00000000 		.space	20
 1138      00000000 
 1138      00000000 
 1138      00000000 
 1138      00000000 
 1139              		.global	execution_time_ms
 1140              		.section	.bss.execution_time_ms,"aw",%nobits
 1141              		.align	3
 1144              	execution_time_ms:
 1145 0000 00000000 		.space	40
 1145      00000000 
 1145      00000000 
 1145      00000000 
 1145      00000000 
 1146              		.global	checksum
 1147              		.section	.bss.checksum,"aw",%nobits
 1148              		.align	2
 1151              	checksum:
 1152 0000 00000000 		.space	20
 1152      00000000 
 1152      00000000 
 1152      00000000 
 1152      00000000 
 1153              		.global	g_current_throughput
 1154              		.section	.bss.g_current_throughput,"aw",%nobits
 1155              		.align	3
 1158              	g_current_throughput:
 1159 0000 00000000 		.space	8
 1159      00000000 
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 48


 1160              		.global	g_current_execution_time
 1161              		.section	.bss.g_current_execution_time,"aw",%nobits
 1162              		.align	3
 1165              	g_current_execution_time:
 1166 0000 00000000 		.space	8
 1166      00000000 
 1167              		.global	g_current_checksum
 1168              		.section	.bss.g_current_checksum,"aw",%nobits
 1169              		.align	2
 1172              	g_current_checksum:
 1173 0000 00000000 		.space	4
 1174              		.global	g_current_cycles
 1175              		.section	.bss.g_current_cycles,"aw",%nobits
 1176              		.align	2
 1179              	g_current_cycles:
 1180 0000 00000000 		.space	4
 1181              		.global	g_current_height
 1182              		.section	.bss.g_current_height,"aw",%nobits
 1183              		.align	2
 1186              	g_current_height:
 1187 0000 00000000 		.space	4
 1188              		.global	g_current_width
 1189              		.section	.bss.g_current_width,"aw",%nobits
 1190              		.align	2
 1193              	g_current_width:
 1194 0000 00000000 		.space	4
 1195              		.section	.rodata.kHeights,"a"
 1196              		.align	2
 1199              	kHeights:
 1200 0000 8000     		.short	128
 1201 0002 A000     		.short	160
 1202 0004 C000     		.short	192
 1203 0006 E000     		.short	224
 1204 0008 0001     		.short	256
 1205              		.section	.rodata.kWidths,"a"
 1206              		.align	2
 1209              	kWidths:
 1210 0000 8000     		.short	128
 1211 0002 A000     		.short	160
 1212 0004 C000     		.short	192
 1213 0006 E000     		.short	224
 1214 0008 0001     		.short	256
 1215              		.text
 1216              	.Letext0:
 1217              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1218              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1219              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 1220              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1221              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1222              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1223              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1224              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1225              		.file 11 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1226              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1227              		.file 13 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltoo
 1228              		.file 14 "<built-in>"
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 49


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:27     .text.generate_mandelbrot_checksum:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:32     .text.generate_mandelbrot_checksum:00000000 generate_mandelbrot_checksum
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:307    .text.generate_mandelbrot_checksum:00000138 $d
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:315    .text.dwt_cycle_counter_init:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:320    .text.dwt_cycle_counter_init:00000000 dwt_cycle_counter_init
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:350    .text.dwt_cycle_counter_init:00000020 $d
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:356    .rodata.log_benchmark.str1.4:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:361    .text.log_benchmark:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:366    .text.log_benchmark:00000000 log_benchmark
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:439    .text.log_benchmark:0000004c $d
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:445    .text.MX_GPIO_Init:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:450    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:557    .text.MX_GPIO_Init:00000074 $d
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:563    .text.__io_putchar:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:569    .text.__io_putchar:00000000 __io_putchar
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:621    .text.__io_putchar:00000034 $d
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:626    .text.Error_Handler:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:632    .text.Error_Handler:00000000 Error_Handler
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:664    .text.SystemClock_Config:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:670    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:821    .text.SystemClock_Config:000000a4 $d
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:827    .rodata.main.str1.4:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:835    .text.main:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:841    .text.main:00000000 main
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:1103   .text.main:00000130 $d
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:1209   .rodata.kWidths:00000000 kWidths
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:1199   .rodata.kHeights:00000000 kHeights
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:1193   .bss.g_current_width:00000000 g_current_width
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:1186   .bss.g_current_height:00000000 g_current_height
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:1179   .bss.g_current_cycles:00000000 g_current_cycles
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:1172   .bss.g_current_checksum:00000000 g_current_checksum
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:1165   .bss.g_current_execution_time:00000000 g_current_execution_time
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:1158   .bss.g_current_throughput:00000000 g_current_throughput
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:1151   .bss.checksum:00000000 checksum
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:1144   .bss.execution_time_ms:00000000 execution_time_ms
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:1137   .bss.cpu_cycles:00000000 cpu_cycles
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:1130   .bss.throughput_pps:00000000 throughput_pps
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:1127   .bss.throughput_pps:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:1134   .bss.cpu_cycles:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:1141   .bss.execution_time_ms:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:1148   .bss.checksum:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:1155   .bss.g_current_throughput:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:1162   .bss.g_current_execution_time:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:1169   .bss.g_current_checksum:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:1176   .bss.g_current_cycles:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:1183   .bss.g_current_height:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:1190   .bss.g_current_width:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:1196   .rodata.kHeights:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s:1206   .rodata.kWidths:00000000 $d

UNDEFINED SYMBOLS
__aeabi_ui2d
__aeabi_ddiv
__aeabi_dadd
__aeabi_dsub
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccJq5Nba.s 			page 50


__aeabi_dmul
__aeabi_dcmple
printf
SystemCoreClock
HAL_GPIO_WritePin
HAL_GPIO_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
puts
HAL_Delay
