ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_hal_rcc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c"
  20              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  21              		.align	1
  22              		.weak	HAL_RCC_DeInit
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	HAL_RCC_DeInit:
  28              	.LFB134:
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @file    stm32f4xx_hal_rcc.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   @verbatim
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (HSI 16MHz) with Flash 0 wait state, Flash prefetch buffer, D-Cache
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       and I-Cache are disabled, and all peripherals are off except internal
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       SRAM, Flash and JTAG.
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) busses;
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           all peripherals mapped on these busses are running at HSI speed.
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       Once the device started from reset, the user application has to:
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 2


  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the AHB and APB busses prescalers
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals which clocks are not
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           derived from the System clock (I2S, RTC, ADC, USB OTG FS/SDIO/RNG)
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                       ##### RCC Limitations #####
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ==============================================================================
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       from/to registers.
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) If peripheral is mapped on AHB: the delay is 2 AHB clock cycle
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) If peripheral is mapped on APB: the delay is 2 APB clock cycle
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       Implemented Workaround:
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) For AHB & APB peripherals, a dummy read to the peripheral register has been
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   @endverbatim
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ******************************************************************************
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @attention
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * Copyright (c) 2017 STMicroelectronics.
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * All rights reserved.
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * This software is licensed under terms that can be found in the LICENSE file in
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * the root directory of this software component.
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ******************************************************************************
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #include "stm32f4xx_hal.h"
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @addtogroup STM32F4xx_HAL_Driver
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC RCC
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief RCC HAL module driver
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @addtogroup RCC_Private_Constants
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define __MCO1_CLK_ENABLE()   __HAL_RCC_GPIOA_CLK_ENABLE()
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 3


  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define __MCO2_CLK_ENABLE()   __HAL_RCC_GPIOC_CLK_ENABLE()
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO2_GPIO_PORT         GPIOC
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO2_PIN               GPIO_PIN_9
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @}
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @}
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private functions ---------------------------------------------------------*/
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *  @{
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @verbatim
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (HSE, HSI, LSE, LSI, PLL, CSS and MCO) and the System busses clocks (SYSCLK, AHB, APB1
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****        and APB2).
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) HSI (high-speed internal), 16 MHz factory-trimmed RC used directly or through
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              the PLL as System clock source.
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) LSI (low-speed internal), 32 KHz low consumption RC used as IWDG and/or RTC
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock source.
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) HSE (high-speed external), 4 to 26 MHz crystal oscillator used directly or
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              through the PLL as System clock source. Can be used also as RTC clock source.
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) PLL (clocked by HSI or HSE), featuring two different output clocks:
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (++) The first output is used to generate the high speed system clock (up to 168 MHz)
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (++) The second output is used to generate the clock for the USB OTG FS (48 MHz),
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                 the random analog generator (<=48 MHz) and the SDIO (<= 48 MHz).
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              and if a HSE clock failure occurs(HSE used directly or through PLL as System
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock source), the System clocks automatically switched to HSI and an interrupt
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              is generated if enabled. The interrupt is linked to the Cortex-M4 NMI
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 4


 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              (Non-Maskable Interrupt) exception vector.
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) MCO1 (microcontroller clock output), used to output HSI, LSE, HSE or PLL
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock (through a configurable prescaler) on PA8 pin.
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) MCO2 (microcontroller clock output), used to output HSE, PLL, SYSCLK or PLLI2S
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock (through a configurable prescaler) on PC9 pin.
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..] System, AHB and APB busses clocks configuration
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              HSE and PLL.
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              The AHB clock (HCLK) is derived from System clock through configurable
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              prescaler and used to clock the CPU, memory and peripherals mapped
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              from AHB clock through configurable prescalers and used to clock
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              the peripherals mapped on these busses. You can use
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              "HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F405xx/07xx and STM32F415xx/17xx devices, the maximum
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              frequency of the SYSCLK and HCLK is 168 MHz, PCLK2 84 MHz and PCLK1 42 MHz.
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F42xxx, STM32F43xxx, STM32F446xx, STM32F469xx and STM32F479xx devices,
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              the maximum frequency of the SYSCLK and HCLK is 180 MHz, PCLK2 90 MHz and PCLK1 45 MHz
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F401xx, the maximum frequency of the SYSCLK and HCLK is 84 MHz,
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              PCLK2 84 MHz and PCLK1 42 MHz.
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F41xxx, the maximum frequency of the SYSCLK and HCLK is 100 MHz,
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              PCLK2 100 MHz and PCLK1 50 MHz.
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @endverbatim
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - HSE and PLL OFF
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - CSS, MCO1 and MCO2 OFF
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - All interrupts disabled
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   This function doesn't modify the configuration of the
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - Peripheral clocks
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval HAL status
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak HAL_StatusTypeDef HAL_RCC_DeInit(void)
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 5


  29              		.loc 1 201 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 80B4     		push	{r7}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 7, -4
  38 0002 00AF     		add	r7, sp, #0
  39              	.LCFI1:
  40              		.cfi_def_cfa_register 7
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return HAL_OK;
  41              		.loc 1 202 10
  42 0004 0023     		movs	r3, #0
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
  43              		.loc 1 203 1
  44 0006 1846     		mov	r0, r3
  45 0008 BD46     		mov	sp, r7
  46              	.LCFI2:
  47              		.cfi_def_cfa_register 13
  48              		@ sp needed
  49 000a 5DF8047B 		ldr	r7, [sp], #4
  50              	.LCFI3:
  51              		.cfi_restore 7
  52              		.cfi_def_cfa_offset 0
  53 000e 7047     		bx	lr
  54              		.cfi_endproc
  55              	.LFE134:
  57              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
  58              		.align	1
  59              		.weak	HAL_RCC_OscConfig
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  64              	HAL_RCC_OscConfig:
  65              	.LFB135:
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         supported by this API. User should request a transition to LSE Off
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         supported by this API. User should request a transition to HSE Off
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval HAL status
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak HAL_StatusTypeDef HAL_RCC_OscConfig(const RCC_OscInitTypeDef  *RCC_OscInitStruct)
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
  66              		.loc 1 220 1
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 24
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 6


  69              		@ frame_needed = 1, uses_anonymous_args = 0
  70 0000 80B5     		push	{r7, lr}
  71              	.LCFI4:
  72              		.cfi_def_cfa_offset 8
  73              		.cfi_offset 7, -8
  74              		.cfi_offset 14, -4
  75 0002 86B0     		sub	sp, sp, #24
  76              	.LCFI5:
  77              		.cfi_def_cfa_offset 32
  78 0004 00AF     		add	r7, sp, #0
  79              	.LCFI6:
  80              		.cfi_def_cfa_register 7
  81 0006 7860     		str	r0, [r7, #4]
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t tickstart;
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t pll_config;
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check Null pointer */
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if (RCC_OscInitStruct == NULL)
  82              		.loc 1 224 6
  83 0008 7B68     		ldr	r3, [r7, #4]
  84 000a 002B     		cmp	r3, #0
  85 000c 01D1     		bne	.L4
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     return HAL_ERROR;
  86              		.loc 1 226 12
  87 000e 0123     		movs	r3, #1
  88 0010 6FE2     		b	.L5
  89              	.L4:
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
  90              		.loc 1 232 26
  91 0012 7B68     		ldr	r3, [r7, #4]
  92 0014 1B68     		ldr	r3, [r3]
  93              		.loc 1 232 44
  94 0016 03F00103 		and	r3, r3, #1
  95              		.loc 1 232 6
  96 001a 002B     		cmp	r3, #0
  97 001c 75D0     		beq	.L6
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not dis
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
  98              		.loc 1 237 10
  99 001e 884B     		ldr	r3, .L59
 100 0020 9B68     		ldr	r3, [r3, #8]
 101 0022 03F00C03 		and	r3, r3, #12
 102              		.loc 1 237 8
 103 0026 042B     		cmp	r3, #4
 104 0028 0CD0     		beq	.L7
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC
 105              		.loc 1 238 11
 106 002a 854B     		ldr	r3, .L59
 107 002c 9B68     		ldr	r3, [r3, #8]
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 7


 108 002e 03F00C03 		and	r3, r3, #12
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC
 109              		.loc 1 237 61 discriminator 1
 110 0032 082B     		cmp	r3, #8
 111 0034 12D1     		bne	.L8
 112              		.loc 1 238 70
 113 0036 824B     		ldr	r3, .L59
 114 0038 5B68     		ldr	r3, [r3, #4]
 115              		.loc 1 238 80
 116 003a 03F48003 		and	r3, r3, #4194304
 117              		.loc 1 238 62
 118 003e B3F5800F 		cmp	r3, #4194304
 119 0042 0BD1     		bne	.L8
 120              	.L7:
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE
 121              		.loc 1 240 12
 122 0044 7E4B     		ldr	r3, .L59
 123 0046 1B68     		ldr	r3, [r3]
 124 0048 03F40033 		and	r3, r3, #131072
 125              		.loc 1 240 10
 126 004c 002B     		cmp	r3, #0
 127 004e 5BD0     		beq	.L58
 128              		.loc 1 240 79 discriminator 1
 129 0050 7B68     		ldr	r3, [r7, #4]
 130 0052 5B68     		ldr	r3, [r3, #4]
 131              		.loc 1 240 58 discriminator 1
 132 0054 002B     		cmp	r3, #0
 133 0056 57D1     		bne	.L58
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 134              		.loc 1 242 16
 135 0058 0123     		movs	r3, #1
 136 005a 4AE2     		b	.L5
 137              	.L8:
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 138              		.loc 1 248 7
 139 005c 7B68     		ldr	r3, [r7, #4]
 140 005e 5B68     		ldr	r3, [r3, #4]
 141 0060 B3F5803F 		cmp	r3, #65536
 142 0064 06D1     		bne	.L10
 143              		.loc 1 248 7 is_stmt 0 discriminator 1
 144 0066 764B     		ldr	r3, .L59
 145 0068 1B68     		ldr	r3, [r3]
 146 006a 754A     		ldr	r2, .L59
 147 006c 43F48033 		orr	r3, r3, #65536
 148 0070 1360     		str	r3, [r2]
 149 0072 1DE0     		b	.L11
 150              	.L10:
 151              		.loc 1 248 7 discriminator 2
 152 0074 7B68     		ldr	r3, [r7, #4]
 153 0076 5B68     		ldr	r3, [r3, #4]
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 8


 154 0078 B3F5A02F 		cmp	r3, #327680
 155 007c 0CD1     		bne	.L12
 156              		.loc 1 248 7 discriminator 3
 157 007e 704B     		ldr	r3, .L59
 158 0080 1B68     		ldr	r3, [r3]
 159 0082 6F4A     		ldr	r2, .L59
 160 0084 43F48023 		orr	r3, r3, #262144
 161 0088 1360     		str	r3, [r2]
 162 008a 6D4B     		ldr	r3, .L59
 163 008c 1B68     		ldr	r3, [r3]
 164 008e 6C4A     		ldr	r2, .L59
 165 0090 43F48033 		orr	r3, r3, #65536
 166 0094 1360     		str	r3, [r2]
 167 0096 0BE0     		b	.L11
 168              	.L12:
 169              		.loc 1 248 7 discriminator 4
 170 0098 694B     		ldr	r3, .L59
 171 009a 1B68     		ldr	r3, [r3]
 172 009c 684A     		ldr	r2, .L59
 173 009e 23F48033 		bic	r3, r3, #65536
 174 00a2 1360     		str	r3, [r2]
 175 00a4 664B     		ldr	r3, .L59
 176 00a6 1B68     		ldr	r3, [r3]
 177 00a8 654A     		ldr	r2, .L59
 178 00aa 23F48023 		bic	r3, r3, #262144
 179 00ae 1360     		str	r3, [r2]
 180              	.L11:
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSE State */
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if ((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 181              		.loc 1 251 29 is_stmt 1
 182 00b0 7B68     		ldr	r3, [r7, #4]
 183 00b2 5B68     		ldr	r3, [r3, #4]
 184              		.loc 1 251 10
 185 00b4 002B     		cmp	r3, #0
 186 00b6 13D0     		beq	.L13
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 187              		.loc 1 254 21
 188 00b8 FFF7FEFF 		bl	HAL_GetTick
 189 00bc 3861     		str	r0, [r7, #16]
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSE is ready */
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 190              		.loc 1 257 15
 191 00be 08E0     		b	.L14
 192              	.L15:
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 193              		.loc 1 259 16
 194 00c0 FFF7FEFF 		bl	HAL_GetTick
 195 00c4 0246     		mov	r2, r0
 196              		.loc 1 259 30 discriminator 1
 197 00c6 3B69     		ldr	r3, [r7, #16]
 198 00c8 D31A     		subs	r3, r2, r3
 199              		.loc 1 259 14 discriminator 1
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 9


 200 00ca 642B     		cmp	r3, #100
 201 00cc 01D9     		bls	.L14
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 202              		.loc 1 261 20
 203 00ce 0323     		movs	r3, #3
 204 00d0 0FE2     		b	.L5
 205              	.L14:
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 206              		.loc 1 257 16
 207 00d2 5B4B     		ldr	r3, .L59
 208 00d4 1B68     		ldr	r3, [r3]
 209 00d6 03F40033 		and	r3, r3, #131072
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 210              		.loc 1 257 52
 211 00da 002B     		cmp	r3, #0
 212 00dc F0D0     		beq	.L15
 213 00de 14E0     		b	.L6
 214              	.L13:
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 215              		.loc 1 268 21
 216 00e0 FFF7FEFF 		bl	HAL_GetTick
 217 00e4 3861     		str	r0, [r7, #16]
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSE is bypassed or disabled */
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 218              		.loc 1 271 15
 219 00e6 08E0     		b	.L16
 220              	.L17:
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 221              		.loc 1 273 16
 222 00e8 FFF7FEFF 		bl	HAL_GetTick
 223 00ec 0246     		mov	r2, r0
 224              		.loc 1 273 30 discriminator 1
 225 00ee 3B69     		ldr	r3, [r7, #16]
 226 00f0 D31A     		subs	r3, r2, r3
 227              		.loc 1 273 14 discriminator 1
 228 00f2 642B     		cmp	r3, #100
 229 00f4 01D9     		bls	.L16
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 230              		.loc 1 275 20
 231 00f6 0323     		movs	r3, #3
 232 00f8 FBE1     		b	.L5
 233              	.L16:
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 234              		.loc 1 271 16
 235 00fa 514B     		ldr	r3, .L59
 236 00fc 1B68     		ldr	r3, [r3]
 237 00fe 03F40033 		and	r3, r3, #131072
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 10


 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 238              		.loc 1 271 52
 239 0102 002B     		cmp	r3, #0
 240 0104 F0D1     		bne	.L17
 241 0106 00E0     		b	.L6
 242              	.L58:
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 243              		.loc 1 240 10
 244 0108 00BF     		nop
 245              	.L6:
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 246              		.loc 1 282 26
 247 010a 7B68     		ldr	r3, [r7, #4]
 248 010c 1B68     		ldr	r3, [r3]
 249              		.loc 1 282 44
 250 010e 03F00203 		and	r3, r3, #2
 251              		.loc 1 282 6
 252 0112 002B     		cmp	r3, #0
 253 0114 63D0     		beq	.L18
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 254              		.loc 1 289 10
 255 0116 4A4B     		ldr	r3, .L59
 256 0118 9B68     		ldr	r3, [r3, #8]
 257 011a 03F00C03 		and	r3, r3, #12
 258              		.loc 1 289 8
 259 011e 002B     		cmp	r3, #0
 260 0120 0BD0     		beq	.L19
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC
 261              		.loc 1 290 11
 262 0122 474B     		ldr	r3, .L59
 263 0124 9B68     		ldr	r3, [r3, #8]
 264 0126 03F00C03 		and	r3, r3, #12
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC
 265              		.loc 1 289 61 discriminator 1
 266 012a 082B     		cmp	r3, #8
 267 012c 1CD1     		bne	.L20
 268              		.loc 1 290 70
 269 012e 444B     		ldr	r3, .L59
 270 0130 5B68     		ldr	r3, [r3, #4]
 271              		.loc 1 290 80
 272 0132 03F48003 		and	r3, r3, #4194304
 273              		.loc 1 290 62
 274 0136 002B     		cmp	r3, #0
 275 0138 16D1     		bne	.L20
 276              	.L19:
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 11


 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI
 277              		.loc 1 293 12
 278 013a 414B     		ldr	r3, .L59
 279 013c 1B68     		ldr	r3, [r3]
 280 013e 03F00203 		and	r3, r3, #2
 281              		.loc 1 293 10
 282 0142 002B     		cmp	r3, #0
 283 0144 05D0     		beq	.L21
 284              		.loc 1 293 79 discriminator 1
 285 0146 7B68     		ldr	r3, [r7, #4]
 286 0148 DB68     		ldr	r3, [r3, #12]
 287              		.loc 1 293 58 discriminator 1
 288 014a 012B     		cmp	r3, #1
 289 014c 01D0     		beq	.L21
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 290              		.loc 1 295 16
 291 014e 0123     		movs	r3, #1
 292 0150 CFE1     		b	.L5
 293              	.L21:
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 294              		.loc 1 301 9
 295 0152 3B4B     		ldr	r3, .L59
 296 0154 1B68     		ldr	r3, [r3]
 297 0156 23F0F802 		bic	r2, r3, #248
 298 015a 7B68     		ldr	r3, [r7, #4]
 299 015c 1B69     		ldr	r3, [r3, #16]
 300 015e DB00     		lsls	r3, r3, #3
 301 0160 3749     		ldr	r1, .L59
 302 0162 1343     		orrs	r3, r3, r2
 303 0164 0B60     		str	r3, [r1]
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 304              		.loc 1 293 10
 305 0166 3AE0     		b	.L18
 306              	.L20:
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSI State */
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 307              		.loc 1 307 29
 308 0168 7B68     		ldr	r3, [r7, #4]
 309 016a DB68     		ldr	r3, [r3, #12]
 310              		.loc 1 307 10
 311 016c 002B     		cmp	r3, #0
 312 016e 20D0     		beq	.L22
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (HSI). */
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 12


 313              		.loc 1 310 9
 314 0170 344B     		ldr	r3, .L59+4
 315 0172 0122     		movs	r2, #1
 316 0174 1A60     		str	r2, [r3]
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick*/
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 317              		.loc 1 313 21
 318 0176 FFF7FEFF 		bl	HAL_GetTick
 319 017a 3861     		str	r0, [r7, #16]
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSI is ready */
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 320              		.loc 1 316 15
 321 017c 08E0     		b	.L23
 322              	.L24:
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 323              		.loc 1 318 16
 324 017e FFF7FEFF 		bl	HAL_GetTick
 325 0182 0246     		mov	r2, r0
 326              		.loc 1 318 30 discriminator 1
 327 0184 3B69     		ldr	r3, [r7, #16]
 328 0186 D31A     		subs	r3, r2, r3
 329              		.loc 1 318 14 discriminator 1
 330 0188 022B     		cmp	r3, #2
 331 018a 01D9     		bls	.L23
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 332              		.loc 1 320 20
 333 018c 0323     		movs	r3, #3
 334 018e B0E1     		b	.L5
 335              	.L23:
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 336              		.loc 1 316 16
 337 0190 2B4B     		ldr	r3, .L59
 338 0192 1B68     		ldr	r3, [r3]
 339 0194 03F00203 		and	r3, r3, #2
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 340              		.loc 1 316 52
 341 0198 002B     		cmp	r3, #0
 342 019a F0D0     		beq	.L24
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 343              		.loc 1 325 9
 344 019c 284B     		ldr	r3, .L59
 345 019e 1B68     		ldr	r3, [r3]
 346 01a0 23F0F802 		bic	r2, r3, #248
 347 01a4 7B68     		ldr	r3, [r7, #4]
 348 01a6 1B69     		ldr	r3, [r3, #16]
 349 01a8 DB00     		lsls	r3, r3, #3
 350 01aa 2549     		ldr	r1, .L59
 351 01ac 1343     		orrs	r3, r3, r2
 352 01ae 0B60     		str	r3, [r1]
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 13


 353 01b0 15E0     		b	.L18
 354              	.L22:
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 355              		.loc 1 330 9
 356 01b2 244B     		ldr	r3, .L59+4
 357 01b4 0022     		movs	r2, #0
 358 01b6 1A60     		str	r2, [r3]
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick*/
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 359              		.loc 1 333 21
 360 01b8 FFF7FEFF 		bl	HAL_GetTick
 361 01bc 3861     		str	r0, [r7, #16]
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSI is ready */
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 362              		.loc 1 336 15
 363 01be 08E0     		b	.L25
 364              	.L26:
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 365              		.loc 1 338 16
 366 01c0 FFF7FEFF 		bl	HAL_GetTick
 367 01c4 0246     		mov	r2, r0
 368              		.loc 1 338 30 discriminator 1
 369 01c6 3B69     		ldr	r3, [r7, #16]
 370 01c8 D31A     		subs	r3, r2, r3
 371              		.loc 1 338 14 discriminator 1
 372 01ca 022B     		cmp	r3, #2
 373 01cc 01D9     		bls	.L25
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 374              		.loc 1 340 20
 375 01ce 0323     		movs	r3, #3
 376 01d0 8FE1     		b	.L5
 377              	.L25:
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 378              		.loc 1 336 16
 379 01d2 1B4B     		ldr	r3, .L59
 380 01d4 1B68     		ldr	r3, [r3]
 381 01d6 03F00203 		and	r3, r3, #2
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 382              		.loc 1 336 52
 383 01da 002B     		cmp	r3, #0
 384 01dc F0D1     		bne	.L26
 385              	.L18:
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 14


 386              		.loc 1 347 26
 387 01de 7B68     		ldr	r3, [r7, #4]
 388 01e0 1B68     		ldr	r3, [r3]
 389              		.loc 1 347 44
 390 01e2 03F00803 		and	r3, r3, #8
 391              		.loc 1 347 6
 392 01e6 002B     		cmp	r3, #0
 393 01e8 36D0     		beq	.L27
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the LSI State */
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 394              		.loc 1 353 27
 395 01ea 7B68     		ldr	r3, [r7, #4]
 396 01ec 5B69     		ldr	r3, [r3, #20]
 397              		.loc 1 353 8
 398 01ee 002B     		cmp	r3, #0
 399 01f0 16D0     		beq	.L28
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 400              		.loc 1 356 7
 401 01f2 154B     		ldr	r3, .L59+8
 402 01f4 0122     		movs	r2, #1
 403 01f6 1A60     		str	r2, [r3]
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick*/
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 404              		.loc 1 359 19
 405 01f8 FFF7FEFF 		bl	HAL_GetTick
 406 01fc 3861     		str	r0, [r7, #16]
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSI is ready */
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 407              		.loc 1 362 13
 408 01fe 08E0     		b	.L29
 409              	.L30:
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 410              		.loc 1 364 14
 411 0200 FFF7FEFF 		bl	HAL_GetTick
 412 0204 0246     		mov	r2, r0
 413              		.loc 1 364 28 discriminator 1
 414 0206 3B69     		ldr	r3, [r7, #16]
 415 0208 D31A     		subs	r3, r2, r3
 416              		.loc 1 364 12 discriminator 1
 417 020a 022B     		cmp	r3, #2
 418 020c 01D9     		bls	.L29
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 419              		.loc 1 366 18
 420 020e 0323     		movs	r3, #3
 421 0210 6FE1     		b	.L5
 422              	.L29:
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 15


 423              		.loc 1 362 14
 424 0212 0B4B     		ldr	r3, .L59
 425 0214 5B6F     		ldr	r3, [r3, #116]
 426 0216 03F00203 		and	r3, r3, #2
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 427              		.loc 1 362 50
 428 021a 002B     		cmp	r3, #0
 429 021c F0D0     		beq	.L30
 430 021e 1BE0     		b	.L27
 431              	.L28:
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 432              		.loc 1 373 7
 433 0220 094B     		ldr	r3, .L59+8
 434 0222 0022     		movs	r2, #0
 435 0224 1A60     		str	r2, [r3]
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick */
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 436              		.loc 1 376 19
 437 0226 FFF7FEFF 		bl	HAL_GetTick
 438 022a 3861     		str	r0, [r7, #16]
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSI is ready */
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 439              		.loc 1 379 13
 440 022c 0EE0     		b	.L31
 441              	.L32:
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 442              		.loc 1 381 14
 443 022e FFF7FEFF 		bl	HAL_GetTick
 444 0232 0246     		mov	r2, r0
 445              		.loc 1 381 28 discriminator 1
 446 0234 3B69     		ldr	r3, [r7, #16]
 447 0236 D31A     		subs	r3, r2, r3
 448              		.loc 1 381 12 discriminator 1
 449 0238 022B     		cmp	r3, #2
 450 023a 07D9     		bls	.L31
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 451              		.loc 1 383 18
 452 023c 0323     		movs	r3, #3
 453 023e 58E1     		b	.L5
 454              	.L60:
 455              		.align	2
 456              	.L59:
 457 0240 00380240 		.word	1073887232
 458 0244 00004742 		.word	1111949312
 459 0248 800E4742 		.word	1111953024
 460              	.L31:
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 16


 461              		.loc 1 379 14
 462 024c 884B     		ldr	r3, .L61
 463 024e 5B6F     		ldr	r3, [r3, #116]
 464 0250 03F00203 		and	r3, r3, #2
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 465              		.loc 1 379 50
 466 0254 002B     		cmp	r3, #0
 467 0256 EAD1     		bne	.L32
 468              	.L27:
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 469              		.loc 1 389 26
 470 0258 7B68     		ldr	r3, [r7, #4]
 471 025a 1B68     		ldr	r3, [r3]
 472              		.loc 1 389 44
 473 025c 03F00403 		and	r3, r3, #4
 474              		.loc 1 389 6
 475 0260 002B     		cmp	r3, #0
 476 0262 00F09780 		beq	.L33
 477              	.LBB2:
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 478              		.loc 1 391 22
 479 0266 0023     		movs	r3, #0
 480 0268 FB75     		strb	r3, [r7, #23]
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 481              		.loc 1 398 9
 482 026a 814B     		ldr	r3, .L61
 483 026c 1B6C     		ldr	r3, [r3, #64]
 484 026e 03F08053 		and	r3, r3, #268435456
 485              		.loc 1 398 8
 486 0272 002B     		cmp	r3, #0
 487 0274 0FD1     		bne	.L34
 488              	.LBB3:
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 489              		.loc 1 400 7
 490 0276 0023     		movs	r3, #0
 491 0278 BB60     		str	r3, [r7, #8]
 492 027a 7D4B     		ldr	r3, .L61
 493 027c 1B6C     		ldr	r3, [r3, #64]
 494 027e 7C4A     		ldr	r2, .L61
 495 0280 43F08053 		orr	r3, r3, #268435456
 496 0284 1364     		str	r3, [r2, #64]
 497 0286 7A4B     		ldr	r3, .L61
 498 0288 1B6C     		ldr	r3, [r3, #64]
 499 028a 03F08053 		and	r3, r3, #268435456
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 17


 500 028e BB60     		str	r3, [r7, #8]
 501 0290 BB68     		ldr	r3, [r7, #8]
 502              	.LBE3:
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       pwrclkchanged = SET;
 503              		.loc 1 401 21
 504 0292 0123     		movs	r3, #1
 505 0294 FB75     		strb	r3, [r7, #23]
 506              	.L34:
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 507              		.loc 1 404 9
 508 0296 774B     		ldr	r3, .L61+4
 509 0298 1B68     		ldr	r3, [r3]
 510 029a 03F48073 		and	r3, r3, #256
 511              		.loc 1 404 8
 512 029e 002B     		cmp	r3, #0
 513 02a0 18D1     		bne	.L35
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 514              		.loc 1 407 7
 515 02a2 744B     		ldr	r3, .L61+4
 516 02a4 1B68     		ldr	r3, [r3]
 517 02a6 734A     		ldr	r2, .L61+4
 518 02a8 43F48073 		orr	r3, r3, #256
 519 02ac 1360     		str	r3, [r2]
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 520              		.loc 1 410 19
 521 02ae FFF7FEFF 		bl	HAL_GetTick
 522 02b2 3861     		str	r0, [r7, #16]
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 523              		.loc 1 412 13
 524 02b4 08E0     		b	.L36
 525              	.L37:
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 526              		.loc 1 414 14
 527 02b6 FFF7FEFF 		bl	HAL_GetTick
 528 02ba 0246     		mov	r2, r0
 529              		.loc 1 414 28 discriminator 1
 530 02bc 3B69     		ldr	r3, [r7, #16]
 531 02be D31A     		subs	r3, r2, r3
 532              		.loc 1 414 12 discriminator 1
 533 02c0 022B     		cmp	r3, #2
 534 02c2 01D9     		bls	.L36
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 535              		.loc 1 416 18
 536 02c4 0323     		movs	r3, #3
 537 02c6 14E1     		b	.L5
 538              	.L36:
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 539              		.loc 1 412 14
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 18


 540 02c8 6A4B     		ldr	r3, .L61+4
 541 02ca 1B68     		ldr	r3, [r3]
 542 02cc 03F48073 		and	r3, r3, #256
 543 02d0 002B     		cmp	r3, #0
 544 02d2 F0D0     		beq	.L37
 545              	.L35:
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 546              		.loc 1 422 5
 547 02d4 7B68     		ldr	r3, [r7, #4]
 548 02d6 9B68     		ldr	r3, [r3, #8]
 549 02d8 012B     		cmp	r3, #1
 550 02da 06D1     		bne	.L38
 551              		.loc 1 422 5 is_stmt 0 discriminator 1
 552 02dc 644B     		ldr	r3, .L61
 553 02de 1B6F     		ldr	r3, [r3, #112]
 554 02e0 634A     		ldr	r2, .L61
 555 02e2 43F00103 		orr	r3, r3, #1
 556 02e6 1367     		str	r3, [r2, #112]
 557 02e8 1CE0     		b	.L39
 558              	.L38:
 559              		.loc 1 422 5 discriminator 2
 560 02ea 7B68     		ldr	r3, [r7, #4]
 561 02ec 9B68     		ldr	r3, [r3, #8]
 562 02ee 052B     		cmp	r3, #5
 563 02f0 0CD1     		bne	.L40
 564              		.loc 1 422 5 discriminator 3
 565 02f2 5F4B     		ldr	r3, .L61
 566 02f4 1B6F     		ldr	r3, [r3, #112]
 567 02f6 5E4A     		ldr	r2, .L61
 568 02f8 43F00403 		orr	r3, r3, #4
 569 02fc 1367     		str	r3, [r2, #112]
 570 02fe 5C4B     		ldr	r3, .L61
 571 0300 1B6F     		ldr	r3, [r3, #112]
 572 0302 5B4A     		ldr	r2, .L61
 573 0304 43F00103 		orr	r3, r3, #1
 574 0308 1367     		str	r3, [r2, #112]
 575 030a 0BE0     		b	.L39
 576              	.L40:
 577              		.loc 1 422 5 discriminator 4
 578 030c 584B     		ldr	r3, .L61
 579 030e 1B6F     		ldr	r3, [r3, #112]
 580 0310 574A     		ldr	r2, .L61
 581 0312 23F00103 		bic	r3, r3, #1
 582 0316 1367     		str	r3, [r2, #112]
 583 0318 554B     		ldr	r3, .L61
 584 031a 1B6F     		ldr	r3, [r3, #112]
 585 031c 544A     		ldr	r2, .L61
 586 031e 23F00403 		bic	r3, r3, #4
 587 0322 1367     		str	r3, [r2, #112]
 588              	.L39:
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the LSE State */
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 19


 589              		.loc 1 424 27 is_stmt 1
 590 0324 7B68     		ldr	r3, [r7, #4]
 591 0326 9B68     		ldr	r3, [r3, #8]
 592              		.loc 1 424 8
 593 0328 002B     		cmp	r3, #0
 594 032a 15D0     		beq	.L41
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick*/
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 595              		.loc 1 427 19
 596 032c FFF7FEFF 		bl	HAL_GetTick
 597 0330 3861     		str	r0, [r7, #16]
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSE is ready */
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 598              		.loc 1 430 13
 599 0332 0AE0     		b	.L42
 600              	.L43:
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 601              		.loc 1 432 14
 602 0334 FFF7FEFF 		bl	HAL_GetTick
 603 0338 0246     		mov	r2, r0
 604              		.loc 1 432 28 discriminator 1
 605 033a 3B69     		ldr	r3, [r7, #16]
 606 033c D31A     		subs	r3, r2, r3
 607              		.loc 1 432 12 discriminator 1
 608 033e 41F28832 		movw	r2, #5000
 609 0342 9342     		cmp	r3, r2
 610 0344 01D9     		bls	.L42
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 611              		.loc 1 434 18
 612 0346 0323     		movs	r3, #3
 613 0348 D3E0     		b	.L5
 614              	.L42:
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 615              		.loc 1 430 14
 616 034a 494B     		ldr	r3, .L61
 617 034c 1B6F     		ldr	r3, [r3, #112]
 618 034e 03F00203 		and	r3, r3, #2
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 619              		.loc 1 430 50
 620 0352 002B     		cmp	r3, #0
 621 0354 EED0     		beq	.L43
 622 0356 14E0     		b	.L44
 623              	.L41:
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick */
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 624              		.loc 1 441 19
 625 0358 FFF7FEFF 		bl	HAL_GetTick
 626 035c 3861     		str	r0, [r7, #16]
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 20


 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSE is ready */
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 627              		.loc 1 444 13
 628 035e 0AE0     		b	.L45
 629              	.L46:
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 630              		.loc 1 446 14
 631 0360 FFF7FEFF 		bl	HAL_GetTick
 632 0364 0246     		mov	r2, r0
 633              		.loc 1 446 28 discriminator 1
 634 0366 3B69     		ldr	r3, [r7, #16]
 635 0368 D31A     		subs	r3, r2, r3
 636              		.loc 1 446 12 discriminator 1
 637 036a 41F28832 		movw	r2, #5000
 638 036e 9342     		cmp	r3, r2
 639 0370 01D9     		bls	.L45
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 640              		.loc 1 448 18
 641 0372 0323     		movs	r3, #3
 642 0374 BDE0     		b	.L5
 643              	.L45:
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 644              		.loc 1 444 14
 645 0376 3E4B     		ldr	r3, .L61
 646 0378 1B6F     		ldr	r3, [r3, #112]
 647 037a 03F00203 		and	r3, r3, #2
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 648              		.loc 1 444 50
 649 037e 002B     		cmp	r3, #0
 650 0380 EED1     		bne	.L46
 651              	.L44:
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Restore clock configuration if changed */
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if (pwrclkchanged == SET)
 652              		.loc 1 454 8
 653 0382 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 654 0384 012B     		cmp	r3, #1
 655 0386 05D1     		bne	.L33
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 656              		.loc 1 456 7
 657 0388 394B     		ldr	r3, .L61
 658 038a 1B6C     		ldr	r3, [r3, #64]
 659 038c 384A     		ldr	r2, .L61
 660 038e 23F08053 		bic	r3, r3, #268435456
 661 0392 1364     		str	r3, [r2, #64]
 662              	.L33:
 663              	.LBE2:
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 21


 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 664              		.loc 1 462 30
 665 0394 7B68     		ldr	r3, [r7, #4]
 666 0396 9B69     		ldr	r3, [r3, #24]
 667              		.loc 1 462 6
 668 0398 002B     		cmp	r3, #0
 669 039a 00F0A980 		beq	.L47
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 670              		.loc 1 465 9
 671 039e 344B     		ldr	r3, .L61
 672 03a0 9B68     		ldr	r3, [r3, #8]
 673 03a2 03F00C03 		and	r3, r3, #12
 674              		.loc 1 465 8
 675 03a6 082B     		cmp	r3, #8
 676 03a8 5CD0     		beq	.L48
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 677              		.loc 1 467 34
 678 03aa 7B68     		ldr	r3, [r7, #4]
 679 03ac 9B69     		ldr	r3, [r3, #24]
 680              		.loc 1 467 10
 681 03ae 022B     		cmp	r3, #2
 682 03b0 41D1     		bne	.L49
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Check the parameters */
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Disable the main PLL. */
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 683              		.loc 1 477 9
 684 03b2 314B     		ldr	r3, .L61+8
 685 03b4 0022     		movs	r2, #0
 686 03b6 1A60     		str	r2, [r3]
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 687              		.loc 1 480 21
 688 03b8 FFF7FEFF 		bl	HAL_GetTick
 689 03bc 3861     		str	r0, [r7, #16]
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 690              		.loc 1 483 15
 691 03be 08E0     		b	.L50
 692              	.L51:
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 693              		.loc 1 485 16
 694 03c0 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 22


 695 03c4 0246     		mov	r2, r0
 696              		.loc 1 485 30 discriminator 1
 697 03c6 3B69     		ldr	r3, [r7, #16]
 698 03c8 D31A     		subs	r3, r2, r3
 699              		.loc 1 485 14 discriminator 1
 700 03ca 022B     		cmp	r3, #2
 701 03cc 01D9     		bls	.L50
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 702              		.loc 1 487 20
 703 03ce 0323     		movs	r3, #3
 704 03d0 8FE0     		b	.L5
 705              	.L50:
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 706              		.loc 1 483 16
 707 03d2 274B     		ldr	r3, .L61
 708 03d4 1B68     		ldr	r3, [r3]
 709 03d6 03F00073 		and	r3, r3, #33554432
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 710              		.loc 1 483 52
 711 03da 002B     		cmp	r3, #0
 712 03dc F0D1     		bne	.L51
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Configure the main PLL clock source, multiplication and division factors. */
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                  
 713              		.loc 1 492 9
 714 03de 7B68     		ldr	r3, [r7, #4]
 715 03e0 DA69     		ldr	r2, [r3, #28]
 716 03e2 7B68     		ldr	r3, [r7, #4]
 717 03e4 1B6A     		ldr	r3, [r3, #32]
 718 03e6 1A43     		orrs	r2, r2, r3
 719 03e8 7B68     		ldr	r3, [r7, #4]
 720 03ea 5B6A     		ldr	r3, [r3, #36]
 721 03ec 9B01     		lsls	r3, r3, #6
 722 03ee 1A43     		orrs	r2, r2, r3
 723 03f0 7B68     		ldr	r3, [r7, #4]
 724 03f2 9B6A     		ldr	r3, [r3, #40]
 725 03f4 5B08     		lsrs	r3, r3, #1
 726 03f6 013B     		subs	r3, r3, #1
 727 03f8 1B04     		lsls	r3, r3, #16
 728 03fa 1A43     		orrs	r2, r2, r3
 729 03fc 7B68     		ldr	r3, [r7, #4]
 730 03fe DB6A     		ldr	r3, [r3, #44]
 731 0400 1B06     		lsls	r3, r3, #24
 732 0402 1B49     		ldr	r1, .L61
 733 0404 1343     		orrs	r3, r3, r2
 734 0406 4B60     		str	r3, [r1, #4]
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  RCC_OscInitStruct->PLL.PLLM                                       
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Po
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Enable the main PLL. */
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 735              		.loc 1 498 9
 736 0408 1B4B     		ldr	r3, .L61+8
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 23


 737 040a 0122     		movs	r2, #1
 738 040c 1A60     		str	r2, [r3]
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 739              		.loc 1 501 21
 740 040e FFF7FEFF 		bl	HAL_GetTick
 741 0412 3861     		str	r0, [r7, #16]
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 742              		.loc 1 504 15
 743 0414 08E0     		b	.L52
 744              	.L53:
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 745              		.loc 1 506 16
 746 0416 FFF7FEFF 		bl	HAL_GetTick
 747 041a 0246     		mov	r2, r0
 748              		.loc 1 506 30 discriminator 1
 749 041c 3B69     		ldr	r3, [r7, #16]
 750 041e D31A     		subs	r3, r2, r3
 751              		.loc 1 506 14 discriminator 1
 752 0420 022B     		cmp	r3, #2
 753 0422 01D9     		bls	.L52
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 754              		.loc 1 508 20
 755 0424 0323     		movs	r3, #3
 756 0426 64E0     		b	.L5
 757              	.L52:
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 758              		.loc 1 504 16
 759 0428 114B     		ldr	r3, .L61
 760 042a 1B68     		ldr	r3, [r3]
 761 042c 03F00073 		and	r3, r3, #33554432
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 762              		.loc 1 504 52
 763 0430 002B     		cmp	r3, #0
 764 0432 F0D0     		beq	.L53
 765 0434 5CE0     		b	.L47
 766              	.L49:
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Disable the main PLL. */
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 767              		.loc 1 515 9
 768 0436 104B     		ldr	r3, .L61+8
 769 0438 0022     		movs	r2, #0
 770 043a 1A60     		str	r2, [r3]
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 771              		.loc 1 518 21
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 24


 772 043c FFF7FEFF 		bl	HAL_GetTick
 773 0440 3861     		str	r0, [r7, #16]
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 774              		.loc 1 521 15
 775 0442 08E0     		b	.L54
 776              	.L55:
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 777              		.loc 1 523 16
 778 0444 FFF7FEFF 		bl	HAL_GetTick
 779 0448 0246     		mov	r2, r0
 780              		.loc 1 523 30 discriminator 1
 781 044a 3B69     		ldr	r3, [r7, #16]
 782 044c D31A     		subs	r3, r2, r3
 783              		.loc 1 523 14 discriminator 1
 784 044e 022B     		cmp	r3, #2
 785 0450 01D9     		bls	.L54
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 786              		.loc 1 525 20
 787 0452 0323     		movs	r3, #3
 788 0454 4DE0     		b	.L5
 789              	.L54:
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 790              		.loc 1 521 16
 791 0456 064B     		ldr	r3, .L61
 792 0458 1B68     		ldr	r3, [r3]
 793 045a 03F00073 		and	r3, r3, #33554432
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 794              		.loc 1 521 52
 795 045e 002B     		cmp	r3, #0
 796 0460 F0D1     		bne	.L55
 797 0462 45E0     		b	.L47
 798              	.L48:
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check if there is a request to disable the PLL used as System clock source */
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 799              		.loc 1 533 34
 800 0464 7B68     		ldr	r3, [r7, #4]
 801 0466 9B69     		ldr	r3, [r3, #24]
 802              		.loc 1 533 10
 803 0468 012B     		cmp	r3, #1
 804 046a 07D1     		bne	.L56
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 805              		.loc 1 535 16
 806 046c 0123     		movs	r3, #1
 807 046e 40E0     		b	.L5
 808              	.L62:
 809              		.align	2
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 25


 810              	.L61:
 811 0470 00380240 		.word	1073887232
 812 0474 00700040 		.word	1073770496
 813 0478 60004742 		.word	1111949408
 814              	.L56:
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Do not return HAL_ERROR if request repeats the current configuration */
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         pll_config = RCC->PLLCFGR;
 815              		.loc 1 540 25
 816 047c 1F4B     		ldr	r3, .L63
 817              		.loc 1 540 20
 818 047e 5B68     		ldr	r3, [r3, #4]
 819 0480 FB60     		str	r3, [r7, #12]
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #if defined (RCC_PLLCFGR_PLLR)
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 820              		.loc 1 542 37
 821 0482 7B68     		ldr	r3, [r7, #4]
 822 0484 9B69     		ldr	r3, [r3, #24]
 823              		.loc 1 542 12
 824 0486 012B     		cmp	r3, #1
 825 0488 30D0     		beq	.L57
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 826              		.loc 1 543 14
 827 048a FB68     		ldr	r3, [r7, #12]
 828 048c 03F48002 		and	r2, r3, #4194304
 829              		.loc 1 543 80
 830 0490 7B68     		ldr	r3, [r7, #4]
 831 0492 DB69     		ldr	r3, [r3, #28]
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 832              		.loc 1 542 64 discriminator 1
 833 0494 9A42     		cmp	r2, r3
 834 0496 29D1     		bne	.L57
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR
 835              		.loc 1 544 14
 836 0498 FB68     		ldr	r3, [r7, #12]
 837 049a 03F03F02 		and	r2, r3, #63
 838              		.loc 1 544 79
 839 049e 7B68     		ldr	r3, [r7, #4]
 840 04a0 1B6A     		ldr	r3, [r3, #32]
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 841              		.loc 1 543 92
 842 04a2 9A42     		cmp	r2, r3
 843 04a4 22D1     		bne	.L57
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR
 844              		.loc 1 545 14
 845 04a6 FA68     		ldr	r2, [r7, #12]
 846 04a8 47F6C073 		movw	r3, #32704
 847 04ac 1340     		ands	r3, r3, r2
 848              		.loc 1 545 79
 849 04ae 7A68     		ldr	r2, [r7, #4]
 850 04b0 526A     		ldr	r2, [r2, #36]
 851              		.loc 1 545 86
 852 04b2 9201     		lsls	r2, r2, #6
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR
 853              		.loc 1 544 111
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 26


 854 04b4 9342     		cmp	r3, r2
 855 04b6 19D1     		bne	.L57
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U))
 856              		.loc 1 546 14
 857 04b8 FB68     		ldr	r3, [r7, #12]
 858 04ba 03F44032 		and	r2, r3, #196608
 859              		.loc 1 546 81
 860 04be 7B68     		ldr	r3, [r7, #4]
 861 04c0 9B6A     		ldr	r3, [r3, #40]
 862              		.loc 1 546 87
 863 04c2 5B08     		lsrs	r3, r3, #1
 864              		.loc 1 546 94
 865 04c4 013B     		subs	r3, r3, #1
 866              		.loc 1 546 101
 867 04c6 1B04     		lsls	r3, r3, #16
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR
 868              		.loc 1 545 111
 869 04c8 9A42     		cmp	r2, r3
 870 04ca 0FD1     		bne	.L57
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_
 871              		.loc 1 547 14
 872 04cc FB68     		ldr	r3, [r7, #12]
 873 04ce 03F07062 		and	r2, r3, #251658240
 874              		.loc 1 547 79
 875 04d2 7B68     		ldr	r3, [r7, #4]
 876 04d4 DB6A     		ldr	r3, [r3, #44]
 877              		.loc 1 547 85
 878 04d6 1B06     		lsls	r3, r3, #24
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U))
 879              		.loc 1 546 126
 880 04d8 9A42     		cmp	r2, r3
 881 04da 07D1     		bne	.L57
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_
 882              		.loc 1 548 14
 883 04dc FB68     		ldr	r3, [r7, #12]
 884 04de 03F0E042 		and	r2, r3, #1879048192
 885              		.loc 1 548 79
 886 04e2 7B68     		ldr	r3, [r7, #4]
 887 04e4 1B6B     		ldr	r3, [r3, #48]
 888              		.loc 1 548 85
 889 04e6 1B07     		lsls	r3, r3, #28
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_
 890              		.loc 1 547 111
 891 04e8 9A42     		cmp	r2, r3
 892 04ea 01D0     		beq	.L47
 893              	.L57:
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #else
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U))
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #endif /* RCC_PLLCFGR_PLLR */
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_ERROR;
 894              		.loc 1 558 18
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 27


 895 04ec 0123     		movs	r3, #1
 896 04ee 00E0     		b	.L5
 897              	.L47:
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return HAL_OK;
 898              		.loc 1 563 10
 899 04f0 0023     		movs	r3, #0
 900              	.L5:
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 901              		.loc 1 564 1
 902 04f2 1846     		mov	r0, r3
 903 04f4 1837     		adds	r7, r7, #24
 904              	.LCFI7:
 905              		.cfi_def_cfa_offset 8
 906 04f6 BD46     		mov	sp, r7
 907              	.LCFI8:
 908              		.cfi_def_cfa_register 13
 909              		@ sp needed
 910 04f8 80BD     		pop	{r7, pc}
 911              	.L64:
 912 04fa 00BF     		.align	2
 913              	.L63:
 914 04fc 00380240 		.word	1073887232
 915              		.cfi_endproc
 916              	.LFE135:
 918              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 919              		.align	1
 920              		.global	HAL_RCC_ClockConfig
 921              		.syntax unified
 922              		.thumb
 923              		.thumb_func
 925              	HAL_RCC_ClockConfig:
 926              	.LFB136:
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB busses clocks according to the specified
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  FLatency FLASH Latency, this parameter depend on device selected
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         and updated by HAL_RCC_GetHCLKFreq() function called within this function
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         startup from Reset, wake-up from STOP and STANDBY mode, or in case
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         clock source is ready (clock stable after startup delay or PLL locked).
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         occur when the clock source will be ready.
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 28


 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Depending on the device voltage range, the software has to set correctly
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         (for more details refer to section above "Initialization/de-initialization functions")
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(const RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLaten
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 927              		.loc 1 592 1
 928              		.cfi_startproc
 929              		@ args = 0, pretend = 0, frame = 16
 930              		@ frame_needed = 1, uses_anonymous_args = 0
 931 0000 80B5     		push	{r7, lr}
 932              	.LCFI9:
 933              		.cfi_def_cfa_offset 8
 934              		.cfi_offset 7, -8
 935              		.cfi_offset 14, -4
 936 0002 84B0     		sub	sp, sp, #16
 937              	.LCFI10:
 938              		.cfi_def_cfa_offset 24
 939 0004 00AF     		add	r7, sp, #0
 940              	.LCFI11:
 941              		.cfi_def_cfa_register 7
 942 0006 7860     		str	r0, [r7, #4]
 943 0008 3960     		str	r1, [r7]
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t tickstart;
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check Null pointer */
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if (RCC_ClkInitStruct == NULL)
 944              		.loc 1 596 6
 945 000a 7B68     		ldr	r3, [r7, #4]
 946 000c 002B     		cmp	r3, #0
 947 000e 01D1     		bne	.L66
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     return HAL_ERROR;
 948              		.loc 1 598 12
 949 0010 0123     		movs	r3, #1
 950 0012 CCE0     		b	.L67
 951              	.L66:
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     must be correctly programmed according to the frequency of the CPU clock
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     (HCLK) and the supply voltage of the device. */
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if (FLatency > __HAL_FLASH_GET_LATENCY())
 952              		.loc 1 610 18
 953 0014 684B     		ldr	r3, .L83
 954 0016 1B68     		ldr	r3, [r3]
 955 0018 03F00F03 		and	r3, r3, #15
 956              		.loc 1 610 6
 957 001c 3A68     		ldr	r2, [r7]
 958 001e 9A42     		cmp	r2, r3
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 29


 959 0020 0CD9     		bls	.L68
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 960              		.loc 1 613 5
 961 0022 654B     		ldr	r3, .L83
 962 0024 3A68     		ldr	r2, [r7]
 963 0026 D2B2     		uxtb	r2, r2
 964 0028 1A70     		strb	r2, [r3]
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if (__HAL_FLASH_GET_LATENCY() != FLatency)
 965              		.loc 1 617 9
 966 002a 634B     		ldr	r3, .L83
 967 002c 1B68     		ldr	r3, [r3]
 968 002e 03F00F03 		and	r3, r3, #15
 969              		.loc 1 617 8
 970 0032 3A68     		ldr	r2, [r7]
 971 0034 9A42     		cmp	r2, r3
 972 0036 01D0     		beq	.L68
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       return HAL_ERROR;
 973              		.loc 1 619 14
 974 0038 0123     		movs	r3, #1
 975 003a B8E0     		b	.L67
 976              	.L68:
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 977              		.loc 1 624 26
 978 003c 7B68     		ldr	r3, [r7, #4]
 979 003e 1B68     		ldr	r3, [r3]
 980              		.loc 1 624 39
 981 0040 03F00203 		and	r3, r3, #2
 982              		.loc 1 624 6
 983 0044 002B     		cmp	r3, #0
 984 0046 20D0     		beq	.L69
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Set the highest APBx dividers in order to ensure that we do not go through
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****        a non-spec phase whatever we decrease or increase HCLK. */
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 985              		.loc 1 628 28
 986 0048 7B68     		ldr	r3, [r7, #4]
 987 004a 1B68     		ldr	r3, [r3]
 988              		.loc 1 628 41
 989 004c 03F00403 		and	r3, r3, #4
 990              		.loc 1 628 8
 991 0050 002B     		cmp	r3, #0
 992 0052 05D0     		beq	.L70
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 993              		.loc 1 630 7
 994 0054 594B     		ldr	r3, .L83+4
 995 0056 9B68     		ldr	r3, [r3, #8]
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 30


 996 0058 584A     		ldr	r2, .L83+4
 997 005a 43F4E053 		orr	r3, r3, #7168
 998 005e 9360     		str	r3, [r2, #8]
 999              	.L70:
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 1000              		.loc 1 633 28
 1001 0060 7B68     		ldr	r3, [r7, #4]
 1002 0062 1B68     		ldr	r3, [r3]
 1003              		.loc 1 633 41
 1004 0064 03F00803 		and	r3, r3, #8
 1005              		.loc 1 633 8
 1006 0068 002B     		cmp	r3, #0
 1007 006a 05D0     		beq	.L71
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 1008              		.loc 1 635 7
 1009 006c 534B     		ldr	r3, .L83+4
 1010 006e 9B68     		ldr	r3, [r3, #8]
 1011 0070 524A     		ldr	r2, .L83+4
 1012 0072 43F46043 		orr	r3, r3, #57344
 1013 0076 9360     		str	r3, [r2, #8]
 1014              	.L71:
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 1015              		.loc 1 639 5
 1016 0078 504B     		ldr	r3, .L83+4
 1017 007a 9B68     		ldr	r3, [r3, #8]
 1018 007c 23F0F002 		bic	r2, r3, #240
 1019 0080 7B68     		ldr	r3, [r7, #4]
 1020 0082 9B68     		ldr	r3, [r3, #8]
 1021 0084 4D49     		ldr	r1, .L83+4
 1022 0086 1343     		orrs	r3, r3, r2
 1023 0088 8B60     		str	r3, [r1, #8]
 1024              	.L69:
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 1025              		.loc 1 643 26
 1026 008a 7B68     		ldr	r3, [r7, #4]
 1027 008c 1B68     		ldr	r3, [r3]
 1028              		.loc 1 643 39
 1029 008e 03F00103 		and	r3, r3, #1
 1030              		.loc 1 643 6
 1031 0092 002B     		cmp	r3, #0
 1032 0094 44D0     		beq	.L72
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 1033              		.loc 1 648 26
 1034 0096 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 31


 1035 0098 5B68     		ldr	r3, [r3, #4]
 1036              		.loc 1 648 8
 1037 009a 012B     		cmp	r3, #1
 1038 009c 07D1     		bne	.L73
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSE ready flag */
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 1039              		.loc 1 651 11
 1040 009e 474B     		ldr	r3, .L83+4
 1041 00a0 1B68     		ldr	r3, [r3]
 1042 00a2 03F40033 		and	r3, r3, #131072
 1043              		.loc 1 651 10
 1044 00a6 002B     		cmp	r3, #0
 1045 00a8 19D1     		bne	.L74
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 1046              		.loc 1 653 16
 1047 00aa 0123     		movs	r3, #1
 1048 00ac 7FE0     		b	.L67
 1049              	.L73:
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 1050              		.loc 1 657 32
 1051 00ae 7B68     		ldr	r3, [r7, #4]
 1052 00b0 5B68     		ldr	r3, [r3, #4]
 1053              		.loc 1 657 13
 1054 00b2 022B     		cmp	r3, #2
 1055 00b4 03D0     		beq	.L75
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 1056              		.loc 1 658 32
 1057 00b6 7B68     		ldr	r3, [r7, #4]
 1058 00b8 5B68     		ldr	r3, [r3, #4]
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 1059              		.loc 1 657 77 discriminator 1
 1060 00ba 032B     		cmp	r3, #3
 1061 00bc 07D1     		bne	.L76
 1062              	.L75:
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the PLL ready flag */
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 1063              		.loc 1 661 11
 1064 00be 3F4B     		ldr	r3, .L83+4
 1065 00c0 1B68     		ldr	r3, [r3]
 1066 00c2 03F00073 		and	r3, r3, #33554432
 1067              		.loc 1 661 10
 1068 00c6 002B     		cmp	r3, #0
 1069 00c8 09D1     		bne	.L74
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 1070              		.loc 1 663 16
 1071 00ca 0123     		movs	r3, #1
 1072 00cc 6FE0     		b	.L67
 1073              	.L76:
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 32


 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSI ready flag */
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 1074              		.loc 1 670 11
 1075 00ce 3B4B     		ldr	r3, .L83+4
 1076 00d0 1B68     		ldr	r3, [r3]
 1077 00d2 03F00203 		and	r3, r3, #2
 1078              		.loc 1 670 10
 1079 00d6 002B     		cmp	r3, #0
 1080 00d8 01D1     		bne	.L74
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 1081              		.loc 1 672 16
 1082 00da 0123     		movs	r3, #1
 1083 00dc 67E0     		b	.L67
 1084              	.L74:
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 1085              		.loc 1 676 5
 1086 00de 374B     		ldr	r3, .L83+4
 1087 00e0 9B68     		ldr	r3, [r3, #8]
 1088 00e2 23F00302 		bic	r2, r3, #3
 1089 00e6 7B68     		ldr	r3, [r7, #4]
 1090 00e8 5B68     		ldr	r3, [r3, #4]
 1091 00ea 3449     		ldr	r1, .L83+4
 1092 00ec 1343     		orrs	r3, r3, r2
 1093 00ee 8B60     		str	r3, [r1, #8]
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Get Start Tick */
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 1094              		.loc 1 679 17
 1095 00f0 FFF7FEFF 		bl	HAL_GetTick
 1096 00f4 F860     		str	r0, [r7, #12]
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 1097              		.loc 1 681 11
 1098 00f6 0AE0     		b	.L78
 1099              	.L79:
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 1100              		.loc 1 683 12
 1101 00f8 FFF7FEFF 		bl	HAL_GetTick
 1102 00fc 0246     		mov	r2, r0
 1103              		.loc 1 683 26 discriminator 1
 1104 00fe FB68     		ldr	r3, [r7, #12]
 1105 0100 D31A     		subs	r3, r2, r3
 1106              		.loc 1 683 10 discriminator 1
 1107 0102 41F28832 		movw	r2, #5000
 1108 0106 9342     		cmp	r3, r2
 1109 0108 01D9     		bls	.L78
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_TIMEOUT;
 1110              		.loc 1 685 16
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 33


 1111 010a 0323     		movs	r3, #3
 1112 010c 4FE0     		b	.L67
 1113              	.L78:
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 1114              		.loc 1 681 12
 1115 010e 2B4B     		ldr	r3, .L83+4
 1116 0110 9B68     		ldr	r3, [r3, #8]
 1117 0112 03F00C02 		and	r2, r3, #12
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 1118              		.loc 1 681 63
 1119 0116 7B68     		ldr	r3, [r7, #4]
 1120 0118 5B68     		ldr	r3, [r3, #4]
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 1121              		.loc 1 681 78
 1122 011a 9B00     		lsls	r3, r3, #2
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 1123              		.loc 1 681 42
 1124 011c 9A42     		cmp	r2, r3
 1125 011e EBD1     		bne	.L79
 1126              	.L72:
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if (FLatency < __HAL_FLASH_GET_LATENCY())
 1127              		.loc 1 691 18
 1128 0120 254B     		ldr	r3, .L83
 1129 0122 1B68     		ldr	r3, [r3]
 1130 0124 03F00F03 		and	r3, r3, #15
 1131              		.loc 1 691 6
 1132 0128 3A68     		ldr	r2, [r7]
 1133 012a 9A42     		cmp	r2, r3
 1134 012c 0CD2     		bcs	.L80
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1135              		.loc 1 694 5
 1136 012e 224B     		ldr	r3, .L83
 1137 0130 3A68     		ldr	r2, [r7]
 1138 0132 D2B2     		uxtb	r2, r2
 1139 0134 1A70     		strb	r2, [r3]
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if (__HAL_FLASH_GET_LATENCY() != FLatency)
 1140              		.loc 1 698 9
 1141 0136 204B     		ldr	r3, .L83
 1142 0138 1B68     		ldr	r3, [r3]
 1143 013a 03F00F03 		and	r3, r3, #15
 1144              		.loc 1 698 8
 1145 013e 3A68     		ldr	r2, [r7]
 1146 0140 9A42     		cmp	r2, r3
 1147 0142 01D0     		beq	.L80
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       return HAL_ERROR;
 1148              		.loc 1 700 14
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 34


 1149 0144 0123     		movs	r3, #1
 1150 0146 32E0     		b	.L67
 1151              	.L80:
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1152              		.loc 1 705 26
 1153 0148 7B68     		ldr	r3, [r7, #4]
 1154 014a 1B68     		ldr	r3, [r3]
 1155              		.loc 1 705 39
 1156 014c 03F00403 		and	r3, r3, #4
 1157              		.loc 1 705 6
 1158 0150 002B     		cmp	r3, #0
 1159 0152 08D0     		beq	.L81
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 1160              		.loc 1 708 5
 1161 0154 194B     		ldr	r3, .L83+4
 1162 0156 9B68     		ldr	r3, [r3, #8]
 1163 0158 23F4E052 		bic	r2, r3, #7168
 1164 015c 7B68     		ldr	r3, [r7, #4]
 1165 015e DB68     		ldr	r3, [r3, #12]
 1166 0160 1649     		ldr	r1, .L83+4
 1167 0162 1343     		orrs	r3, r3, r2
 1168 0164 8B60     		str	r3, [r1, #8]
 1169              	.L81:
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 1170              		.loc 1 712 26
 1171 0166 7B68     		ldr	r3, [r7, #4]
 1172 0168 1B68     		ldr	r3, [r3]
 1173              		.loc 1 712 39
 1174 016a 03F00803 		and	r3, r3, #8
 1175              		.loc 1 712 6
 1176 016e 002B     		cmp	r3, #0
 1177 0170 09D0     		beq	.L82
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 1178              		.loc 1 715 5
 1179 0172 124B     		ldr	r3, .L83+4
 1180 0174 9B68     		ldr	r3, [r3, #8]
 1181 0176 23F46042 		bic	r2, r3, #57344
 1182 017a 7B68     		ldr	r3, [r7, #4]
 1183 017c 1B69     		ldr	r3, [r3, #16]
 1184 017e DB00     		lsls	r3, r3, #3
 1185 0180 0E49     		ldr	r1, .L83+4
 1186 0182 1343     		orrs	r3, r3, r2
 1187 0184 8B60     		str	r3, [r1, #8]
 1188              	.L82:
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 35


 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_C
 1189              		.loc 1 719 21
 1190 0186 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1191 018a 0246     		mov	r2, r0
 1192              		.loc 1 719 68 discriminator 1
 1193 018c 0B4B     		ldr	r3, .L83+4
 1194 018e 9B68     		ldr	r3, [r3, #8]
 1195              		.loc 1 719 92 discriminator 1
 1196 0190 1B09     		lsrs	r3, r3, #4
 1197 0192 03F00F03 		and	r3, r3, #15
 1198              		.loc 1 719 63 discriminator 1
 1199 0196 0A49     		ldr	r1, .L83+8
 1200 0198 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1201              		.loc 1 719 47 discriminator 1
 1202 019a 22FA03F3 		lsr	r3, r2, r3
 1203              		.loc 1 719 19 discriminator 1
 1204 019e 094A     		ldr	r2, .L83+12
 1205 01a0 1360     		str	r3, [r2]
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings */
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   HAL_InitTick(uwTickPrio);
 1206              		.loc 1 722 3
 1207 01a2 094B     		ldr	r3, .L83+16
 1208 01a4 1B68     		ldr	r3, [r3]
 1209 01a6 1846     		mov	r0, r3
 1210 01a8 FFF7FEFF 		bl	HAL_InitTick
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return HAL_OK;
 1211              		.loc 1 724 10
 1212 01ac 0023     		movs	r3, #0
 1213              	.L67:
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1214              		.loc 1 725 1
 1215 01ae 1846     		mov	r0, r3
 1216 01b0 1037     		adds	r7, r7, #16
 1217              	.LCFI12:
 1218              		.cfi_def_cfa_offset 8
 1219 01b2 BD46     		mov	sp, r7
 1220              	.LCFI13:
 1221              		.cfi_def_cfa_register 13
 1222              		@ sp needed
 1223 01b4 80BD     		pop	{r7, pc}
 1224              	.L84:
 1225 01b6 00BF     		.align	2
 1226              	.L83:
 1227 01b8 003C0240 		.word	1073888256
 1228 01bc 00380240 		.word	1073887232
 1229 01c0 00000000 		.word	AHBPrescTable
 1230 01c4 00000000 		.word	SystemCoreClock
 1231 01c8 00000000 		.word	uwTickPrio
 1232              		.cfi_endproc
 1233              	.LFE136:
 1235              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1236              		.align	1
 1237              		.global	HAL_RCC_MCOConfig
 1238              		.syntax unified
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 36


 1239              		.thumb
 1240              		.thumb_func
 1242              	HAL_RCC_MCOConfig:
 1243              	.LFB137:
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @}
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *  @brief   RCC clocks control functions
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @verbatim
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                       ##### Peripheral Control functions #####
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     frequencies.
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @endverbatim
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO1 pin(PA8) or on MCO2 pin(PC9).
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   PA8/PC9 should be configured in alternate function mode.
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1: Clock source to output on MCO1 pin(PA8).
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2: Clock source to output on MCO2 pin(PC9).
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSI: HSI clock selected as MCO1 source
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_LSE: LSE clock selected as MCO1 source
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSE: HSE clock selected as MCO1 source
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_PLLCLK: main PLL clock selected as MCO1 source
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_SYSCLK: System clock (SYSCLK) selected as MCO2 source
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLI2SCLK: PLLI2S clock selected as MCO2 source, available for a
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_I2SCLK: I2SCLK clock selected as MCO2 source, available only for
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_HSE: HSE clock selected as MCO2 source
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLCLK: main PLL clock selected as MCO2 source
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCOx prescaler.
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_1: no division applied to MCOx clock
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_2: division by 2 applied to MCOx clock
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_3: division by 3 applied to MCOx clock
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_4: division by 4 applied to MCOx clock
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_5: division by 5 applied to MCOx clock
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note  For STM32F410Rx devices to output I2SCLK clock on MCO2 you should have
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *        at last one of the SPI clocks enabled (SPI1, SPI2 or SPI5).
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1244              		.loc 1 776 1
 1245              		.cfi_startproc
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 37


 1246              		@ args = 0, pretend = 0, frame = 48
 1247              		@ frame_needed = 1, uses_anonymous_args = 0
 1248 0000 80B5     		push	{r7, lr}
 1249              	.LCFI14:
 1250              		.cfi_def_cfa_offset 8
 1251              		.cfi_offset 7, -8
 1252              		.cfi_offset 14, -4
 1253 0002 8CB0     		sub	sp, sp, #48
 1254              	.LCFI15:
 1255              		.cfi_def_cfa_offset 56
 1256 0004 00AF     		add	r7, sp, #0
 1257              	.LCFI16:
 1258              		.cfi_def_cfa_register 7
 1259 0006 F860     		str	r0, [r7, #12]
 1260 0008 B960     		str	r1, [r7, #8]
 1261 000a 7A60     		str	r2, [r7, #4]
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* RCC_MCO1 */
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if (RCC_MCOx == RCC_MCO1)
 1262              		.loc 1 782 6
 1263 000c FB68     		ldr	r3, [r7, #12]
 1264 000e 002B     		cmp	r3, #0
 1265 0010 29D1     		bne	.L86
 1266              	.LBB4:
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* MCO1 Clock Enable */
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __MCO1_CLK_ENABLE();
 1267              		.loc 1 787 5
 1268 0012 0023     		movs	r3, #0
 1269 0014 BB61     		str	r3, [r7, #24]
 1270 0016 2B4B     		ldr	r3, .L89
 1271 0018 1B6B     		ldr	r3, [r3, #48]
 1272 001a 2A4A     		ldr	r2, .L89
 1273 001c 43F00103 		orr	r3, r3, #1
 1274 0020 1363     		str	r3, [r2, #48]
 1275 0022 284B     		ldr	r3, .L89
 1276 0024 1B6B     		ldr	r3, [r3, #48]
 1277 0026 03F00103 		and	r3, r3, #1
 1278 002a BB61     		str	r3, [r7, #24]
 1279 002c BB69     		ldr	r3, [r7, #24]
 1280              	.LBE4:
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Configure the MCO1 pin in alternate function mode */
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO1_PIN;
 1281              		.loc 1 790 25
 1282 002e 4FF48073 		mov	r3, #256
 1283 0032 FB61     		str	r3, [r7, #28]
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1284              		.loc 1 791 26
 1285 0034 0223     		movs	r3, #2
 1286 0036 3B62     		str	r3, [r7, #32]
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 38


 1287              		.loc 1 792 27
 1288 0038 0323     		movs	r3, #3
 1289 003a BB62     		str	r3, [r7, #40]
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1290              		.loc 1 793 26
 1291 003c 0023     		movs	r3, #0
 1292 003e 7B62     		str	r3, [r7, #36]
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1293              		.loc 1 794 31
 1294 0040 0023     		movs	r3, #0
 1295 0042 FB62     		str	r3, [r7, #44]
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);
 1296              		.loc 1 795 5
 1297 0044 07F11C03 		add	r3, r7, #28
 1298 0048 1946     		mov	r1, r3
 1299 004a 1F48     		ldr	r0, .L89+4
 1300 004c FFF7FEFF 		bl	HAL_GPIO_Init
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Mask MCO1 and MCO1PRE[2:0] bits then Select MCO1 clock source and prescaler */
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO1 | RCC_CFGR_MCO1PRE), (RCC_MCOSource | RCC_MCODiv));
 1301              		.loc 1 798 5
 1302 0050 1C4B     		ldr	r3, .L89
 1303 0052 9B68     		ldr	r3, [r3, #8]
 1304 0054 23F0EC62 		bic	r2, r3, #123731968
 1305 0058 B968     		ldr	r1, [r7, #8]
 1306 005a 7B68     		ldr	r3, [r7, #4]
 1307 005c 0B43     		orrs	r3, r3, r1
 1308 005e 1949     		ldr	r1, .L89
 1309 0060 1343     		orrs	r3, r3, r2
 1310 0062 8B60     		str	r3, [r1, #8]
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* This RCC MCO1 enable feature is available only on STM32F410xx devices */
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #if defined(RCC_CFGR_MCO1EN)
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_MCO1_ENABLE();
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #endif /* RCC_CFGR_MCO1EN */
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #if defined(RCC_CFGR_MCO2)
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_MCO2SOURCE(RCC_MCOSource));
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* MCO2 Clock Enable */
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __MCO2_CLK_ENABLE();
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Configure the MCO2 pin in alternate function mode */
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO2_PIN;
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Mask MCO2 and MCO2PRE[2:0] bits then Select MCO2 clock source and prescaler */
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO2 | RCC_CFGR_MCO2PRE), (RCC_MCOSource | (RCC_MCODiv << 3U)))
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* This RCC MCO2 enable feature is available only on STM32F410Rx devices */
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #if defined(RCC_CFGR_MCO2EN)
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 39


 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_MCO2_ENABLE();
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #endif /* RCC_CFGR_MCO2EN */
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #endif /* RCC_CFGR_MCO2 */
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1311              		.loc 1 830 1
 1312 0064 29E0     		b	.L88
 1313              	.L86:
 1314              	.LBB5:
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1315              		.loc 1 811 5
 1316 0066 0023     		movs	r3, #0
 1317 0068 7B61     		str	r3, [r7, #20]
 1318 006a 164B     		ldr	r3, .L89
 1319 006c 1B6B     		ldr	r3, [r3, #48]
 1320 006e 154A     		ldr	r2, .L89
 1321 0070 43F00403 		orr	r3, r3, #4
 1322 0074 1363     		str	r3, [r2, #48]
 1323 0076 134B     		ldr	r3, .L89
 1324 0078 1B6B     		ldr	r3, [r3, #48]
 1325 007a 03F00403 		and	r3, r3, #4
 1326 007e 7B61     		str	r3, [r7, #20]
 1327 0080 7B69     		ldr	r3, [r7, #20]
 1328              	.LBE5:
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1329              		.loc 1 814 25
 1330 0082 4FF40073 		mov	r3, #512
 1331 0086 FB61     		str	r3, [r7, #28]
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1332              		.loc 1 815 26
 1333 0088 0223     		movs	r3, #2
 1334 008a 3B62     		str	r3, [r7, #32]
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1335              		.loc 1 816 27
 1336 008c 0323     		movs	r3, #3
 1337 008e BB62     		str	r3, [r7, #40]
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1338              		.loc 1 817 26
 1339 0090 0023     		movs	r3, #0
 1340 0092 7B62     		str	r3, [r7, #36]
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 1341              		.loc 1 818 31
 1342 0094 0023     		movs	r3, #0
 1343 0096 FB62     		str	r3, [r7, #44]
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1344              		.loc 1 819 5
 1345 0098 07F11C03 		add	r3, r7, #28
 1346 009c 1946     		mov	r1, r3
 1347 009e 0B48     		ldr	r0, .L89+8
 1348 00a0 FFF7FEFF 		bl	HAL_GPIO_Init
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1349              		.loc 1 822 5
 1350 00a4 074B     		ldr	r3, .L89
 1351 00a6 9B68     		ldr	r3, [r3, #8]
 1352 00a8 23F07842 		bic	r2, r3, #-134217728
 1353 00ac 7B68     		ldr	r3, [r7, #4]
 1354 00ae D900     		lsls	r1, r3, #3
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 40


 1355 00b0 BB68     		ldr	r3, [r7, #8]
 1356 00b2 0B43     		orrs	r3, r3, r1
 1357 00b4 0349     		ldr	r1, .L89
 1358 00b6 1343     		orrs	r3, r3, r2
 1359 00b8 8B60     		str	r3, [r1, #8]
 1360              	.L88:
 1361              		.loc 1 830 1
 1362 00ba 00BF     		nop
 1363 00bc 3037     		adds	r7, r7, #48
 1364              	.LCFI17:
 1365              		.cfi_def_cfa_offset 8
 1366 00be BD46     		mov	sp, r7
 1367              	.LCFI18:
 1368              		.cfi_def_cfa_register 13
 1369              		@ sp needed
 1370 00c0 80BD     		pop	{r7, pc}
 1371              	.L90:
 1372 00c2 00BF     		.align	2
 1373              	.L89:
 1374 00c4 00380240 		.word	1073887232
 1375 00c8 00000240 		.word	1073872896
 1376 00cc 00080240 		.word	1073874944
 1377              		.cfi_endproc
 1378              	.LFE137:
 1380              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 1381              		.align	1
 1382              		.global	HAL_RCC_EnableCSS
 1383              		.syntax unified
 1384              		.thumb
 1385              		.thumb_func
 1387              	HAL_RCC_EnableCSS:
 1388              	.LFB138:
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         the Cortex-M4 NMI (Non-Maskable Interrupt) exception vector.
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1389              		.loc 1 842 1
 1390              		.cfi_startproc
 1391              		@ args = 0, pretend = 0, frame = 0
 1392              		@ frame_needed = 1, uses_anonymous_args = 0
 1393              		@ link register save eliminated.
 1394 0000 80B4     		push	{r7}
 1395              	.LCFI19:
 1396              		.cfi_def_cfa_offset 4
 1397              		.cfi_offset 7, -4
 1398 0002 00AF     		add	r7, sp, #0
 1399              	.LCFI20:
 1400              		.cfi_def_cfa_register 7
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)ENABLE;
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 41


 1401              		.loc 1 843 3
 1402 0004 034B     		ldr	r3, .L92
 1403              		.loc 1 843 38
 1404 0006 0122     		movs	r2, #1
 1405 0008 1A60     		str	r2, [r3]
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1406              		.loc 1 844 1
 1407 000a 00BF     		nop
 1408 000c BD46     		mov	sp, r7
 1409              	.LCFI21:
 1410              		.cfi_def_cfa_register 13
 1411              		@ sp needed
 1412 000e 5DF8047B 		ldr	r7, [sp], #4
 1413              	.LCFI22:
 1414              		.cfi_restore 7
 1415              		.cfi_def_cfa_offset 0
 1416 0012 7047     		bx	lr
 1417              	.L93:
 1418              		.align	2
 1419              	.L92:
 1420 0014 4C004742 		.word	1111949388
 1421              		.cfi_endproc
 1422              	.LFE138:
 1424              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 1425              		.align	1
 1426              		.global	HAL_RCC_DisableCSS
 1427              		.syntax unified
 1428              		.thumb
 1429              		.thumb_func
 1431              	HAL_RCC_DisableCSS:
 1432              	.LFB139:
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1433              		.loc 1 851 1
 1434              		.cfi_startproc
 1435              		@ args = 0, pretend = 0, frame = 0
 1436              		@ frame_needed = 1, uses_anonymous_args = 0
 1437              		@ link register save eliminated.
 1438 0000 80B4     		push	{r7}
 1439              	.LCFI23:
 1440              		.cfi_def_cfa_offset 4
 1441              		.cfi_offset 7, -4
 1442 0002 00AF     		add	r7, sp, #0
 1443              	.LCFI24:
 1444              		.cfi_def_cfa_register 7
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)DISABLE;
 1445              		.loc 1 852 3
 1446 0004 034B     		ldr	r3, .L95
 1447              		.loc 1 852 38
 1448 0006 0022     		movs	r2, #0
 1449 0008 1A60     		str	r2, [r3]
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 42


 1450              		.loc 1 853 1
 1451 000a 00BF     		nop
 1452 000c BD46     		mov	sp, r7
 1453              	.LCFI25:
 1454              		.cfi_def_cfa_register 13
 1455              		@ sp needed
 1456 000e 5DF8047B 		ldr	r7, [sp], #4
 1457              	.LCFI26:
 1458              		.cfi_restore 7
 1459              		.cfi_def_cfa_offset 0
 1460 0012 7047     		bx	lr
 1461              	.L96:
 1462              		.align	2
 1463              	.L95:
 1464 0014 4C004742 		.word	1111949388
 1465              		.cfi_endproc
 1466              	.LFE139:
 1468              		.global	__aeabi_uldivmod
 1469              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1470              		.align	1
 1471              		.weak	HAL_RCC_GetSysClockFreq
 1472              		.syntax unified
 1473              		.thumb
 1474              		.thumb_func
 1476              	HAL_RCC_GetSysClockFreq:
 1477              	.LFB140:
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         constant and the selected clock source:
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns values based on HSE_VALUE(**)
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns values based on HSE_VALUE(**)
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *           or HSI_VALUE(*) multiplied/divided by the PLL factors.
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f4xx_hal_conf.h file (default value
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *               16 MHz) but the real value may vary depending on the variations
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *               in voltage and temperature.
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f4xx_hal_conf.h file (default value
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                25 MHz), user has to ensure that HSE_VALUE is same as the real
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                have wrong result.
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         value for HSE crystal.
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         baudrate for the communication peripherals or configure other parameters.
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval SYSCLK frequency
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 43


 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak uint32_t HAL_RCC_GetSysClockFreq(void)
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1478              		.loc 1 886 1
 1479              		.cfi_startproc
 1480              		@ args = 0, pretend = 0, frame = 64
 1481              		@ frame_needed = 1, uses_anonymous_args = 0
 1482 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 1483              	.LCFI27:
 1484              		.cfi_def_cfa_offset 32
 1485              		.cfi_offset 4, -32
 1486              		.cfi_offset 5, -28
 1487              		.cfi_offset 7, -24
 1488              		.cfi_offset 8, -20
 1489              		.cfi_offset 9, -16
 1490              		.cfi_offset 10, -12
 1491              		.cfi_offset 11, -8
 1492              		.cfi_offset 14, -4
 1493 0004 90B0     		sub	sp, sp, #64
 1494              	.LCFI28:
 1495              		.cfi_def_cfa_offset 96
 1496 0006 00AF     		add	r7, sp, #0
 1497              	.LCFI29:
 1498              		.cfi_def_cfa_register 7
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t pllm = 0U;
 1499              		.loc 1 887 12
 1500 0008 0023     		movs	r3, #0
 1501 000a 7B63     		str	r3, [r7, #52]
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t pllvco = 0U;
 1502              		.loc 1 888 12
 1503 000c 0023     		movs	r3, #0
 1504 000e FB63     		str	r3, [r7, #60]
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t pllp = 0U;
 1505              		.loc 1 889 12
 1506 0010 0023     		movs	r3, #0
 1507 0012 3B63     		str	r3, [r7, #48]
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
 1508              		.loc 1 890 12
 1509 0014 0023     		movs	r3, #0
 1510 0016 BB63     		str	r3, [r7, #56]
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 1511              		.loc 1 893 14
 1512 0018 594B     		ldr	r3, .L106
 1513 001a 9B68     		ldr	r3, [r3, #8]
 1514              		.loc 1 893 21
 1515 001c 03F00C03 		and	r3, r3, #12
 1516              		.loc 1 893 3
 1517 0020 082B     		cmp	r3, #8
 1518 0022 0DD0     		beq	.L98
 1519 0024 082B     		cmp	r3, #8
 1520 0026 00F2A180 		bhi	.L99
 1521 002a 002B     		cmp	r3, #0
 1522 002c 02D0     		beq	.L100
 1523 002e 042B     		cmp	r3, #4
 1524 0030 03D0     		beq	.L101
 1525 0032 9BE0     		b	.L99
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 44


 1526              	.L100:
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 1527              		.loc 1 897 20
 1528 0034 534B     		ldr	r3, .L106+4
 1529 0036 BB63     		str	r3, [r7, #56]
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       break;
 1530              		.loc 1 898 7
 1531 0038 9BE0     		b	.L102
 1532              	.L101:
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
 1533              		.loc 1 902 20
 1534 003a 534B     		ldr	r3, .L106+8
 1535 003c BB63     		str	r3, [r7, #56]
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       break;
 1536              		.loc 1 903 7
 1537 003e 98E0     		b	.L102
 1538              	.L98:
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       SYSCLK = PLL_VCO / PLLP */
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 1539              		.loc 1 909 17
 1540 0040 4F4B     		ldr	r3, .L106
 1541 0042 5B68     		ldr	r3, [r3, #4]
 1542              		.loc 1 909 12
 1543 0044 03F03F03 		and	r3, r3, #63
 1544 0048 7B63     		str	r3, [r7, #52]
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 1545              		.loc 1 910 11
 1546 004a 4D4B     		ldr	r3, .L106
 1547 004c 5B68     		ldr	r3, [r3, #4]
 1548 004e 03F48003 		and	r3, r3, #4194304
 1549              		.loc 1 910 10
 1550 0052 002B     		cmp	r3, #0
 1551 0054 28D0     		beq	.L103
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* HSE used as PLL clock source */
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) 
 1552              		.loc 1 913 70
 1553 0056 4A4B     		ldr	r3, .L106
 1554 0058 5B68     		ldr	r3, [r3, #4]
 1555              		.loc 1 913 100
 1556 005a 9B09     		lsrs	r3, r3, #6
 1557              		.loc 1 913 55
 1558 005c 0022     		movs	r2, #0
 1559 005e 3B62     		str	r3, [r7, #32]
 1560 0060 7A62     		str	r2, [r7, #36]
 1561 0062 3B6A     		ldr	r3, [r7, #32]
 1562 0064 C3F30800 		ubfx	r0, r3, #0, #9
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 45


 1563 0068 0021     		movs	r1, #0
 1564              		.loc 1 913 52
 1565 006a 474B     		ldr	r3, .L106+8
 1566 006c 03FB01F2 		mul	r2, r3, r1
 1567 0070 0023     		movs	r3, #0
 1568 0072 00FB03F3 		mul	r3, r0, r3
 1569 0076 1344     		add	r3, r3, r2
 1570 0078 434A     		ldr	r2, .L106+8
 1571 007a A0FB0212 		umull	r1, r2, r0, r2
 1572 007e FA62     		str	r2, [r7, #44]
 1573 0080 0A46     		mov	r2, r1
 1574 0082 BA62     		str	r2, [r7, #40]
 1575 0084 FA6A     		ldr	r2, [r7, #44]
 1576 0086 1344     		add	r3, r3, r2
 1577 0088 FB62     		str	r3, [r7, #44]
 1578              		.loc 1 913 130
 1579 008a 7B6B     		ldr	r3, [r7, #52]
 1580 008c 0022     		movs	r2, #0
 1581 008e BB61     		str	r3, [r7, #24]
 1582 0090 FA61     		str	r2, [r7, #28]
 1583              		.loc 1 913 128
 1584 0092 D7E90623 		ldrd	r2, [r7, #24]
 1585 0096 D7E90A01 		ldrd	r0, [r7, #40]
 1586 009a FFF7FEFF 		bl	__aeabi_uldivmod
 1587 009e 0246     		mov	r2, r0
 1588 00a0 0B46     		mov	r3, r1
 1589              		.loc 1 913 16
 1590 00a2 1346     		mov	r3, r2
 1591 00a4 FB63     		str	r3, [r7, #60]
 1592 00a6 53E0     		b	.L104
 1593              	.L103:
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* HSI used as PLL clock source */
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) 
 1594              		.loc 1 918 70
 1595 00a8 354B     		ldr	r3, .L106
 1596 00aa 5B68     		ldr	r3, [r3, #4]
 1597              		.loc 1 918 100
 1598 00ac 9B09     		lsrs	r3, r3, #6
 1599              		.loc 1 918 55
 1600 00ae 0022     		movs	r2, #0
 1601 00b0 3B61     		str	r3, [r7, #16]
 1602 00b2 7A61     		str	r2, [r7, #20]
 1603 00b4 3B69     		ldr	r3, [r7, #16]
 1604 00b6 C3F3080A 		ubfx	r10, r3, #0, #9
 1605 00ba 4FF0000B 		mov	fp, #0
 1606              		.loc 1 918 52
 1607 00be 5246     		mov	r2, r10
 1608 00c0 5B46     		mov	r3, fp
 1609 00c2 4FF00000 		mov	r0, #0
 1610 00c6 4FF00001 		mov	r1, #0
 1611 00ca 5901     		lsls	r1, r3, #5
 1612 00cc 41EAD261 		orr	r1, r1, r2, lsr #27
 1613 00d0 5001     		lsls	r0, r2, #5
 1614 00d2 0246     		mov	r2, r0
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 46


 1615 00d4 0B46     		mov	r3, r1
 1616 00d6 B2EB0A08 		subs	r8, r2, r10
 1617 00da 63EB0B09 		sbc	r9, r3, fp
 1618 00de 4FF00002 		mov	r2, #0
 1619 00e2 4FF00003 		mov	r3, #0
 1620 00e6 4FEA8913 		lsl	r3, r9, #6
 1621 00ea 43EA9863 		orr	r3, r3, r8, lsr #26
 1622 00ee 4FEA8812 		lsl	r2, r8, #6
 1623 00f2 B2EB0804 		subs	r4, r2, r8
 1624 00f6 63EB0905 		sbc	r5, r3, r9
 1625 00fa 4FF00002 		mov	r2, #0
 1626 00fe 4FF00003 		mov	r3, #0
 1627 0102 EB00     		lsls	r3, r5, #3
 1628 0104 43EA5473 		orr	r3, r3, r4, lsr #29
 1629 0108 E200     		lsls	r2, r4, #3
 1630 010a 1446     		mov	r4, r2
 1631 010c 1D46     		mov	r5, r3
 1632 010e 14EB0A03 		adds	r3, r4, r10
 1633 0112 3B60     		str	r3, [r7]
 1634 0114 45EB0B03 		adc	r3, r5, fp
 1635 0118 7B60     		str	r3, [r7, #4]
 1636 011a 4FF00002 		mov	r2, #0
 1637 011e 4FF00003 		mov	r3, #0
 1638 0122 D7E90045 		ldrd	r4, [r7]
 1639 0126 2946     		mov	r1, r5
 1640 0128 8B02     		lsls	r3, r1, #10
 1641 012a 2146     		mov	r1, r4
 1642 012c 43EA9153 		orr	r3, r3, r1, lsr #22
 1643 0130 2146     		mov	r1, r4
 1644 0132 8A02     		lsls	r2, r1, #10
 1645 0134 1046     		mov	r0, r2
 1646 0136 1946     		mov	r1, r3
 1647              		.loc 1 918 130
 1648 0138 7B6B     		ldr	r3, [r7, #52]
 1649 013a 0022     		movs	r2, #0
 1650 013c BB60     		str	r3, [r7, #8]
 1651 013e FA60     		str	r2, [r7, #12]
 1652              		.loc 1 918 128
 1653 0140 D7E90223 		ldrd	r2, [r7, #8]
 1654 0144 FFF7FEFF 		bl	__aeabi_uldivmod
 1655 0148 0246     		mov	r2, r0
 1656 014a 0B46     		mov	r3, r1
 1657              		.loc 1 918 16
 1658 014c 1346     		mov	r3, r2
 1659 014e FB63     		str	r3, [r7, #60]
 1660              	.L104:
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) * 2U);
 1661              		.loc 1 920 21
 1662 0150 0B4B     		ldr	r3, .L106
 1663 0152 5B68     		ldr	r3, [r3, #4]
 1664              		.loc 1 920 51
 1665 0154 1B0C     		lsrs	r3, r3, #16
 1666 0156 03F00303 		and	r3, r3, #3
 1667              		.loc 1 920 76
 1668 015a 0133     		adds	r3, r3, #1
 1669              		.loc 1 920 12
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 47


 1670 015c 5B00     		lsls	r3, r3, #1
 1671 015e 3B63     		str	r3, [r7, #48]
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = pllvco / pllp;
 1672              		.loc 1 922 20
 1673 0160 FA6B     		ldr	r2, [r7, #60]
 1674 0162 3B6B     		ldr	r3, [r7, #48]
 1675 0164 B2FBF3F3 		udiv	r3, r2, r3
 1676 0168 BB63     		str	r3, [r7, #56]
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       break;
 1677              		.loc 1 923 7
 1678 016a 02E0     		b	.L102
 1679              	.L99:
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     default:
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 1680              		.loc 1 927 20
 1681 016c 054B     		ldr	r3, .L106+4
 1682 016e BB63     		str	r3, [r7, #56]
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       break;
 1683              		.loc 1 928 7
 1684 0170 00BF     		nop
 1685              	.L102:
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return sysclockfreq;
 1686              		.loc 1 931 10
 1687 0172 BB6B     		ldr	r3, [r7, #56]
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1688              		.loc 1 932 1
 1689 0174 1846     		mov	r0, r3
 1690 0176 4037     		adds	r7, r7, #64
 1691              	.LCFI30:
 1692              		.cfi_def_cfa_offset 32
 1693 0178 BD46     		mov	sp, r7
 1694              	.LCFI31:
 1695              		.cfi_def_cfa_register 13
 1696              		@ sp needed
 1697 017a BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 1698              	.L107:
 1699 017e 00BF     		.align	2
 1700              	.L106:
 1701 0180 00380240 		.word	1073887232
 1702 0184 0024F400 		.word	16000000
 1703 0188 40787D01 		.word	25000000
 1704              		.cfi_endproc
 1705              	.LFE140:
 1707              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 1708              		.align	1
 1709              		.global	HAL_RCC_GetHCLKFreq
 1710              		.syntax unified
 1711              		.thumb
 1712              		.thumb_func
 1714              	HAL_RCC_GetHCLKFreq:
 1715              	.LFB141:
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 48


 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         and updated within this function
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval HCLK frequency
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1716              		.loc 1 944 1
 1717              		.cfi_startproc
 1718              		@ args = 0, pretend = 0, frame = 0
 1719              		@ frame_needed = 1, uses_anonymous_args = 0
 1720              		@ link register save eliminated.
 1721 0000 80B4     		push	{r7}
 1722              	.LCFI32:
 1723              		.cfi_def_cfa_offset 4
 1724              		.cfi_offset 7, -4
 1725 0002 00AF     		add	r7, sp, #0
 1726              	.LCFI33:
 1727              		.cfi_def_cfa_register 7
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return SystemCoreClock;
 1728              		.loc 1 945 10
 1729 0004 034B     		ldr	r3, .L110
 1730 0006 1B68     		ldr	r3, [r3]
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1731              		.loc 1 946 1
 1732 0008 1846     		mov	r0, r3
 1733 000a BD46     		mov	sp, r7
 1734              	.LCFI34:
 1735              		.cfi_def_cfa_register 13
 1736              		@ sp needed
 1737 000c 5DF8047B 		ldr	r7, [sp], #4
 1738              	.LCFI35:
 1739              		.cfi_restore 7
 1740              		.cfi_def_cfa_offset 0
 1741 0010 7047     		bx	lr
 1742              	.L111:
 1743 0012 00BF     		.align	2
 1744              	.L110:
 1745 0014 00000000 		.word	SystemCoreClock
 1746              		.cfi_endproc
 1747              	.LFE141:
 1749              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 1750              		.align	1
 1751              		.global	HAL_RCC_GetPCLK1Freq
 1752              		.syntax unified
 1753              		.thumb
 1754              		.thumb_func
 1756              	HAL_RCC_GetPCLK1Freq:
 1757              	.LFB142:
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 49


 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval PCLK1 frequency
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1758              		.loc 1 955 1
 1759              		.cfi_startproc
 1760              		@ args = 0, pretend = 0, frame = 0
 1761              		@ frame_needed = 1, uses_anonymous_args = 0
 1762 0000 80B5     		push	{r7, lr}
 1763              	.LCFI36:
 1764              		.cfi_def_cfa_offset 8
 1765              		.cfi_offset 7, -8
 1766              		.cfi_offset 14, -4
 1767 0002 00AF     		add	r7, sp, #0
 1768              	.LCFI37:
 1769              		.cfi_def_cfa_register 7
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos
 1770              		.loc 1 957 11
 1771 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1772 0008 0246     		mov	r2, r0
 1773              		.loc 1 957 54 discriminator 1
 1774 000a 054B     		ldr	r3, .L114
 1775 000c 9B68     		ldr	r3, [r3, #8]
 1776              		.loc 1 957 79 discriminator 1
 1777 000e 9B0A     		lsrs	r3, r3, #10
 1778 0010 03F00703 		and	r3, r3, #7
 1779              		.loc 1 957 49 discriminator 1
 1780 0014 0349     		ldr	r1, .L114+4
 1781 0016 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1782              		.loc 1 957 33 discriminator 1
 1783 0018 22FA03F3 		lsr	r3, r2, r3
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1784              		.loc 1 958 1
 1785 001c 1846     		mov	r0, r3
 1786 001e 80BD     		pop	{r7, pc}
 1787              	.L115:
 1788              		.align	2
 1789              	.L114:
 1790 0020 00380240 		.word	1073887232
 1791 0024 00000000 		.word	APBPrescTable
 1792              		.cfi_endproc
 1793              	.LFE142:
 1795              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 1796              		.align	1
 1797              		.global	HAL_RCC_GetPCLK2Freq
 1798              		.syntax unified
 1799              		.thumb
 1800              		.thumb_func
 1802              	HAL_RCC_GetPCLK2Freq:
 1803              	.LFB143:
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the PCLK2 frequency
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 50


 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval PCLK2 frequency
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1804              		.loc 1 967 1
 1805              		.cfi_startproc
 1806              		@ args = 0, pretend = 0, frame = 0
 1807              		@ frame_needed = 1, uses_anonymous_args = 0
 1808 0000 80B5     		push	{r7, lr}
 1809              	.LCFI38:
 1810              		.cfi_def_cfa_offset 8
 1811              		.cfi_offset 7, -8
 1812              		.cfi_offset 14, -4
 1813 0002 00AF     		add	r7, sp, #0
 1814              	.LCFI39:
 1815              		.cfi_def_cfa_register 7
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos
 1816              		.loc 1 969 11
 1817 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1818 0008 0246     		mov	r2, r0
 1819              		.loc 1 969 54 discriminator 1
 1820 000a 054B     		ldr	r3, .L118
 1821 000c 9B68     		ldr	r3, [r3, #8]
 1822              		.loc 1 969 79 discriminator 1
 1823 000e 5B0B     		lsrs	r3, r3, #13
 1824 0010 03F00703 		and	r3, r3, #7
 1825              		.loc 1 969 49 discriminator 1
 1826 0014 0349     		ldr	r1, .L118+4
 1827 0016 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1828              		.loc 1 969 33 discriminator 1
 1829 0018 22FA03F3 		lsr	r3, r2, r3
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1830              		.loc 1 970 1
 1831 001c 1846     		mov	r0, r3
 1832 001e 80BD     		pop	{r7, pc}
 1833              	.L119:
 1834              		.align	2
 1835              	.L118:
 1836 0020 00380240 		.word	1073887232
 1837 0024 00000000 		.word	APBPrescTable
 1838              		.cfi_endproc
 1839              	.LFE143:
 1841              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 1842              		.align	1
 1843              		.weak	HAL_RCC_GetOscConfig
 1844              		.syntax unified
 1845              		.thumb
 1846              		.thumb_func
 1848              	HAL_RCC_GetOscConfig:
 1849              	.LFB144:
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * RCC configuration registers.
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * will be configured.
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 51


 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1850              		.loc 1 980 1
 1851              		.cfi_startproc
 1852              		@ args = 0, pretend = 0, frame = 8
 1853              		@ frame_needed = 1, uses_anonymous_args = 0
 1854              		@ link register save eliminated.
 1855 0000 80B4     		push	{r7}
 1856              	.LCFI40:
 1857              		.cfi_def_cfa_offset 4
 1858              		.cfi_offset 7, -4
 1859 0002 83B0     		sub	sp, sp, #12
 1860              	.LCFI41:
 1861              		.cfi_def_cfa_offset 16
 1862 0004 00AF     		add	r7, sp, #0
 1863              	.LCFI42:
 1864              		.cfi_def_cfa_register 7
 1865 0006 7860     		str	r0, [r7, #4]
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI | RCC_OSCILLA
 1866              		.loc 1 982 37
 1867 0008 7B68     		ldr	r3, [r7, #4]
 1868 000a 0F22     		movs	r2, #15
 1869 000c 1A60     		str	r2, [r3]
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if ((RCC->CR & RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 1870              		.loc 1 985 11
 1871 000e 454B     		ldr	r3, .L133
 1872 0010 1B68     		ldr	r3, [r3]
 1873              		.loc 1 985 16
 1874 0012 03F48023 		and	r3, r3, #262144
 1875              		.loc 1 985 6
 1876 0016 B3F5802F 		cmp	r3, #262144
 1877 001a 04D1     		bne	.L121
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 1878              		.loc 1 987 33
 1879 001c 7B68     		ldr	r3, [r7, #4]
 1880 001e 4FF4A022 		mov	r2, #327680
 1881 0022 5A60     		str	r2, [r3, #4]
 1882 0024 0EE0     		b	.L122
 1883              	.L121:
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else if ((RCC->CR & RCC_CR_HSEON) == RCC_CR_HSEON)
 1884              		.loc 1 989 16
 1885 0026 3F4B     		ldr	r3, .L133
 1886 0028 1B68     		ldr	r3, [r3]
 1887              		.loc 1 989 21
 1888 002a 03F48033 		and	r3, r3, #65536
 1889              		.loc 1 989 11
 1890 002e B3F5803F 		cmp	r3, #65536
 1891 0032 04D1     		bne	.L123
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 52


 1892              		.loc 1 991 33
 1893 0034 7B68     		ldr	r3, [r7, #4]
 1894 0036 4FF48032 		mov	r2, #65536
 1895 003a 5A60     		str	r2, [r3, #4]
 1896 003c 02E0     		b	.L122
 1897              	.L123:
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 1898              		.loc 1 995 33
 1899 003e 7B68     		ldr	r3, [r7, #4]
 1900 0040 0022     		movs	r2, #0
 1901 0042 5A60     		str	r2, [r3, #4]
 1902              	.L122:
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if ((RCC->CR & RCC_CR_HSION) == RCC_CR_HSION)
 1903              		.loc 1 999 11
 1904 0044 374B     		ldr	r3, .L133
 1905 0046 1B68     		ldr	r3, [r3]
 1906              		.loc 1 999 16
 1907 0048 03F00103 		and	r3, r3, #1
 1908              		.loc 1 999 6
 1909 004c 012B     		cmp	r3, #1
 1910 004e 03D1     		bne	.L124
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 1911              		.loc 1 1001 33
 1912 0050 7B68     		ldr	r3, [r7, #4]
 1913 0052 0122     		movs	r2, #1
 1914 0054 DA60     		str	r2, [r3, #12]
 1915 0056 02E0     		b	.L125
 1916              	.L124:
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 1917              		.loc 1 1005 33
 1918 0058 7B68     		ldr	r3, [r7, #4]
 1919 005a 0022     		movs	r2, #0
 1920 005c DA60     		str	r2, [r3, #12]
 1921              	.L125:
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR & RCC_CR_HSITRIM) >> RCC_CR_HSITRIM_
 1922              		.loc 1 1008 59
 1923 005e 314B     		ldr	r3, .L133
 1924 0060 1B68     		ldr	r3, [r3]
 1925              		.loc 1 1008 44
 1926 0062 DB08     		lsrs	r3, r3, #3
 1927 0064 03F01F02 		and	r2, r3, #31
 1928              		.loc 1 1008 42
 1929 0068 7B68     		ldr	r3, [r7, #4]
 1930 006a 1A61     		str	r2, [r3, #16]
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 53


1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if ((RCC->BDCR & RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 1931              		.loc 1 1011 11
 1932 006c 2D4B     		ldr	r3, .L133
 1933 006e 1B6F     		ldr	r3, [r3, #112]
 1934              		.loc 1 1011 18
 1935 0070 03F00403 		and	r3, r3, #4
 1936              		.loc 1 1011 6
 1937 0074 042B     		cmp	r3, #4
 1938 0076 03D1     		bne	.L126
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 1939              		.loc 1 1013 33
 1940 0078 7B68     		ldr	r3, [r7, #4]
 1941 007a 0522     		movs	r2, #5
 1942 007c 9A60     		str	r2, [r3, #8]
 1943 007e 0CE0     		b	.L127
 1944              	.L126:
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else if ((RCC->BDCR & RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
 1945              		.loc 1 1015 16
 1946 0080 284B     		ldr	r3, .L133
 1947 0082 1B6F     		ldr	r3, [r3, #112]
 1948              		.loc 1 1015 23
 1949 0084 03F00103 		and	r3, r3, #1
 1950              		.loc 1 1015 11
 1951 0088 012B     		cmp	r3, #1
 1952 008a 03D1     		bne	.L128
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
 1953              		.loc 1 1017 33
 1954 008c 7B68     		ldr	r3, [r7, #4]
 1955 008e 0122     		movs	r2, #1
 1956 0090 9A60     		str	r2, [r3, #8]
 1957 0092 02E0     		b	.L127
 1958              	.L128:
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 1959              		.loc 1 1021 33
 1960 0094 7B68     		ldr	r3, [r7, #4]
 1961 0096 0022     		movs	r2, #0
 1962 0098 9A60     		str	r2, [r3, #8]
 1963              	.L127:
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if ((RCC->CSR & RCC_CSR_LSION) == RCC_CSR_LSION)
 1964              		.loc 1 1025 11
 1965 009a 224B     		ldr	r3, .L133
 1966 009c 5B6F     		ldr	r3, [r3, #116]
 1967              		.loc 1 1025 17
 1968 009e 03F00103 		and	r3, r3, #1
 1969              		.loc 1 1025 6
 1970 00a2 012B     		cmp	r3, #1
 1971 00a4 03D1     		bne	.L129
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 54


1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 1972              		.loc 1 1027 33
 1973 00a6 7B68     		ldr	r3, [r7, #4]
 1974 00a8 0122     		movs	r2, #1
 1975 00aa 5A61     		str	r2, [r3, #20]
 1976 00ac 02E0     		b	.L130
 1977              	.L129:
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 1978              		.loc 1 1031 33
 1979 00ae 7B68     		ldr	r3, [r7, #4]
 1980 00b0 0022     		movs	r2, #0
 1981 00b2 5A61     		str	r2, [r3, #20]
 1982              	.L130:
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if ((RCC->CR & RCC_CR_PLLON) == RCC_CR_PLLON)
 1983              		.loc 1 1035 11
 1984 00b4 1B4B     		ldr	r3, .L133
 1985 00b6 1B68     		ldr	r3, [r3]
 1986              		.loc 1 1035 16
 1987 00b8 03F08073 		and	r3, r3, #16777216
 1988              		.loc 1 1035 6
 1989 00bc B3F1807F 		cmp	r3, #16777216
 1990 00c0 03D1     		bne	.L131
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 1991              		.loc 1 1037 37
 1992 00c2 7B68     		ldr	r3, [r7, #4]
 1993 00c4 0222     		movs	r2, #2
 1994 00c6 9A61     		str	r2, [r3, #24]
 1995 00c8 02E0     		b	.L132
 1996              	.L131:
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 1997              		.loc 1 1041 37
 1998 00ca 7B68     		ldr	r3, [r7, #4]
 1999 00cc 0122     		movs	r2, #1
 2000 00ce 9A61     		str	r2, [r3, #24]
 2001              	.L132:
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 2002              		.loc 1 1043 52
 2003 00d0 144B     		ldr	r3, .L133
 2004 00d2 5B68     		ldr	r3, [r3, #4]
 2005              		.loc 1 1043 38
 2006 00d4 03F48002 		and	r2, r3, #4194304
 2007              		.loc 1 1043 36
 2008 00d8 7B68     		ldr	r3, [r7, #4]
 2009 00da DA61     		str	r2, [r3, #28]
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLM = (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM);
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 55


 2010              		.loc 1 1044 47
 2011 00dc 114B     		ldr	r3, .L133
 2012 00de 5B68     		ldr	r3, [r3, #4]
 2013              		.loc 1 1044 33
 2014 00e0 03F03F02 		and	r2, r3, #63
 2015              		.loc 1 1044 31
 2016 00e4 7B68     		ldr	r3, [r7, #4]
 2017 00e6 1A62     		str	r2, [r3, #32]
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLN = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Po
 2018              		.loc 1 1045 48
 2019 00e8 0E4B     		ldr	r3, .L133
 2020 00ea 5B68     		ldr	r3, [r3, #4]
 2021              		.loc 1 1045 33
 2022 00ec 9B09     		lsrs	r3, r3, #6
 2023 00ee C3F30802 		ubfx	r2, r3, #0, #9
 2024              		.loc 1 1045 31
 2025 00f2 7B68     		ldr	r3, [r7, #4]
 2026 00f4 5A62     		str	r2, [r3, #36]
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLP = (uint32_t)((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) + RCC_PLLCFGR_PLLP_0
 2027              		.loc 1 1046 50
 2028 00f6 0B4B     		ldr	r3, .L133
 2029 00f8 5B68     		ldr	r3, [r3, #4]
 2030              		.loc 1 1046 60
 2031 00fa 03F44033 		and	r3, r3, #196608
 2032              		.loc 1 1046 80
 2033 00fe 03F58033 		add	r3, r3, #65536
 2034              		.loc 1 1046 102
 2035 0102 5B00     		lsls	r3, r3, #1
 2036              		.loc 1 1046 33
 2037 0104 1A0C     		lsrs	r2, r3, #16
 2038              		.loc 1 1046 31
 2039 0106 7B68     		ldr	r3, [r7, #4]
 2040 0108 9A62     		str	r2, [r3, #40]
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLQ = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLQ) >> RCC_PLLCFGR_PLLQ_Po
 2041              		.loc 1 1047 48
 2042 010a 064B     		ldr	r3, .L133
 2043 010c 5B68     		ldr	r3, [r3, #4]
 2044              		.loc 1 1047 33
 2045 010e 1B0E     		lsrs	r3, r3, #24
 2046 0110 03F00F02 		and	r2, r3, #15
 2047              		.loc 1 1047 31
 2048 0114 7B68     		ldr	r3, [r7, #4]
 2049 0116 DA62     		str	r2, [r3, #44]
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2050              		.loc 1 1048 1
 2051 0118 00BF     		nop
 2052 011a 0C37     		adds	r7, r7, #12
 2053              	.LCFI43:
 2054              		.cfi_def_cfa_offset 4
 2055 011c BD46     		mov	sp, r7
 2056              	.LCFI44:
 2057              		.cfi_def_cfa_register 13
 2058              		@ sp needed
 2059 011e 5DF8047B 		ldr	r7, [sp], #4
 2060              	.LCFI45:
 2061              		.cfi_restore 7
 2062              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 56


 2063 0122 7047     		bx	lr
 2064              	.L134:
 2065              		.align	2
 2066              	.L133:
 2067 0124 00380240 		.word	1073887232
 2068              		.cfi_endproc
 2069              	.LFE144:
 2071              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 2072              		.align	1
 2073              		.global	HAL_RCC_GetClockConfig
 2074              		.syntax unified
 2075              		.thumb
 2076              		.thumb_func
 2078              	HAL_RCC_GetClockConfig:
 2079              	.LFB145:
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Configures the RCC_ClkInitStruct according to the internal
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * RCC configuration registers.
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * will be configured.
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 2080              		.loc 1 1059 1
 2081              		.cfi_startproc
 2082              		@ args = 0, pretend = 0, frame = 8
 2083              		@ frame_needed = 1, uses_anonymous_args = 0
 2084              		@ link register save eliminated.
 2085 0000 80B4     		push	{r7}
 2086              	.LCFI46:
 2087              		.cfi_def_cfa_offset 4
 2088              		.cfi_offset 7, -4
 2089 0002 83B0     		sub	sp, sp, #12
 2090              	.LCFI47:
 2091              		.cfi_def_cfa_offset 16
 2092 0004 00AF     		add	r7, sp, #0
 2093              	.LCFI48:
 2094              		.cfi_def_cfa_register 7
 2095 0006 7860     		str	r0, [r7, #4]
 2096 0008 3960     		str	r1, [r7]
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 2097              		.loc 1 1061 32
 2098 000a 7B68     		ldr	r3, [r7, #4]
 2099 000c 0F22     		movs	r2, #15
 2100 000e 1A60     		str	r2, [r3]
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 2101              		.loc 1 1064 51
 2102 0010 124B     		ldr	r3, .L136
 2103 0012 9B68     		ldr	r3, [r3, #8]
 2104              		.loc 1 1064 37
 2105 0014 03F00302 		and	r2, r3, #3
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 57


 2106              		.loc 1 1064 35
 2107 0018 7B68     		ldr	r3, [r7, #4]
 2108 001a 5A60     		str	r2, [r3, #4]
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 2109              		.loc 1 1067 52
 2110 001c 0F4B     		ldr	r3, .L136
 2111 001e 9B68     		ldr	r3, [r3, #8]
 2112              		.loc 1 1067 38
 2113 0020 03F0F002 		and	r2, r3, #240
 2114              		.loc 1 1067 36
 2115 0024 7B68     		ldr	r3, [r7, #4]
 2116 0026 9A60     		str	r2, [r3, #8]
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 2117              		.loc 1 1070 53
 2118 0028 0C4B     		ldr	r3, .L136
 2119 002a 9B68     		ldr	r3, [r3, #8]
 2120              		.loc 1 1070 39
 2121 002c 03F4E052 		and	r2, r3, #7168
 2122              		.loc 1 1070 37
 2123 0030 7B68     		ldr	r3, [r7, #4]
 2124 0032 DA60     		str	r2, [r3, #12]
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 2125              		.loc 1 1073 54
 2126 0034 094B     		ldr	r3, .L136
 2127 0036 9B68     		ldr	r3, [r3, #8]
 2128              		.loc 1 1073 39
 2129 0038 DB08     		lsrs	r3, r3, #3
 2130 003a 03F4E052 		and	r2, r3, #7168
 2131              		.loc 1 1073 37
 2132 003e 7B68     		ldr	r3, [r7, #4]
 2133 0040 1A61     		str	r2, [r3, #16]
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 2134              		.loc 1 1076 32
 2135 0042 074B     		ldr	r3, .L136+4
 2136 0044 1B68     		ldr	r3, [r3]
 2137              		.loc 1 1076 16
 2138 0046 03F00F02 		and	r2, r3, #15
 2139              		.loc 1 1076 14
 2140 004a 3B68     		ldr	r3, [r7]
 2141 004c 1A60     		str	r2, [r3]
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2142              		.loc 1 1077 1
 2143 004e 00BF     		nop
 2144 0050 0C37     		adds	r7, r7, #12
 2145              	.LCFI49:
 2146              		.cfi_def_cfa_offset 4
 2147 0052 BD46     		mov	sp, r7
 2148              	.LCFI50:
 2149              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 58


 2150              		@ sp needed
 2151 0054 5DF8047B 		ldr	r7, [sp], #4
 2152              	.LCFI51:
 2153              		.cfi_restore 7
 2154              		.cfi_def_cfa_offset 0
 2155 0058 7047     		bx	lr
 2156              	.L137:
 2157 005a 00BF     		.align	2
 2158              	.L136:
 2159 005c 00380240 		.word	1073887232
 2160 0060 003C0240 		.word	1073888256
 2161              		.cfi_endproc
 2162              	.LFE145:
 2164              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 2165              		.align	1
 2166              		.global	HAL_RCC_NMI_IRQHandler
 2167              		.syntax unified
 2168              		.thumb
 2169              		.thumb_func
 2171              	HAL_RCC_NMI_IRQHandler:
 2172              	.LFB146:
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 2173              		.loc 1 1085 1
 2174              		.cfi_startproc
 2175              		@ args = 0, pretend = 0, frame = 0
 2176              		@ frame_needed = 1, uses_anonymous_args = 0
 2177 0000 80B5     		push	{r7, lr}
 2178              	.LCFI52:
 2179              		.cfi_def_cfa_offset 8
 2180              		.cfi_offset 7, -8
 2181              		.cfi_offset 14, -4
 2182 0002 00AF     		add	r7, sp, #0
 2183              	.LCFI53:
 2184              		.cfi_def_cfa_register 7
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if (__HAL_RCC_GET_IT(RCC_IT_CSS))
 2185              		.loc 1 1087 7
 2186 0004 064B     		ldr	r3, .L141
 2187 0006 DB68     		ldr	r3, [r3, #12]
 2188 0008 03F08003 		and	r3, r3, #128
 2189              		.loc 1 1087 6
 2190 000c 802B     		cmp	r3, #128
 2191 000e 04D1     		bne	.L140
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
 2192              		.loc 1 1090 5
 2193 0010 FFF7FEFF 		bl	HAL_RCC_CSSCallback
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 59


1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
 2194              		.loc 1 1093 5
 2195 0014 034B     		ldr	r3, .L141+4
 2196 0016 8022     		movs	r2, #128
 2197 0018 1A70     		strb	r2, [r3]
 2198              	.L140:
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2199              		.loc 1 1095 1
 2200 001a 00BF     		nop
 2201 001c 80BD     		pop	{r7, pc}
 2202              	.L142:
 2203 001e 00BF     		.align	2
 2204              	.L141:
 2205 0020 00380240 		.word	1073887232
 2206 0024 0E380240 		.word	1073887246
 2207              		.cfi_endproc
 2208              	.LFE146:
 2210              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2211              		.align	1
 2212              		.weak	HAL_RCC_CSSCallback
 2213              		.syntax unified
 2214              		.thumb
 2215              		.thumb_func
 2217              	HAL_RCC_CSSCallback:
 2218              	.LFB147:
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 2219              		.loc 1 1102 1
 2220              		.cfi_startproc
 2221              		@ args = 0, pretend = 0, frame = 0
 2222              		@ frame_needed = 1, uses_anonymous_args = 0
 2223              		@ link register save eliminated.
 2224 0000 80B4     		push	{r7}
 2225              	.LCFI54:
 2226              		.cfi_def_cfa_offset 4
 2227              		.cfi_offset 7, -4
 2228 0002 00AF     		add	r7, sp, #0
 2229              	.LCFI55:
 2230              		.cfi_def_cfa_register 7
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             the HAL_RCC_CSSCallback could be implemented in the user file
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****    */
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2231              		.loc 1 1106 1
 2232 0004 00BF     		nop
 2233 0006 BD46     		mov	sp, r7
 2234              	.LCFI56:
 2235              		.cfi_def_cfa_register 13
 2236              		@ sp needed
 2237 0008 5DF8047B 		ldr	r7, [sp], #4
 2238              	.LCFI57:
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 60


 2239              		.cfi_restore 7
 2240              		.cfi_def_cfa_offset 0
 2241 000c 7047     		bx	lr
 2242              		.cfi_endproc
 2243              	.LFE147:
 2245              		.text
 2246              	.Letext0:
 2247              		.file 2 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 2248              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 2249              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 2250              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 2251              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 2252              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2253              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2254              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2255              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2256              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  C:\Users\einom\AppData\Local\Temp\cch7BR1r.s 			page 61


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hal_rcc.c
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:21     .text.HAL_RCC_DeInit:00000000 $t
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:27     .text.HAL_RCC_DeInit:00000000 HAL_RCC_DeInit
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:58     .text.HAL_RCC_OscConfig:00000000 $t
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:64     .text.HAL_RCC_OscConfig:00000000 HAL_RCC_OscConfig
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:457    .text.HAL_RCC_OscConfig:00000240 $d
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:462    .text.HAL_RCC_OscConfig:0000024c $t
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:811    .text.HAL_RCC_OscConfig:00000470 $d
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:816    .text.HAL_RCC_OscConfig:0000047c $t
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:914    .text.HAL_RCC_OscConfig:000004fc $d
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:919    .text.HAL_RCC_ClockConfig:00000000 $t
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:925    .text.HAL_RCC_ClockConfig:00000000 HAL_RCC_ClockConfig
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:1476   .text.HAL_RCC_GetSysClockFreq:00000000 HAL_RCC_GetSysClockFreq
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:1227   .text.HAL_RCC_ClockConfig:000001b8 $d
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:1236   .text.HAL_RCC_MCOConfig:00000000 $t
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:1242   .text.HAL_RCC_MCOConfig:00000000 HAL_RCC_MCOConfig
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:1374   .text.HAL_RCC_MCOConfig:000000c4 $d
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:1381   .text.HAL_RCC_EnableCSS:00000000 $t
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:1387   .text.HAL_RCC_EnableCSS:00000000 HAL_RCC_EnableCSS
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:1420   .text.HAL_RCC_EnableCSS:00000014 $d
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:1425   .text.HAL_RCC_DisableCSS:00000000 $t
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:1431   .text.HAL_RCC_DisableCSS:00000000 HAL_RCC_DisableCSS
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:1464   .text.HAL_RCC_DisableCSS:00000014 $d
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:1470   .text.HAL_RCC_GetSysClockFreq:00000000 $t
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:1701   .text.HAL_RCC_GetSysClockFreq:00000180 $d
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:1708   .text.HAL_RCC_GetHCLKFreq:00000000 $t
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:1714   .text.HAL_RCC_GetHCLKFreq:00000000 HAL_RCC_GetHCLKFreq
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:1745   .text.HAL_RCC_GetHCLKFreq:00000014 $d
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:1750   .text.HAL_RCC_GetPCLK1Freq:00000000 $t
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:1756   .text.HAL_RCC_GetPCLK1Freq:00000000 HAL_RCC_GetPCLK1Freq
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:1790   .text.HAL_RCC_GetPCLK1Freq:00000020 $d
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:1796   .text.HAL_RCC_GetPCLK2Freq:00000000 $t
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:1802   .text.HAL_RCC_GetPCLK2Freq:00000000 HAL_RCC_GetPCLK2Freq
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:1836   .text.HAL_RCC_GetPCLK2Freq:00000020 $d
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:1842   .text.HAL_RCC_GetOscConfig:00000000 $t
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:1848   .text.HAL_RCC_GetOscConfig:00000000 HAL_RCC_GetOscConfig
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:2067   .text.HAL_RCC_GetOscConfig:00000124 $d
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:2072   .text.HAL_RCC_GetClockConfig:00000000 $t
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:2078   .text.HAL_RCC_GetClockConfig:00000000 HAL_RCC_GetClockConfig
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:2159   .text.HAL_RCC_GetClockConfig:0000005c $d
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:2165   .text.HAL_RCC_NMI_IRQHandler:00000000 $t
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:2171   .text.HAL_RCC_NMI_IRQHandler:00000000 HAL_RCC_NMI_IRQHandler
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:2217   .text.HAL_RCC_CSSCallback:00000000 HAL_RCC_CSSCallback
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:2205   .text.HAL_RCC_NMI_IRQHandler:00000020 $d
C:\Users\einom\AppData\Local\Temp\cch7BR1r.s:2211   .text.HAL_RCC_CSSCallback:00000000 $t

UNDEFINED SYMBOLS
HAL_GetTick
HAL_InitTick
AHBPrescTable
SystemCoreClock
uwTickPrio
HAL_GPIO_Init
__aeabi_uldivmod
APBPrescTable
