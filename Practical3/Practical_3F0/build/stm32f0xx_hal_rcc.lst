ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f0xx_hal_rcc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c"
  18              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  19              		.align	1
  20              		.global	HAL_RCC_DeInit
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	HAL_RCC_DeInit:
  26              	.LFB40:
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @file    stm32f0xx_hal_rcc.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *       
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @verbatim                
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]  
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (HSI 8MHz) with Flash 0 wait state, Flash prefetch buffer is disabled, 
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       and all peripherals are off except internal SRAM, Flash and JTAG.
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) buses;
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           all peripherals mapped on these buses are running at HSI speed.
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..] Once the device started from reset, the user application has to:
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings  
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Configure the AHB and APB buses prescalers
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals whose clocks are not
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           derived from the System clock (RTC, ADC, I2C, USART, TIM, USB FS, etc..)
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 2


  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                       ##### RCC Limitations #####
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ==============================================================================
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]  
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral 
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write 
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       from/to registers.
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]  
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       Workarounds:
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @endverbatim
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ******************************************************************************
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @attention
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * Copyright (c) 2016 STMicroelectronics.
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * All rights reserved.
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * This software is licensed under terms that can be found in the LICENSE file in
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * the root directory of this software component.
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ******************************************************************************
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #include "stm32f0xx_hal.h"
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @addtogroup STM32F0xx_HAL_Driver
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC RCC
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** * @brief RCC HAL module driver
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Private_Constants RCC Private Constants
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****  * @{
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****  */
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @}
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #define MCO1_CLK_ENABLE()     __HAL_RCC_GPIOA_CLK_ENABLE()
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 3


  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @}
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @}
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Exported functions ---------------------------------------------------------*/
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions 
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions 
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @verbatim    
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ===============================================================================
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ===============================================================================
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (HSE, HSI, HSI14, HSI48, LSE, LSI, PLL, CSS and MCO) and the System buses clocks (SYSCLK, 
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       AHB and APB1).
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) HSI (high-speed internal), 8 MHz factory-trimmed RC used directly or through
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           the PLL as System clock source.
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           The HSI clock can be used also to clock the USART and I2C peripherals.
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) HSI14 (high-speed internal), 14 MHz factory-trimmed RC used directly to clock 
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           the ADC peripheral.
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) LSI (low-speed internal), ~40 KHz low consumption RC used as IWDG and/or RTC
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           clock source.
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) HSE (high-speed external), 4 to 32 MHz crystal oscillator used directly or
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           through the PLL as System clock source. Can be used also as RTC clock source.
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.   
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) PLL (clocked by HSI, HSI48 or HSE), featuring different output clocks:
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        (++) The first output is used to generate the high speed system clock (up to 48 MHz)
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        (++) The second output is used to generate the clock for the USB FS (48 MHz)
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        (++) The third output may be used to generate the clock for the TIM, I2C and USART 
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             peripherals (up to 48 MHz)
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           and if a HSE clock failure occurs(HSE used directly or through PLL as System 
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           clock source), the System clocks automatically switched to HSI and an interrupt
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 4


 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           is generated if enabled. The interrupt is linked to the Cortex-M0 NMI 
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           (Non-Maskable Interrupt) exception vector.   
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) MCO (microcontroller clock output), used to output SYSCLK, HSI, HSE, LSI, LSE or PLL
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           clock (divided by 2) output on pin (such as PA8 pin).
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..] System, AHB and APB buses clocks configuration
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           HSE and PLL.
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           The AHB clock (HCLK) is derived from System clock through configurable
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           prescaler and used to clock the CPU, memory and peripherals mapped
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           on AHB bus (DMA, GPIO...). APB1 (PCLK1) clock is derived
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           from AHB clock through configurable prescalers and used to clock
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           the peripherals mapped on these buses. You can use
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           "HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) All the peripheral clocks are derived from the System clock (SYSCLK) except:
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The FLASH program/erase clock  which is always HSI 8MHz clock.
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The USB 48 MHz clock which is derived from the PLL VCO clock.
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The USART clock which can be derived as well from HSI 8MHz, LSI or LSE.
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The I2C clock which can be derived as well from HSI 8MHz clock.
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The ADC clock which is derived from PLL output.
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The RTC clock which is derived from the LSE, LSI or 1 MHz HSE_RTC
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****              (HSE divided by a programmable prescaler). The System clock (SYSCLK)
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****              frequency must be higher or equal to the RTC clock frequency.
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) IWDG clock which is always the LSI clock.
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) For the STM32F0xx devices, the maximum frequency of the SYSCLK, HCLK and PCLK1 is 48 MHz,
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           Depending on the SYSCLK frequency, the flash latency should be adapted accordingly.
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) After reset, the System clock source is the HSI (8 MHz) with 0 WS and
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           prefetch is disabled.
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @endverbatim
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /*
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   Additional consideration on the SYSCLK based on Latency settings:
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           +-----------------------------------------------+
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           | Latency       | SYSCLK clock frequency (MHz)  |
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           |---------------|-------------------------------|
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           |0WS(1CPU cycle)|       0 < SYSCLK <= 24        |
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           |---------------|-------------------------------|
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           |1WS(2CPU cycle)|      24 < SYSCLK <= 48        |
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           +-----------------------------------------------+
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - HSE and PLL OFF
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - AHB, APB1 prescaler set to 1.
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - CSS and MCO1 OFF
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - All interrupts disabled
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - All interrupt and reset flags cleared
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   This function does not modify the configuration of the
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 5


 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - Peripheral clocks
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval HAL status
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_DeInit(void)
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
  27              		.loc 1 209 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t tickstart;
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get Start Tick*/
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   tickstart = HAL_GetTick();
  42              		.loc 1 213 15
  43 0006 FFF7FEFF 		bl	HAL_GetTick
  44 000a 0300     		movs	r3, r0
  45 000c 7B60     		str	r3, [r7, #4]
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Set HSION bit, HSITRIM[4:0] bits to the reset value*/
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_HSION | RCC_CR_HSITRIM_4); 
  46              		.loc 1 216 3
  47 000e 374B     		ldr	r3, .L10
  48 0010 1A68     		ldr	r2, [r3]
  49 0012 364B     		ldr	r3, .L10
  50 0014 8121     		movs	r1, #129
  51 0016 0A43     		orrs	r2, r1
  52 0018 1A60     		str	r2, [r3]
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Wait till HSI is ready */
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == RESET)
  53              		.loc 1 219 9
  54 001a 08E0     		b	.L2
  55              	.L4:
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
  56              		.loc 1 221 10
  57 001c FFF7FEFF 		bl	HAL_GetTick
  58 0020 0200     		movs	r2, r0
  59              		.loc 1 221 24 discriminator 1
  60 0022 7B68     		ldr	r3, [r7, #4]
  61 0024 D31A     		subs	r3, r2, r3
  62              		.loc 1 221 8 discriminator 1
  63 0026 022B     		cmp	r3, #2
  64 0028 01D9     		bls	.L2
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 6


 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       return HAL_TIMEOUT;
  65              		.loc 1 223 14
  66 002a 0323     		movs	r3, #3
  67 002c 5AE0     		b	.L3
  68              	.L2:
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
  69              		.loc 1 219 10
  70 002e 2F4B     		ldr	r3, .L10
  71 0030 1B68     		ldr	r3, [r3]
  72 0032 0222     		movs	r2, #2
  73 0034 1340     		ands	r3, r2
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
  74              		.loc 1 219 43
  75 0036 F1D0     		beq	.L4
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset SW[1:0], HPRE[3:0], PPRE[2:0] and MCOSEL[2:0] bits */
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CFGR, RCC_CFGR_SW | RCC_CFGR_HPRE | RCC_CFGR_PPRE | RCC_CFGR_MCO);
  76              		.loc 1 228 3
  77 0038 2C4B     		ldr	r3, .L10
  78 003a 5A68     		ldr	r2, [r3, #4]
  79 003c 2B4B     		ldr	r3, .L10
  80 003e 2C49     		ldr	r1, .L10+4
  81 0040 0A40     		ands	r2, r1
  82 0042 5A60     		str	r2, [r3, #4]
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Wait till HSI as SYSCLK status is enabled */
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   while (READ_BIT(RCC->CFGR, RCC_CFGR_SWS) != RESET)
  83              		.loc 1 231 9
  84 0044 09E0     		b	.L5
  85              	.L6:
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
  86              		.loc 1 233 10
  87 0046 FFF7FEFF 		bl	HAL_GetTick
  88 004a 0200     		movs	r2, r0
  89              		.loc 1 233 24 discriminator 1
  90 004c 7B68     		ldr	r3, [r7, #4]
  91 004e D31A     		subs	r3, r2, r3
  92              		.loc 1 233 8 discriminator 1
  93 0050 284A     		ldr	r2, .L10+8
  94 0052 9342     		cmp	r3, r2
  95 0054 01D9     		bls	.L5
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       return HAL_TIMEOUT;
  96              		.loc 1 235 14
  97 0056 0323     		movs	r3, #3
  98 0058 44E0     		b	.L3
  99              	.L5:
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 100              		.loc 1 231 10
 101 005a 244B     		ldr	r3, .L10
 102 005c 5B68     		ldr	r3, [r3, #4]
 103 005e 0C22     		movs	r2, #12
 104 0060 1340     		ands	r3, r2
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 7


 105              		.loc 1 231 44
 106 0062 F0D1     		bne	.L6
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable for HSI as system clock source */
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   SystemCoreClock = HSI_VALUE;
 107              		.loc 1 240 19
 108 0064 244B     		ldr	r3, .L10+12
 109 0066 254A     		ldr	r2, .L10+16
 110 0068 1A60     		str	r2, [r3]
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Adapt Systick interrupt period */
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if (HAL_InitTick(uwTickPrio) != HAL_OK)
 111              		.loc 1 243 7
 112 006a 254B     		ldr	r3, .L10+20
 113 006c 1B68     		ldr	r3, [r3]
 114 006e 1800     		movs	r0, r3
 115 0070 FFF7FEFF 		bl	HAL_InitTick
 116 0074 031E     		subs	r3, r0, #0
 117              		.loc 1 243 6 discriminator 1
 118 0076 01D0     		beq	.L7
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     return HAL_ERROR;
 119              		.loc 1 245 12
 120 0078 0123     		movs	r3, #1
 121 007a 33E0     		b	.L3
 122              	.L7:
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset HSEON, CSSON, PLLON bits */
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLON | RCC_CR_CSSON | RCC_CR_HSEON);
 123              		.loc 1 249 3
 124 007c 1B4B     		ldr	r3, .L10
 125 007e 1A68     		ldr	r2, [r3]
 126 0080 1A4B     		ldr	r3, .L10
 127 0082 2049     		ldr	r1, .L10+24
 128 0084 0A40     		ands	r2, r1
 129 0086 1A60     		str	r2, [r3]
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset HSEBYP bit */
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
 130              		.loc 1 252 3
 131 0088 184B     		ldr	r3, .L10
 132 008a 1A68     		ldr	r2, [r3]
 133 008c 174B     		ldr	r3, .L10
 134 008e 1E49     		ldr	r1, .L10+28
 135 0090 0A40     		ands	r2, r1
 136 0092 1A60     		str	r2, [r3]
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get start tick */
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 137              		.loc 1 255 15
 138 0094 FFF7FEFF 		bl	HAL_GetTick
 139 0098 0300     		movs	r3, r0
 140 009a 7B60     		str	r3, [r7, #4]
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 8


 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Wait till PLLRDY is cleared */
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != RESET)
 141              		.loc 1 258 8
 142 009c 08E0     		b	.L8
 143              	.L9:
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 144              		.loc 1 260 9
 145 009e FFF7FEFF 		bl	HAL_GetTick
 146 00a2 0200     		movs	r2, r0
 147              		.loc 1 260 23 discriminator 1
 148 00a4 7B68     		ldr	r3, [r7, #4]
 149 00a6 D31A     		subs	r3, r2, r3
 150              		.loc 1 260 7 discriminator 1
 151 00a8 022B     		cmp	r3, #2
 152 00aa 01D9     		bls	.L8
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       return HAL_TIMEOUT;
 153              		.loc 1 262 14
 154 00ac 0323     		movs	r3, #3
 155 00ae 19E0     		b	.L3
 156              	.L8:
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 157              		.loc 1 258 9
 158 00b0 0E4B     		ldr	r3, .L10
 159 00b2 1A68     		ldr	r2, [r3]
 160 00b4 8023     		movs	r3, #128
 161 00b6 9B04     		lsls	r3, r3, #18
 162 00b8 1340     		ands	r3, r2
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 163              		.loc 1 258 42
 164 00ba F0D1     		bne	.L9
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset CFGR register */
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
 165              		.loc 1 267 3
 166 00bc 0B4B     		ldr	r3, .L10
 167 00be 0022     		movs	r2, #0
 168 00c0 5A60     		str	r2, [r3, #4]
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset CFGR2 register */
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR2);
 169              		.loc 1 270 3
 170 00c2 0A4B     		ldr	r3, .L10
 171 00c4 0022     		movs	r2, #0
 172 00c6 DA62     		str	r2, [r3, #44]
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset CFGR3 register */
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR3);
 173              		.loc 1 273 3
 174 00c8 084B     		ldr	r3, .L10
 175 00ca 0022     		movs	r2, #0
 176 00cc 1A63     		str	r2, [r3, #48]
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Disable all interrupts */
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 9


 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_REG(RCC->CIR);
 177              		.loc 1 276 3
 178 00ce 074B     		ldr	r3, .L10
 179 00d0 0022     		movs	r2, #0
 180 00d2 9A60     		str	r2, [r3, #8]
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Clear all reset flags */
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   __HAL_RCC_CLEAR_RESET_FLAGS();
 181              		.loc 1 279 3
 182 00d4 054B     		ldr	r3, .L10
 183 00d6 5A6A     		ldr	r2, [r3, #36]
 184 00d8 044B     		ldr	r3, .L10
 185 00da 8021     		movs	r1, #128
 186 00dc 4904     		lsls	r1, r1, #17
 187 00de 0A43     		orrs	r2, r1
 188 00e0 5A62     		str	r2, [r3, #36]
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return HAL_OK;
 189              		.loc 1 281 10
 190 00e2 0023     		movs	r3, #0
 191              	.L3:
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 192              		.loc 1 282 1
 193 00e4 1800     		movs	r0, r3
 194 00e6 BD46     		mov	sp, r7
 195 00e8 02B0     		add	sp, sp, #8
 196              		@ sp needed
 197 00ea 80BD     		pop	{r7, pc}
 198              	.L11:
 199              		.align	2
 200              	.L10:
 201 00ec 00100240 		.word	1073876992
 202 00f0 0CF8FFF0 		.word	-251660276
 203 00f4 88130000 		.word	5000
 204 00f8 00000000 		.word	SystemCoreClock
 205 00fc 00127A00 		.word	8000000
 206 0100 00000000 		.word	uwTickPrio
 207 0104 FFFFF6FE 		.word	-17367041
 208 0108 FFFFFBFF 		.word	-262145
 209              		.cfi_endproc
 210              	.LFE40:
 212              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
 213              		.align	1
 214              		.global	HAL_RCC_OscConfig
 215              		.syntax unified
 216              		.code	16
 217              		.thumb_func
 219              	HAL_RCC_OscConfig:
 220              	.LFB41:
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 10


 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to LSE Off
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to HSE Off
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval HAL status
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 221              		.loc 1 299 1
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 32
 224              		@ frame_needed = 1, uses_anonymous_args = 0
 225 0000 80B5     		push	{r7, lr}
 226              	.LCFI3:
 227              		.cfi_def_cfa_offset 8
 228              		.cfi_offset 7, -8
 229              		.cfi_offset 14, -4
 230 0002 88B0     		sub	sp, sp, #32
 231              	.LCFI4:
 232              		.cfi_def_cfa_offset 40
 233 0004 00AF     		add	r7, sp, #0
 234              	.LCFI5:
 235              		.cfi_def_cfa_register 7
 236 0006 7860     		str	r0, [r7, #4]
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t tickstart;
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t pll_config;
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t pll_config2;
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check Null pointer */
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(RCC_OscInitStruct == NULL)
 237              		.loc 1 305 5
 238 0008 7B68     		ldr	r3, [r7, #4]
 239 000a 002B     		cmp	r3, #0
 240 000c 01D1     		bne	.L13
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     return HAL_ERROR;
 241              		.loc 1 307 12
 242 000e 0123     		movs	r3, #1
 243 0010 01E3     		b	.L14
 244              	.L13:
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/ 
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 245              		.loc 1 314 25
 246 0012 7B68     		ldr	r3, [r7, #4]
 247 0014 1B68     		ldr	r3, [r3]
 248              		.loc 1 314 43
 249 0016 0122     		movs	r2, #1
 250 0018 1340     		ands	r3, r2
 251              		.loc 1 314 5
 252 001a 00D1     		bne	.LCB200
 253 001c 8DE0     		b	.L15	@long jump
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 11


 254              	.LCB200:
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 255              		.loc 1 320 9
 256 001e C34B     		ldr	r3, .L77
 257 0020 5B68     		ldr	r3, [r3, #4]
 258 0022 0C22     		movs	r2, #12
 259 0024 1340     		ands	r3, r2
 260              		.loc 1 320 7
 261 0026 042B     		cmp	r3, #4
 262 0028 0ED0     		beq	.L16
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 263              		.loc 1 321 13
 264 002a C04B     		ldr	r3, .L77
 265 002c 5B68     		ldr	r3, [r3, #4]
 266 002e 0C22     		movs	r2, #12
 267 0030 1340     		ands	r3, r2
 268              		.loc 1 321 8
 269 0032 082B     		cmp	r3, #8
 270 0034 16D1     		bne	.L17
 271              		.loc 1 321 82 discriminator 1
 272 0036 BD4B     		ldr	r3, .L77
 273 0038 5A68     		ldr	r2, [r3, #4]
 274 003a 8023     		movs	r3, #128
 275 003c 5B02     		lsls	r3, r3, #9
 276 003e 1A40     		ands	r2, r3
 277              		.loc 1 321 78 discriminator 1
 278 0040 8023     		movs	r3, #128
 279 0042 5B02     		lsls	r3, r3, #9
 280 0044 9A42     		cmp	r2, r3
 281 0046 0DD1     		bne	.L17
 282              	.L16:
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 283              		.loc 1 323 11
 284 0048 B84B     		ldr	r3, .L77
 285 004a 1A68     		ldr	r2, [r3]
 286 004c 8023     		movs	r3, #128
 287 004e 9B02     		lsls	r3, r3, #10
 288 0050 1340     		ands	r3, r2
 289              		.loc 1 323 9
 290 0052 00D1     		bne	.LCB229
 291 0054 70E0     		b	.L76	@long jump
 292              	.LCB229:
 293              		.loc 1 323 78 discriminator 1
 294 0056 7B68     		ldr	r3, [r7, #4]
 295 0058 5B68     		ldr	r3, [r3, #4]
 296              		.loc 1 323 57 discriminator 1
 297 005a 002B     		cmp	r3, #0
 298 005c 00D0     		beq	.LCB233
 299 005e 6BE0     		b	.L76	@long jump
 300              	.LCB233:
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 12


 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 301              		.loc 1 325 16
 302 0060 0123     		movs	r3, #1
 303 0062 D8E2     		b	.L14
 304              	.L17:
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 305              		.loc 1 331 7
 306 0064 7B68     		ldr	r3, [r7, #4]
 307 0066 5B68     		ldr	r3, [r3, #4]
 308 0068 012B     		cmp	r3, #1
 309 006a 07D1     		bne	.L19
 310              		.loc 1 331 7 is_stmt 0 discriminator 1
 311 006c AF4B     		ldr	r3, .L77
 312 006e 1A68     		ldr	r2, [r3]
 313 0070 AE4B     		ldr	r3, .L77
 314 0072 8021     		movs	r1, #128
 315 0074 4902     		lsls	r1, r1, #9
 316 0076 0A43     		orrs	r2, r1
 317 0078 1A60     		str	r2, [r3]
 318 007a 2FE0     		b	.L20
 319              	.L19:
 320              		.loc 1 331 7 discriminator 2
 321 007c 7B68     		ldr	r3, [r7, #4]
 322 007e 5B68     		ldr	r3, [r3, #4]
 323 0080 002B     		cmp	r3, #0
 324 0082 0CD1     		bne	.L21
 325              		.loc 1 331 7 discriminator 3
 326 0084 A94B     		ldr	r3, .L77
 327 0086 1A68     		ldr	r2, [r3]
 328 0088 A84B     		ldr	r3, .L77
 329 008a A949     		ldr	r1, .L77+4
 330 008c 0A40     		ands	r2, r1
 331 008e 1A60     		str	r2, [r3]
 332 0090 A64B     		ldr	r3, .L77
 333 0092 1A68     		ldr	r2, [r3]
 334 0094 A54B     		ldr	r3, .L77
 335 0096 A749     		ldr	r1, .L77+8
 336 0098 0A40     		ands	r2, r1
 337 009a 1A60     		str	r2, [r3]
 338 009c 1EE0     		b	.L20
 339              	.L21:
 340              		.loc 1 331 7 discriminator 4
 341 009e 7B68     		ldr	r3, [r7, #4]
 342 00a0 5B68     		ldr	r3, [r3, #4]
 343 00a2 052B     		cmp	r3, #5
 344 00a4 0ED1     		bne	.L22
 345              		.loc 1 331 7 discriminator 5
 346 00a6 A14B     		ldr	r3, .L77
 347 00a8 1A68     		ldr	r2, [r3]
 348 00aa A04B     		ldr	r3, .L77
 349 00ac 8021     		movs	r1, #128
 350 00ae C902     		lsls	r1, r1, #11
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 13


 351 00b0 0A43     		orrs	r2, r1
 352 00b2 1A60     		str	r2, [r3]
 353 00b4 9D4B     		ldr	r3, .L77
 354 00b6 1A68     		ldr	r2, [r3]
 355 00b8 9C4B     		ldr	r3, .L77
 356 00ba 8021     		movs	r1, #128
 357 00bc 4902     		lsls	r1, r1, #9
 358 00be 0A43     		orrs	r2, r1
 359 00c0 1A60     		str	r2, [r3]
 360 00c2 0BE0     		b	.L20
 361              	.L22:
 362              		.loc 1 331 7 discriminator 6
 363 00c4 994B     		ldr	r3, .L77
 364 00c6 1A68     		ldr	r2, [r3]
 365 00c8 984B     		ldr	r3, .L77
 366 00ca 9949     		ldr	r1, .L77+4
 367 00cc 0A40     		ands	r2, r1
 368 00ce 1A60     		str	r2, [r3]
 369 00d0 964B     		ldr	r3, .L77
 370 00d2 1A68     		ldr	r2, [r3]
 371 00d4 954B     		ldr	r3, .L77
 372 00d6 9749     		ldr	r1, .L77+8
 373 00d8 0A40     		ands	r2, r1
 374 00da 1A60     		str	r2, [r3]
 375              	.L20:
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        /* Check the HSE State */
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 376              		.loc 1 335 27 is_stmt 1
 377 00dc 7B68     		ldr	r3, [r7, #4]
 378 00de 5B68     		ldr	r3, [r3, #4]
 379              		.loc 1 335 9
 380 00e0 002B     		cmp	r3, #0
 381 00e2 14D0     		beq	.L23
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 382              		.loc 1 338 21
 383 00e4 FFF7FEFF 		bl	HAL_GetTick
 384 00e8 0300     		movs	r3, r0
 385 00ea BB61     		str	r3, [r7, #24]
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSE is ready */
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 386              		.loc 1 341 14
 387 00ec 08E0     		b	.L24
 388              	.L25:
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 389              		.loc 1 343 15
 390 00ee FFF7FEFF 		bl	HAL_GetTick
 391 00f2 0200     		movs	r2, r0
 392              		.loc 1 343 29 discriminator 1
 393 00f4 BB69     		ldr	r3, [r7, #24]
 394 00f6 D31A     		subs	r3, r2, r3
 395              		.loc 1 343 13 discriminator 1
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 14


 396 00f8 642B     		cmp	r3, #100
 397 00fa 01D9     		bls	.L24
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 398              		.loc 1 345 20
 399 00fc 0323     		movs	r3, #3
 400 00fe 8AE2     		b	.L14
 401              	.L24:
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 402              		.loc 1 341 15
 403 0100 8A4B     		ldr	r3, .L77
 404 0102 1A68     		ldr	r2, [r3]
 405 0104 8023     		movs	r3, #128
 406 0106 9B02     		lsls	r3, r3, #10
 407 0108 1340     		ands	r3, r2
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 408              		.loc 1 341 51
 409 010a F0D0     		beq	.L25
 410 010c 15E0     		b	.L15
 411              	.L23:
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 412              		.loc 1 352 21
 413 010e FFF7FEFF 		bl	HAL_GetTick
 414 0112 0300     		movs	r3, r0
 415 0114 BB61     		str	r3, [r7, #24]
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSE is disabled */
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 416              		.loc 1 355 14
 417 0116 08E0     		b	.L26
 418              	.L27:
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****            if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 419              		.loc 1 357 16
 420 0118 FFF7FEFF 		bl	HAL_GetTick
 421 011c 0200     		movs	r2, r0
 422              		.loc 1 357 30 discriminator 1
 423 011e BB69     		ldr	r3, [r7, #24]
 424 0120 D31A     		subs	r3, r2, r3
 425              		.loc 1 357 14 discriminator 1
 426 0122 642B     		cmp	r3, #100
 427 0124 01D9     		bls	.L26
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 428              		.loc 1 359 20
 429 0126 0323     		movs	r3, #3
 430 0128 75E2     		b	.L14
 431              	.L26:
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 432              		.loc 1 355 15
 433 012a 804B     		ldr	r3, .L77
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 15


 434 012c 1A68     		ldr	r2, [r3]
 435 012e 8023     		movs	r3, #128
 436 0130 9B02     		lsls	r3, r3, #10
 437 0132 1340     		ands	r3, r2
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 438              		.loc 1 355 51
 439 0134 F0D1     		bne	.L27
 440 0136 00E0     		b	.L15
 441              	.L76:
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 442              		.loc 1 323 9
 443 0138 C046     		nop
 444              	.L15:
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/ 
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 445              		.loc 1 366 25
 446 013a 7B68     		ldr	r3, [r7, #4]
 447 013c 1B68     		ldr	r3, [r3]
 448              		.loc 1 366 43
 449 013e 0222     		movs	r2, #2
 450 0140 1340     		ands	r3, r2
 451              		.loc 1 366 5
 452 0142 00D1     		bne	.LCB380
 453 0144 69E0     		b	.L28	@long jump
 454              	.LCB380:
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 455              		.loc 1 373 9
 456 0146 794B     		ldr	r3, .L77
 457 0148 5B68     		ldr	r3, [r3, #4]
 458 014a 0C22     		movs	r2, #12
 459 014c 1340     		ands	r3, r2
 460              		.loc 1 373 7
 461 014e 0BD0     		beq	.L29
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 462              		.loc 1 374 13
 463 0150 764B     		ldr	r3, .L77
 464 0152 5B68     		ldr	r3, [r3, #4]
 465 0154 0C22     		movs	r2, #12
 466 0156 1340     		ands	r3, r2
 467              		.loc 1 374 8
 468 0158 082B     		cmp	r3, #8
 469 015a 1CD1     		bne	.L30
 470              		.loc 1 374 82 discriminator 1
 471 015c 734B     		ldr	r3, .L77
 472 015e 5A68     		ldr	r2, [r3, #4]
 473 0160 8023     		movs	r3, #128
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 16


 474 0162 5B02     		lsls	r3, r3, #9
 475 0164 1340     		ands	r3, r2
 476              		.loc 1 374 78 discriminator 1
 477 0166 16D1     		bne	.L30
 478              	.L29:
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 479              		.loc 1 377 11
 480 0168 704B     		ldr	r3, .L77
 481 016a 1B68     		ldr	r3, [r3]
 482 016c 0222     		movs	r2, #2
 483 016e 1340     		ands	r3, r2
 484              		.loc 1 377 9
 485 0170 05D0     		beq	.L31
 486              		.loc 1 377 78 discriminator 1
 487 0172 7B68     		ldr	r3, [r7, #4]
 488 0174 DB68     		ldr	r3, [r3, #12]
 489              		.loc 1 377 57 discriminator 1
 490 0176 012B     		cmp	r3, #1
 491 0178 01D0     		beq	.L31
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 492              		.loc 1 379 16
 493 017a 0123     		movs	r3, #1
 494 017c 4BE2     		b	.L14
 495              	.L31:
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 496              		.loc 1 385 9
 497 017e 6B4B     		ldr	r3, .L77
 498 0180 1B68     		ldr	r3, [r3]
 499 0182 F822     		movs	r2, #248
 500 0184 9343     		bics	r3, r2
 501 0186 1900     		movs	r1, r3
 502 0188 7B68     		ldr	r3, [r7, #4]
 503 018a 1B69     		ldr	r3, [r3, #16]
 504 018c DA00     		lsls	r2, r3, #3
 505 018e 674B     		ldr	r3, .L77
 506 0190 0A43     		orrs	r2, r1
 507 0192 1A60     		str	r2, [r3]
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 508              		.loc 1 377 9
 509 0194 41E0     		b	.L28
 510              	.L30:
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSI State */
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 511              		.loc 1 391 27
 512 0196 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 17


 513 0198 DB68     		ldr	r3, [r3, #12]
 514              		.loc 1 391 9
 515 019a 002B     		cmp	r3, #0
 516 019c 24D0     		beq	.L32
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        /* Enable the Internal High Speed oscillator (HSI). */
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 517              		.loc 1 394 9
 518 019e 634B     		ldr	r3, .L77
 519 01a0 1A68     		ldr	r2, [r3]
 520 01a2 624B     		ldr	r3, .L77
 521 01a4 0121     		movs	r1, #1
 522 01a6 0A43     		orrs	r2, r1
 523 01a8 1A60     		str	r2, [r3]
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 524              		.loc 1 397 21
 525 01aa FFF7FEFF 		bl	HAL_GetTick
 526 01ae 0300     		movs	r3, r0
 527 01b0 BB61     		str	r3, [r7, #24]
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSI is ready */
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 528              		.loc 1 400 14
 529 01b2 08E0     		b	.L33
 530              	.L34:
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 531              		.loc 1 402 15
 532 01b4 FFF7FEFF 		bl	HAL_GetTick
 533 01b8 0200     		movs	r2, r0
 534              		.loc 1 402 29 discriminator 1
 535 01ba BB69     		ldr	r3, [r7, #24]
 536 01bc D31A     		subs	r3, r2, r3
 537              		.loc 1 402 13 discriminator 1
 538 01be 022B     		cmp	r3, #2
 539 01c0 01D9     		bls	.L33
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 540              		.loc 1 404 20
 541 01c2 0323     		movs	r3, #3
 542 01c4 27E2     		b	.L14
 543              	.L33:
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 544              		.loc 1 400 15
 545 01c6 594B     		ldr	r3, .L77
 546 01c8 1B68     		ldr	r3, [r3]
 547 01ca 0222     		movs	r2, #2
 548 01cc 1340     		ands	r3, r2
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 549              		.loc 1 400 51
 550 01ce F1D0     		beq	.L34
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                 
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 18


 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 551              		.loc 1 409 9
 552 01d0 564B     		ldr	r3, .L77
 553 01d2 1B68     		ldr	r3, [r3]
 554 01d4 F822     		movs	r2, #248
 555 01d6 9343     		bics	r3, r2
 556 01d8 1900     		movs	r1, r3
 557 01da 7B68     		ldr	r3, [r7, #4]
 558 01dc 1B69     		ldr	r3, [r3, #16]
 559 01de DA00     		lsls	r2, r3, #3
 560 01e0 524B     		ldr	r3, .L77
 561 01e2 0A43     		orrs	r2, r1
 562 01e4 1A60     		str	r2, [r3]
 563 01e6 18E0     		b	.L28
 564              	.L32:
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 565              		.loc 1 414 9
 566 01e8 504B     		ldr	r3, .L77
 567 01ea 1A68     		ldr	r2, [r3]
 568 01ec 4F4B     		ldr	r3, .L77
 569 01ee 0121     		movs	r1, #1
 570 01f0 8A43     		bics	r2, r1
 571 01f2 1A60     		str	r2, [r3]
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 572              		.loc 1 417 21
 573 01f4 FFF7FEFF 		bl	HAL_GetTick
 574 01f8 0300     		movs	r3, r0
 575 01fa BB61     		str	r3, [r7, #24]
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSI is disabled */
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 576              		.loc 1 420 14
 577 01fc 08E0     		b	.L35
 578              	.L36:
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 579              		.loc 1 422 15
 580 01fe FFF7FEFF 		bl	HAL_GetTick
 581 0202 0200     		movs	r2, r0
 582              		.loc 1 422 29 discriminator 1
 583 0204 BB69     		ldr	r3, [r7, #24]
 584 0206 D31A     		subs	r3, r2, r3
 585              		.loc 1 422 13 discriminator 1
 586 0208 022B     		cmp	r3, #2
 587 020a 01D9     		bls	.L35
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 588              		.loc 1 424 20
 589 020c 0323     		movs	r3, #3
 590 020e 02E2     		b	.L14
 591              	.L35:
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 19


 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 592              		.loc 1 420 15
 593 0210 464B     		ldr	r3, .L77
 594 0212 1B68     		ldr	r3, [r3]
 595 0214 0222     		movs	r2, #2
 596 0216 1340     		ands	r3, r2
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 597              		.loc 1 420 51
 598 0218 F1D1     		bne	.L36
 599              	.L28:
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/ 
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 600              		.loc 1 431 25
 601 021a 7B68     		ldr	r3, [r7, #4]
 602 021c 1B68     		ldr	r3, [r3]
 603              		.loc 1 431 43
 604 021e 0822     		movs	r2, #8
 605 0220 1340     		ands	r3, r2
 606              		.loc 1 431 5
 607 0222 36D0     		beq	.L37
 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the LSI State */
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 608              		.loc 1 437 25
 609 0224 7B68     		ldr	r3, [r7, #4]
 610 0226 DB69     		ldr	r3, [r3, #28]
 611              		.loc 1 437 7
 612 0228 002B     		cmp	r3, #0
 613 022a 19D0     		beq	.L38
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 614              		.loc 1 440 7
 615 022c 3F4B     		ldr	r3, .L77
 616 022e 5A6A     		ldr	r2, [r3, #36]
 617 0230 3E4B     		ldr	r3, .L77
 618 0232 0121     		movs	r1, #1
 619 0234 0A43     		orrs	r2, r1
 620 0236 5A62     		str	r2, [r3, #36]
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 621              		.loc 1 443 19
 622 0238 FFF7FEFF 		bl	HAL_GetTick
 623 023c 0300     		movs	r3, r0
 624 023e BB61     		str	r3, [r7, #24]
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till LSI is ready */  
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 20


 625              		.loc 1 446 12
 626 0240 08E0     		b	.L39
 627              	.L40:
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 628              		.loc 1 448 13
 629 0242 FFF7FEFF 		bl	HAL_GetTick
 630 0246 0200     		movs	r2, r0
 631              		.loc 1 448 27 discriminator 1
 632 0248 BB69     		ldr	r3, [r7, #24]
 633 024a D31A     		subs	r3, r2, r3
 634              		.loc 1 448 11 discriminator 1
 635 024c 022B     		cmp	r3, #2
 636 024e 01D9     		bls	.L39
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 637              		.loc 1 450 18
 638 0250 0323     		movs	r3, #3
 639 0252 E0E1     		b	.L14
 640              	.L39:
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 641              		.loc 1 446 13
 642 0254 354B     		ldr	r3, .L77
 643 0256 5B6A     		ldr	r3, [r3, #36]
 644 0258 0222     		movs	r2, #2
 645 025a 1340     		ands	r3, r2
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 646              		.loc 1 446 49
 647 025c F1D0     		beq	.L40
 648 025e 18E0     		b	.L37
 649              	.L38:
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 650              		.loc 1 457 7
 651 0260 324B     		ldr	r3, .L77
 652 0262 5A6A     		ldr	r2, [r3, #36]
 653 0264 314B     		ldr	r3, .L77
 654 0266 0121     		movs	r1, #1
 655 0268 8A43     		bics	r2, r1
 656 026a 5A62     		str	r2, [r3, #36]
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 657              		.loc 1 460 19
 658 026c FFF7FEFF 		bl	HAL_GetTick
 659 0270 0300     		movs	r3, r0
 660 0272 BB61     		str	r3, [r7, #24]
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till LSI is disabled */  
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 661              		.loc 1 463 12
 662 0274 08E0     		b	.L41
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 21


 663              	.L42:
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 664              		.loc 1 465 13
 665 0276 FFF7FEFF 		bl	HAL_GetTick
 666 027a 0200     		movs	r2, r0
 667              		.loc 1 465 27 discriminator 1
 668 027c BB69     		ldr	r3, [r7, #24]
 669 027e D31A     		subs	r3, r2, r3
 670              		.loc 1 465 11 discriminator 1
 671 0280 022B     		cmp	r3, #2
 672 0282 01D9     		bls	.L41
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 673              		.loc 1 467 18
 674 0284 0323     		movs	r3, #3
 675 0286 C6E1     		b	.L14
 676              	.L41:
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 677              		.loc 1 463 13
 678 0288 284B     		ldr	r3, .L77
 679 028a 5B6A     		ldr	r3, [r3, #36]
 680 028c 0222     		movs	r2, #2
 681 028e 1340     		ands	r3, r2
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 682              		.loc 1 463 49
 683 0290 F1D1     		bne	.L42
 684              	.L37:
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/ 
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 685              		.loc 1 473 25
 686 0292 7B68     		ldr	r3, [r7, #4]
 687 0294 1B68     		ldr	r3, [r3]
 688              		.loc 1 473 43
 689 0296 0422     		movs	r2, #4
 690 0298 1340     		ands	r3, r2
 691              		.loc 1 473 5
 692 029a 00D1     		bne	.LCB591
 693 029c B4E0     		b	.L43	@long jump
 694              	.LCB591:
 695              	.LBB2:
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 696              		.loc 1 475 22
 697 029e 1F20     		movs	r0, #31
 698 02a0 3B18     		adds	r3, r7, r0
 699 02a2 0022     		movs	r2, #0
 700 02a4 1A70     		strb	r2, [r3]
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 22


 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 701              		.loc 1 482 8
 702 02a6 214B     		ldr	r3, .L77
 703 02a8 DA69     		ldr	r2, [r3, #28]
 704 02aa 8023     		movs	r3, #128
 705 02ac 5B05     		lsls	r3, r3, #21
 706 02ae 1340     		ands	r3, r2
 707              		.loc 1 482 7
 708 02b0 10D1     		bne	.L44
 709              	.LBB3:
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 710              		.loc 1 484 7
 711 02b2 1E4B     		ldr	r3, .L77
 712 02b4 DA69     		ldr	r2, [r3, #28]
 713 02b6 1D4B     		ldr	r3, .L77
 714 02b8 8021     		movs	r1, #128
 715 02ba 4905     		lsls	r1, r1, #21
 716 02bc 0A43     		orrs	r2, r1
 717 02be DA61     		str	r2, [r3, #28]
 718 02c0 1A4B     		ldr	r3, .L77
 719 02c2 DA69     		ldr	r2, [r3, #28]
 720 02c4 8023     		movs	r3, #128
 721 02c6 5B05     		lsls	r3, r3, #21
 722 02c8 1340     		ands	r3, r2
 723 02ca FB60     		str	r3, [r7, #12]
 724 02cc FB68     		ldr	r3, [r7, #12]
 725              	.LBE3:
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       pwrclkchanged = SET;
 726              		.loc 1 485 21
 727 02ce 3B18     		adds	r3, r7, r0
 728 02d0 0122     		movs	r2, #1
 729 02d2 1A70     		strb	r2, [r3]
 730              	.L44:
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 731              		.loc 1 488 8
 732 02d4 184B     		ldr	r3, .L77+12
 733 02d6 1A68     		ldr	r2, [r3]
 734 02d8 8023     		movs	r3, #128
 735 02da 5B00     		lsls	r3, r3, #1
 736 02dc 1340     		ands	r3, r2
 737              		.loc 1 488 7
 738 02de 1AD1     		bne	.L45
 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 739              		.loc 1 491 7
 740 02e0 154B     		ldr	r3, .L77+12
 741 02e2 1A68     		ldr	r2, [r3]
 742 02e4 144B     		ldr	r3, .L77+12
 743 02e6 8021     		movs	r1, #128
 744 02e8 4900     		lsls	r1, r1, #1
 745 02ea 0A43     		orrs	r2, r1
 746 02ec 1A60     		str	r2, [r3]
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 23


 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 747              		.loc 1 494 19
 748 02ee FFF7FEFF 		bl	HAL_GetTick
 749 02f2 0300     		movs	r3, r0
 750 02f4 BB61     		str	r3, [r7, #24]
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 751              		.loc 1 496 12
 752 02f6 08E0     		b	.L46
 753              	.L47:
 497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 754              		.loc 1 498 13
 755 02f8 FFF7FEFF 		bl	HAL_GetTick
 756 02fc 0200     		movs	r2, r0
 757              		.loc 1 498 27 discriminator 1
 758 02fe BB69     		ldr	r3, [r7, #24]
 759 0300 D31A     		subs	r3, r2, r3
 760              		.loc 1 498 11 discriminator 1
 761 0302 642B     		cmp	r3, #100
 762 0304 01D9     		bls	.L46
 499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 763              		.loc 1 500 18
 764 0306 0323     		movs	r3, #3
 765 0308 85E1     		b	.L14
 766              	.L46:
 496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 767              		.loc 1 496 13
 768 030a 0B4B     		ldr	r3, .L77+12
 769 030c 1A68     		ldr	r2, [r3]
 770 030e 8023     		movs	r3, #128
 771 0310 5B00     		lsls	r3, r3, #1
 772 0312 1340     		ands	r3, r2
 773 0314 F0D0     		beq	.L47
 774              	.L45:
 501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 775              		.loc 1 506 5
 776 0316 7B68     		ldr	r3, [r7, #4]
 777 0318 9B68     		ldr	r3, [r3, #8]
 778 031a 012B     		cmp	r3, #1
 779 031c 0ED1     		bne	.L48
 780              		.loc 1 506 5 is_stmt 0 discriminator 1
 781 031e 034B     		ldr	r3, .L77
 782 0320 1A6A     		ldr	r2, [r3, #32]
 783 0322 024B     		ldr	r3, .L77
 784 0324 0121     		movs	r1, #1
 785 0326 0A43     		orrs	r2, r1
 786 0328 1A62     		str	r2, [r3, #32]
 787 032a 35E0     		b	.L49
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 24


 788              	.L78:
 789              		.align	2
 790              	.L77:
 791 032c 00100240 		.word	1073876992
 792 0330 FFFFFEFF 		.word	-65537
 793 0334 FFFFFBFF 		.word	-262145
 794 0338 00700040 		.word	1073770496
 795              	.L48:
 796              		.loc 1 506 5 discriminator 2
 797 033c 7B68     		ldr	r3, [r7, #4]
 798 033e 9B68     		ldr	r3, [r3, #8]
 799 0340 002B     		cmp	r3, #0
 800 0342 0CD1     		bne	.L50
 801              		.loc 1 506 5 discriminator 3
 802 0344 B64B     		ldr	r3, .L79
 803 0346 1A6A     		ldr	r2, [r3, #32]
 804 0348 B54B     		ldr	r3, .L79
 805 034a 0121     		movs	r1, #1
 806 034c 8A43     		bics	r2, r1
 807 034e 1A62     		str	r2, [r3, #32]
 808 0350 B34B     		ldr	r3, .L79
 809 0352 1A6A     		ldr	r2, [r3, #32]
 810 0354 B24B     		ldr	r3, .L79
 811 0356 0421     		movs	r1, #4
 812 0358 8A43     		bics	r2, r1
 813 035a 1A62     		str	r2, [r3, #32]
 814 035c 1CE0     		b	.L49
 815              	.L50:
 816              		.loc 1 506 5 discriminator 4
 817 035e 7B68     		ldr	r3, [r7, #4]
 818 0360 9B68     		ldr	r3, [r3, #8]
 819 0362 052B     		cmp	r3, #5
 820 0364 0CD1     		bne	.L51
 821              		.loc 1 506 5 discriminator 5
 822 0366 AE4B     		ldr	r3, .L79
 823 0368 1A6A     		ldr	r2, [r3, #32]
 824 036a AD4B     		ldr	r3, .L79
 825 036c 0421     		movs	r1, #4
 826 036e 0A43     		orrs	r2, r1
 827 0370 1A62     		str	r2, [r3, #32]
 828 0372 AB4B     		ldr	r3, .L79
 829 0374 1A6A     		ldr	r2, [r3, #32]
 830 0376 AA4B     		ldr	r3, .L79
 831 0378 0121     		movs	r1, #1
 832 037a 0A43     		orrs	r2, r1
 833 037c 1A62     		str	r2, [r3, #32]
 834 037e 0BE0     		b	.L49
 835              	.L51:
 836              		.loc 1 506 5 discriminator 6
 837 0380 A74B     		ldr	r3, .L79
 838 0382 1A6A     		ldr	r2, [r3, #32]
 839 0384 A64B     		ldr	r3, .L79
 840 0386 0121     		movs	r1, #1
 841 0388 8A43     		bics	r2, r1
 842 038a 1A62     		str	r2, [r3, #32]
 843 038c A44B     		ldr	r3, .L79
 844 038e 1A6A     		ldr	r2, [r3, #32]
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 25


 845 0390 A34B     		ldr	r3, .L79
 846 0392 0421     		movs	r1, #4
 847 0394 8A43     		bics	r2, r1
 848 0396 1A62     		str	r2, [r3, #32]
 849              	.L49:
 507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the LSE State */
 508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 850              		.loc 1 508 25 is_stmt 1
 851 0398 7B68     		ldr	r3, [r7, #4]
 852 039a 9B68     		ldr	r3, [r3, #8]
 853              		.loc 1 508 7
 854 039c 002B     		cmp	r3, #0
 855 039e 14D0     		beq	.L52
 509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 856              		.loc 1 511 19
 857 03a0 FFF7FEFF 		bl	HAL_GetTick
 858 03a4 0300     		movs	r3, r0
 859 03a6 BB61     		str	r3, [r7, #24]
 512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till LSE is ready */  
 514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 860              		.loc 1 514 12
 861 03a8 09E0     		b	.L53
 862              	.L54:
 515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 863              		.loc 1 516 13
 864 03aa FFF7FEFF 		bl	HAL_GetTick
 865 03ae 0200     		movs	r2, r0
 866              		.loc 1 516 27 discriminator 1
 867 03b0 BB69     		ldr	r3, [r7, #24]
 868 03b2 D31A     		subs	r3, r2, r3
 869              		.loc 1 516 11 discriminator 1
 870 03b4 9B4A     		ldr	r2, .L79+4
 871 03b6 9342     		cmp	r3, r2
 872 03b8 01D9     		bls	.L53
 517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 873              		.loc 1 518 18
 874 03ba 0323     		movs	r3, #3
 875 03bc 2BE1     		b	.L14
 876              	.L53:
 514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 877              		.loc 1 514 13
 878 03be 984B     		ldr	r3, .L79
 879 03c0 1B6A     		ldr	r3, [r3, #32]
 880 03c2 0222     		movs	r2, #2
 881 03c4 1340     		ands	r3, r2
 514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 882              		.loc 1 514 49
 883 03c6 F0D0     		beq	.L54
 884 03c8 13E0     		b	.L55
 885              	.L52:
 519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 26


 521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 886              		.loc 1 525 19
 887 03ca FFF7FEFF 		bl	HAL_GetTick
 888 03ce 0300     		movs	r3, r0
 889 03d0 BB61     		str	r3, [r7, #24]
 526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till LSE is disabled */  
 528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 890              		.loc 1 528 12
 891 03d2 09E0     		b	.L56
 892              	.L57:
 529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 893              		.loc 1 530 13
 894 03d4 FFF7FEFF 		bl	HAL_GetTick
 895 03d8 0200     		movs	r2, r0
 896              		.loc 1 530 27 discriminator 1
 897 03da BB69     		ldr	r3, [r7, #24]
 898 03dc D31A     		subs	r3, r2, r3
 899              		.loc 1 530 11 discriminator 1
 900 03de 914A     		ldr	r2, .L79+4
 901 03e0 9342     		cmp	r3, r2
 902 03e2 01D9     		bls	.L56
 531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 903              		.loc 1 532 18
 904 03e4 0323     		movs	r3, #3
 905 03e6 16E1     		b	.L14
 906              	.L56:
 528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 907              		.loc 1 528 13
 908 03e8 8D4B     		ldr	r3, .L79
 909 03ea 1B6A     		ldr	r3, [r3, #32]
 910 03ec 0222     		movs	r2, #2
 911 03ee 1340     		ands	r3, r2
 528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 912              		.loc 1 528 49
 913 03f0 F0D1     		bne	.L57
 914              	.L55:
 533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Require to disable power clock if necessary */
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 915              		.loc 1 538 7
 916 03f2 1F23     		movs	r3, #31
 917 03f4 FB18     		adds	r3, r7, r3
 918 03f6 1B78     		ldrb	r3, [r3]
 919 03f8 012B     		cmp	r3, #1
 920 03fa 05D1     		bne	.L43
 539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 27


 921              		.loc 1 540 7
 922 03fc 884B     		ldr	r3, .L79
 923 03fe DA69     		ldr	r2, [r3, #28]
 924 0400 874B     		ldr	r3, .L79
 925 0402 8949     		ldr	r1, .L79+8
 926 0404 0A40     		ands	r2, r1
 927 0406 DA61     		str	r2, [r3, #28]
 928              	.L43:
 929              	.LBE2:
 541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*----------------------------- HSI14 Configuration --------------------------*/
 545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI14) == RCC_OSCILLATORTYPE_HSI14)
 930              		.loc 1 545 25
 931 0408 7B68     		ldr	r3, [r7, #4]
 932 040a 1B68     		ldr	r3, [r3]
 933              		.loc 1 545 43
 934 040c 1022     		movs	r2, #16
 935 040e 1340     		ands	r3, r2
 936              		.loc 1 545 5
 937 0410 63D0     		beq	.L58
 546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HSI14(RCC_OscInitStruct->HSI14State));
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSI14CalibrationValue));
 550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the HSI14 State */
 552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ON)
 938              		.loc 1 552 25
 939 0412 7B68     		ldr	r3, [r7, #4]
 940 0414 5B69     		ldr	r3, [r3, #20]
 941              		.loc 1 552 7
 942 0416 012B     		cmp	r3, #1
 943 0418 2AD1     		bne	.L59
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Disable ADC control of the Internal High Speed oscillator HSI14 */
 555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14ADC_DISABLE();
 944              		.loc 1 555 7
 945 041a 814B     		ldr	r3, .L79
 946 041c 5A6B     		ldr	r2, [r3, #52]
 947 041e 804B     		ldr	r3, .L79
 948 0420 0421     		movs	r1, #4
 949 0422 0A43     		orrs	r2, r1
 950 0424 5A63     		str	r2, [r3, #52]
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Enable the Internal High Speed oscillator (HSI). */
 558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14_ENABLE();
 951              		.loc 1 558 7
 952 0426 7E4B     		ldr	r3, .L79
 953 0428 5A6B     		ldr	r2, [r3, #52]
 954 042a 7D4B     		ldr	r3, .L79
 955 042c 0121     		movs	r1, #1
 956 042e 0A43     		orrs	r2, r1
 957 0430 5A63     		str	r2, [r3, #52]
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 28


 561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 958              		.loc 1 561 19
 959 0432 FFF7FEFF 		bl	HAL_GetTick
 960 0436 0300     		movs	r3, r0
 961 0438 BB61     		str	r3, [r7, #24]
 562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till HSI is ready */  
 564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 962              		.loc 1 564 12
 963 043a 08E0     		b	.L60
 964              	.L61:
 565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 965              		.loc 1 566 13
 966 043c FFF7FEFF 		bl	HAL_GetTick
 967 0440 0200     		movs	r2, r0
 968              		.loc 1 566 27 discriminator 1
 969 0442 BB69     		ldr	r3, [r7, #24]
 970 0444 D31A     		subs	r3, r2, r3
 971              		.loc 1 566 11 discriminator 1
 972 0446 022B     		cmp	r3, #2
 973 0448 01D9     		bls	.L60
 567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 974              		.loc 1 568 18
 975 044a 0323     		movs	r3, #3
 976 044c E3E0     		b	.L14
 977              	.L60:
 564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 978              		.loc 1 564 13
 979 044e 744B     		ldr	r3, .L79
 980 0450 5B6B     		ldr	r3, [r3, #52]
 981 0452 0222     		movs	r2, #2
 982 0454 1340     		ands	r3, r2
 564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 983              		.loc 1 564 51
 984 0456 F1D0     		beq	.L61
 569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }      
 570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       } 
 571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
 573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 985              		.loc 1 573 7
 986 0458 714B     		ldr	r3, .L79
 987 045a 5B6B     		ldr	r3, [r3, #52]
 988 045c F822     		movs	r2, #248
 989 045e 9343     		bics	r3, r2
 990 0460 1900     		movs	r1, r3
 991 0462 7B68     		ldr	r3, [r7, #4]
 992 0464 9B69     		ldr	r3, [r3, #24]
 993 0466 DA00     		lsls	r2, r3, #3
 994 0468 6D4B     		ldr	r3, .L79
 995 046a 0A43     		orrs	r2, r1
 996 046c 5A63     		str	r2, [r3, #52]
 997 046e 34E0     		b	.L58
 998              	.L59:
 574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 29


 575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ADC_CONTROL)
 999              		.loc 1 575 30
 1000 0470 7B68     		ldr	r3, [r7, #4]
 1001 0472 5B69     		ldr	r3, [r3, #20]
 1002              		.loc 1 575 12
 1003 0474 0533     		adds	r3, r3, #5
 1004 0476 11D1     		bne	.L62
 576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Enable ADC control of the Internal High Speed oscillator HSI14 */
 578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14ADC_ENABLE();
 1005              		.loc 1 578 7
 1006 0478 694B     		ldr	r3, .L79
 1007 047a 5A6B     		ldr	r2, [r3, #52]
 1008 047c 684B     		ldr	r3, .L79
 1009 047e 0421     		movs	r1, #4
 1010 0480 8A43     		bics	r2, r1
 1011 0482 5A63     		str	r2, [r3, #52]
 579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
 581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 1012              		.loc 1 581 7
 1013 0484 664B     		ldr	r3, .L79
 1014 0486 5B6B     		ldr	r3, [r3, #52]
 1015 0488 F822     		movs	r2, #248
 1016 048a 9343     		bics	r3, r2
 1017 048c 1900     		movs	r1, r3
 1018 048e 7B68     		ldr	r3, [r7, #4]
 1019 0490 9B69     		ldr	r3, [r3, #24]
 1020 0492 DA00     		lsls	r2, r3, #3
 1021 0494 624B     		ldr	r3, .L79
 1022 0496 0A43     		orrs	r2, r1
 1023 0498 5A63     		str	r2, [r3, #52]
 1024 049a 1EE0     		b	.L58
 1025              	.L62:
 582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Disable ADC control of the Internal High Speed oscillator HSI14 */
 586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14ADC_DISABLE();
 1026              		.loc 1 586 7
 1027 049c 604B     		ldr	r3, .L79
 1028 049e 5A6B     		ldr	r2, [r3, #52]
 1029 04a0 5F4B     		ldr	r3, .L79
 1030 04a2 0421     		movs	r1, #4
 1031 04a4 0A43     		orrs	r2, r1
 1032 04a6 5A63     		str	r2, [r3, #52]
 587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Disable the Internal High Speed oscillator (HSI). */
 589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14_DISABLE();
 1033              		.loc 1 589 7
 1034 04a8 5D4B     		ldr	r3, .L79
 1035 04aa 5A6B     		ldr	r2, [r3, #52]
 1036 04ac 5C4B     		ldr	r3, .L79
 1037 04ae 0121     		movs	r1, #1
 1038 04b0 8A43     		bics	r2, r1
 1039 04b2 5A63     		str	r2, [r3, #52]
 590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 30


 591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1040              		.loc 1 592 19
 1041 04b4 FFF7FEFF 		bl	HAL_GetTick
 1042 04b8 0300     		movs	r3, r0
 1043 04ba BB61     		str	r3, [r7, #24]
 593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till HSI is ready */  
 595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 1044              		.loc 1 595 12
 1045 04bc 08E0     		b	.L63
 1046              	.L64:
 596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 1047              		.loc 1 597 13
 1048 04be FFF7FEFF 		bl	HAL_GetTick
 1049 04c2 0200     		movs	r2, r0
 1050              		.loc 1 597 27 discriminator 1
 1051 04c4 BB69     		ldr	r3, [r7, #24]
 1052 04c6 D31A     		subs	r3, r2, r3
 1053              		.loc 1 597 11 discriminator 1
 1054 04c8 022B     		cmp	r3, #2
 1055 04ca 01D9     		bls	.L63
 598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1056              		.loc 1 599 18
 1057 04cc 0323     		movs	r3, #3
 1058 04ce A2E0     		b	.L14
 1059              	.L63:
 595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1060              		.loc 1 595 13
 1061 04d0 534B     		ldr	r3, .L79
 1062 04d2 5B6B     		ldr	r3, [r3, #52]
 1063 04d4 0222     		movs	r2, #2
 1064 04d6 1340     		ands	r3, r2
 595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1065              		.loc 1 595 51
 1066 04d8 F1D1     		bne	.L64
 1067              	.L58:
 600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
 606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*----------------------------- HSI48 Configuration --------------------------*/
 607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));
 611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* When the HSI48 is used as system clock it is not allowed to be disabled */
 613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI48) ||
 614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSC
 615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET) && (RCC_OscInitStruct->HSI48State != RCC_
 617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 31


 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSI48 State */
 624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (HSI48). */
 627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI48_ENABLE();
 628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSI48 is ready */  
 633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         } 
 640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI48). */
 644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI48_DISABLE();
 645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSI48 is ready */  
 650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET)
 651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
 661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        
 662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
 664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 1068              		.loc 1 665 30
 1069 04da 7B68     		ldr	r3, [r7, #4]
 1070 04dc 1B6A     		ldr	r3, [r3, #32]
 1071              		.loc 1 665 6
 1072 04de 002B     		cmp	r3, #0
 1073 04e0 00D1     		bne	.LCB942
 1074 04e2 97E0     		b	.L65	@long jump
 1075              	.LCB942:
 666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 32


 667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 1076              		.loc 1 668 8
 1077 04e4 4E4B     		ldr	r3, .L79
 1078 04e6 5B68     		ldr	r3, [r3, #4]
 1079 04e8 0C22     		movs	r2, #12
 1080 04ea 1340     		ands	r3, r2
 1081              		.loc 1 668 7
 1082 04ec 082B     		cmp	r3, #8
 1083 04ee 00D1     		bne	.LCB948
 1084 04f0 6BE0     		b	.L66	@long jump
 1085              	.LCB948:
 669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     { 
 670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 1086              		.loc 1 670 33
 1087 04f2 7B68     		ldr	r3, [r7, #4]
 1088 04f4 1B6A     		ldr	r3, [r3, #32]
 1089              		.loc 1 670 9
 1090 04f6 022B     		cmp	r3, #2
 1091 04f8 4CD1     		bne	.L67
 671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Check the parameters */
 673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
 676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Disable the main PLL. */
 678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 1092              		.loc 1 678 9
 1093 04fa 494B     		ldr	r3, .L79
 1094 04fc 1A68     		ldr	r2, [r3]
 1095 04fe 484B     		ldr	r3, .L79
 1096 0500 4A49     		ldr	r1, .L79+12
 1097 0502 0A40     		ands	r2, r1
 1098 0504 1A60     		str	r2, [r3]
 679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1099              		.loc 1 681 21
 1100 0506 FFF7FEFF 		bl	HAL_GetTick
 1101 050a 0300     		movs	r3, r0
 1102 050c BB61     		str	r3, [r7, #24]
 682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 1103              		.loc 1 684 14
 1104 050e 08E0     		b	.L68
 1105              	.L69:
 685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1106              		.loc 1 686 15
 1107 0510 FFF7FEFF 		bl	HAL_GetTick
 1108 0514 0200     		movs	r2, r0
 1109              		.loc 1 686 29 discriminator 1
 1110 0516 BB69     		ldr	r3, [r7, #24]
 1111 0518 D31A     		subs	r3, r2, r3
 1112              		.loc 1 686 13 discriminator 1
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 33


 1113 051a 022B     		cmp	r3, #2
 1114 051c 01D9     		bls	.L68
 687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1115              		.loc 1 688 20
 1116 051e 0323     		movs	r3, #3
 1117 0520 79E0     		b	.L14
 1118              	.L68:
 684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 1119              		.loc 1 684 15
 1120 0522 3F4B     		ldr	r3, .L79
 1121 0524 1A68     		ldr	r2, [r3]
 1122 0526 8023     		movs	r3, #128
 1123 0528 9B04     		lsls	r3, r3, #18
 1124 052a 1340     		ands	r3, r2
 684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 1125              		.loc 1 684 52
 1126 052c F0D1     		bne	.L69
 689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Configure the main PLL clock source, predivider and multiplication factor. */
 693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 1127              		.loc 1 693 9
 1128 052e 3C4B     		ldr	r3, .L79
 1129 0530 DB6A     		ldr	r3, [r3, #44]
 1130 0532 0F22     		movs	r2, #15
 1131 0534 9343     		bics	r3, r2
 1132 0536 1900     		movs	r1, r3
 1133 0538 7B68     		ldr	r3, [r7, #4]
 1134 053a DA6A     		ldr	r2, [r3, #44]
 1135 053c 384B     		ldr	r3, .L79
 1136 053e 0A43     		orrs	r2, r1
 1137 0540 DA62     		str	r2, [r3, #44]
 1138 0542 374B     		ldr	r3, .L79
 1139 0544 5B68     		ldr	r3, [r3, #4]
 1140 0546 3A4A     		ldr	r2, .L79+16
 1141 0548 1340     		ands	r3, r2
 1142 054a 1900     		movs	r1, r3
 1143 054c 7B68     		ldr	r3, [r7, #4]
 1144 054e 9A6A     		ldr	r2, [r3, #40]
 1145 0550 7B68     		ldr	r3, [r7, #4]
 1146 0552 5B6A     		ldr	r3, [r3, #36]
 1147 0554 1A43     		orrs	r2, r3
 1148 0556 324B     		ldr	r3, .L79
 1149 0558 0A43     		orrs	r2, r1
 1150 055a 5A60     		str	r2, [r3, #4]
 694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLMUL);
 696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Enable the main PLL. */
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 1151              		.loc 1 697 9
 1152 055c 304B     		ldr	r3, .L79
 1153 055e 1A68     		ldr	r2, [r3]
 1154 0560 2F4B     		ldr	r3, .L79
 1155 0562 8021     		movs	r1, #128
 1156 0564 4904     		lsls	r1, r1, #17
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 34


 1157 0566 0A43     		orrs	r2, r1
 1158 0568 1A60     		str	r2, [r3]
 698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1159              		.loc 1 700 21
 1160 056a FFF7FEFF 		bl	HAL_GetTick
 1161 056e 0300     		movs	r3, r0
 1162 0570 BB61     		str	r3, [r7, #24]
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till PLL is ready */
 703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 1163              		.loc 1 703 14
 1164 0572 08E0     		b	.L70
 1165              	.L71:
 704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1166              		.loc 1 705 15
 1167 0574 FFF7FEFF 		bl	HAL_GetTick
 1168 0578 0200     		movs	r2, r0
 1169              		.loc 1 705 29 discriminator 1
 1170 057a BB69     		ldr	r3, [r7, #24]
 1171 057c D31A     		subs	r3, r2, r3
 1172              		.loc 1 705 13 discriminator 1
 1173 057e 022B     		cmp	r3, #2
 1174 0580 01D9     		bls	.L70
 706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1175              		.loc 1 707 20
 1176 0582 0323     		movs	r3, #3
 1177 0584 47E0     		b	.L14
 1178              	.L70:
 703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 1179              		.loc 1 703 15
 1180 0586 264B     		ldr	r3, .L79
 1181 0588 1A68     		ldr	r2, [r3]
 1182 058a 8023     		movs	r3, #128
 1183 058c 9B04     		lsls	r3, r3, #18
 1184 058e 1340     		ands	r3, r2
 703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 1185              		.loc 1 703 52
 1186 0590 F0D0     		beq	.L71
 1187 0592 3FE0     		b	.L65
 1188              	.L67:
 708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Disable the main PLL. */
 714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 1189              		.loc 1 714 9
 1190 0594 224B     		ldr	r3, .L79
 1191 0596 1A68     		ldr	r2, [r3]
 1192 0598 214B     		ldr	r3, .L79
 1193 059a 2449     		ldr	r1, .L79+12
 1194 059c 0A40     		ands	r2, r1
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 35


 1195 059e 1A60     		str	r2, [r3]
 715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****  
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1196              		.loc 1 717 21
 1197 05a0 FFF7FEFF 		bl	HAL_GetTick
 1198 05a4 0300     		movs	r3, r0
 1199 05a6 BB61     		str	r3, [r7, #24]
 718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till PLL is disabled */  
 720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 1200              		.loc 1 720 14
 1201 05a8 08E0     		b	.L72
 1202              	.L73:
 721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1203              		.loc 1 722 15
 1204 05aa FFF7FEFF 		bl	HAL_GetTick
 1205 05ae 0200     		movs	r2, r0
 1206              		.loc 1 722 29 discriminator 1
 1207 05b0 BB69     		ldr	r3, [r7, #24]
 1208 05b2 D31A     		subs	r3, r2, r3
 1209              		.loc 1 722 13 discriminator 1
 1210 05b4 022B     		cmp	r3, #2
 1211 05b6 01D9     		bls	.L72
 723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1212              		.loc 1 724 20
 1213 05b8 0323     		movs	r3, #3
 1214 05ba 2CE0     		b	.L14
 1215              	.L72:
 720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 1216              		.loc 1 720 15
 1217 05bc 184B     		ldr	r3, .L79
 1218 05be 1A68     		ldr	r2, [r3]
 1219 05c0 8023     		movs	r3, #128
 1220 05c2 9B04     		lsls	r3, r3, #18
 1221 05c4 1340     		ands	r3, r2
 720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 1222              		.loc 1 720 52
 1223 05c6 F0D1     		bne	.L73
 1224 05c8 24E0     		b	.L65
 1225              	.L66:
 725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check if there is a request to disable the PLL used as System clock source */
 732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 1226              		.loc 1 732 33
 1227 05ca 7B68     		ldr	r3, [r7, #4]
 1228 05cc 1B6A     		ldr	r3, [r3, #32]
 1229              		.loc 1 732 9
 1230 05ce 012B     		cmp	r3, #1
 1231 05d0 01D1     		bne	.L74
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 36


 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 1232              		.loc 1 734 16
 1233 05d2 0123     		movs	r3, #1
 1234 05d4 1FE0     		b	.L14
 1235              	.L74:
 735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Do not return HAL_ERROR if request repeats the current configuration */
 739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pll_config  = RCC->CFGR;
 1236              		.loc 1 739 26
 1237 05d6 124B     		ldr	r3, .L79
 1238              		.loc 1 739 21
 1239 05d8 5B68     		ldr	r3, [r3, #4]
 1240 05da 7B61     		str	r3, [r7, #20]
 740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pll_config2 = RCC->CFGR2;
 1241              		.loc 1 740 26
 1242 05dc 104B     		ldr	r3, .L79
 1243              		.loc 1 740 21
 1244 05de DB6A     		ldr	r3, [r3, #44]
 1245 05e0 3B61     		str	r3, [r7, #16]
 741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 1246              		.loc 1 741 13
 1247 05e2 7A69     		ldr	r2, [r7, #20]
 1248 05e4 8023     		movs	r3, #128
 1249 05e6 5B02     		lsls	r3, r3, #9
 1250 05e8 1A40     		ands	r2, r3
 1251              		.loc 1 741 78
 1252 05ea 7B68     		ldr	r3, [r7, #4]
 1253 05ec 5B6A     		ldr	r3, [r3, #36]
 1254              		.loc 1 741 11
 1255 05ee 9A42     		cmp	r2, r3
 1256 05f0 0ED1     		bne	.L75
 742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****            (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 1257              		.loc 1 742 13
 1258 05f2 3B69     		ldr	r3, [r7, #16]
 1259 05f4 0F22     		movs	r2, #15
 1260 05f6 1A40     		ands	r2, r3
 1261              		.loc 1 742 78
 1262 05f8 7B68     		ldr	r3, [r7, #4]
 1263 05fa DB6A     		ldr	r3, [r3, #44]
 741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 1264              		.loc 1 741 90 discriminator 1
 1265 05fc 9A42     		cmp	r2, r3
 1266 05fe 07D1     		bne	.L75
 743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****            (READ_BIT(pll_config,  RCC_CFGR_PLLMUL)  != RCC_OscInitStruct->PLL.PLLMUL))
 1267              		.loc 1 743 13
 1268 0600 7A69     		ldr	r2, [r7, #20]
 1269 0602 F023     		movs	r3, #240
 1270 0604 9B03     		lsls	r3, r3, #14
 1271 0606 1A40     		ands	r2, r3
 1272              		.loc 1 743 78
 1273 0608 7B68     		ldr	r3, [r7, #4]
 1274 060a 9B6A     		ldr	r3, [r3, #40]
 742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****            (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 1275              		.loc 1 742 90
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 37


 1276 060c 9A42     		cmp	r2, r3
 1277 060e 01D0     		beq	.L65
 1278              	.L75:
 744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_ERROR;
 1279              		.loc 1 745 18
 1280 0610 0123     		movs	r3, #1
 1281 0612 00E0     		b	.L14
 1282              	.L65:
 746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return HAL_OK;
 1283              		.loc 1 751 10
 1284 0614 0023     		movs	r3, #0
 1285              	.L14:
 752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1286              		.loc 1 752 1
 1287 0616 1800     		movs	r0, r3
 1288 0618 BD46     		mov	sp, r7
 1289 061a 08B0     		add	sp, sp, #32
 1290              		@ sp needed
 1291 061c 80BD     		pop	{r7, pc}
 1292              	.L80:
 1293 061e C046     		.align	2
 1294              	.L79:
 1295 0620 00100240 		.word	1073876992
 1296 0624 88130000 		.word	5000
 1297 0628 FFFFFFEF 		.word	-268435457
 1298 062c FFFFFFFE 		.word	-16777217
 1299 0630 FFFFC2FF 		.word	-3997697
 1300              		.cfi_endproc
 1301              	.LFE41:
 1303              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1304              		.align	1
 1305              		.global	HAL_RCC_ClockConfig
 1306              		.syntax unified
 1307              		.code	16
 1308              		.thumb_func
 1310              	HAL_RCC_ClockConfig:
 1311              	.LFB42:
 753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB buses clocks according to the specified 
 756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  FLatency FLASH Latency                   
 760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          The value of this parameter depend on device used within the same series
 761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
 762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         and updated by @ref HAL_RCC_GetHCLKFreq() function called within this function
 763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
 764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         start-up from Reset, wake-up from STOP and STANDBY mode, or in case
 766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 38


 767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           
 769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         clock source is ready (clock stable after start-up delay or PLL locked). 
 771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         occur when the clock source will be ready. 
 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
 774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         currently used as system clock source.
 775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval HAL status
 776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1312              		.loc 1 778 1
 1313              		.cfi_startproc
 1314              		@ args = 0, pretend = 0, frame = 16
 1315              		@ frame_needed = 1, uses_anonymous_args = 0
 1316 0000 80B5     		push	{r7, lr}
 1317              	.LCFI6:
 1318              		.cfi_def_cfa_offset 8
 1319              		.cfi_offset 7, -8
 1320              		.cfi_offset 14, -4
 1321 0002 84B0     		sub	sp, sp, #16
 1322              	.LCFI7:
 1323              		.cfi_def_cfa_offset 24
 1324 0004 00AF     		add	r7, sp, #0
 1325              	.LCFI8:
 1326              		.cfi_def_cfa_register 7
 1327 0006 7860     		str	r0, [r7, #4]
 1328 0008 3960     		str	r1, [r7]
 779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t tickstart;
 780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check Null pointer */
 782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(RCC_ClkInitStruct == NULL)
 1329              		.loc 1 782 5
 1330 000a 7B68     		ldr	r3, [r7, #4]
 1331 000c 002B     		cmp	r3, #0
 1332 000e 01D1     		bne	.L82
 783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     return HAL_ERROR;
 1333              		.loc 1 784 12
 1334 0010 0123     		movs	r3, #1
 1335 0012 B3E0     		b	.L83
 1336              	.L82:
 785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
 788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   must be correctly programmed according to the frequency of the CPU clock 
 793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     (HCLK) of the device. */
 794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(FLatency > __HAL_FLASH_GET_LATENCY())
 1337              		.loc 1 796 17
 1338 0014 5B4B     		ldr	r3, .L95
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 39


 1339 0016 1B68     		ldr	r3, [r3]
 1340 0018 0122     		movs	r2, #1
 1341 001a 1340     		ands	r3, r2
 1342              		.loc 1 796 5
 1343 001c 3A68     		ldr	r2, [r7]
 1344 001e 9A42     		cmp	r2, r3
 1345 0020 11D9     		bls	.L84
 797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {    
 798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1346              		.loc 1 799 5
 1347 0022 584B     		ldr	r3, .L95
 1348 0024 1B68     		ldr	r3, [r3]
 1349 0026 0122     		movs	r2, #1
 1350 0028 9343     		bics	r3, r2
 1351 002a 1900     		movs	r1, r3
 1352 002c 554B     		ldr	r3, .L95
 1353 002e 3A68     		ldr	r2, [r7]
 1354 0030 0A43     		orrs	r2, r1
 1355 0032 1A60     		str	r2, [r3]
 800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 1356              		.loc 1 803 8
 1357 0034 534B     		ldr	r3, .L95
 1358 0036 1B68     		ldr	r3, [r3]
 1359 0038 0122     		movs	r2, #1
 1360 003a 1340     		ands	r3, r2
 1361              		.loc 1 803 7
 1362 003c 3A68     		ldr	r2, [r7]
 1363 003e 9A42     		cmp	r2, r3
 1364 0040 01D0     		beq	.L84
 804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       return HAL_ERROR;
 1365              		.loc 1 805 14
 1366 0042 0123     		movs	r3, #1
 1367 0044 9AE0     		b	.L83
 1368              	.L84:
 806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 1369              		.loc 1 810 25
 1370 0046 7B68     		ldr	r3, [r7, #4]
 1371 0048 1B68     		ldr	r3, [r3]
 1372              		.loc 1 810 38
 1373 004a 0222     		movs	r2, #2
 1374 004c 1340     		ands	r3, r2
 1375              		.loc 1 810 5
 1376 004e 15D0     		beq	.L85
 811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Set the highest APB divider in order to ensure that we do not go through
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        a non-spec phase whatever we decrease or increase HCLK. */
 814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1377              		.loc 1 814 27
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 40


 1378 0050 7B68     		ldr	r3, [r7, #4]
 1379 0052 1B68     		ldr	r3, [r3]
 1380              		.loc 1 814 40
 1381 0054 0422     		movs	r2, #4
 1382 0056 1340     		ands	r3, r2
 1383              		.loc 1 814 7
 1384 0058 06D0     		beq	.L86
 815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_HCLK_DIV16);
 1385              		.loc 1 816 7
 1386 005a 4B4B     		ldr	r3, .L95+4
 1387 005c 5A68     		ldr	r2, [r3, #4]
 1388 005e 4A4B     		ldr	r3, .L95+4
 1389 0060 E021     		movs	r1, #224
 1390 0062 C900     		lsls	r1, r1, #3
 1391 0064 0A43     		orrs	r2, r1
 1392 0066 5A60     		str	r2, [r3, #4]
 1393              	.L86:
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Set the new HCLK clock divider */
 820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 1394              		.loc 1 821 5
 1395 0068 474B     		ldr	r3, .L95+4
 1396 006a 5B68     		ldr	r3, [r3, #4]
 1397 006c F022     		movs	r2, #240
 1398 006e 9343     		bics	r3, r2
 1399 0070 1900     		movs	r1, r3
 1400 0072 7B68     		ldr	r3, [r7, #4]
 1401 0074 9A68     		ldr	r2, [r3, #8]
 1402 0076 444B     		ldr	r3, .L95+4
 1403 0078 0A43     		orrs	r2, r1
 1404 007a 5A60     		str	r2, [r3, #4]
 1405              	.L85:
 822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/ 
 825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 1406              		.loc 1 825 25
 1407 007c 7B68     		ldr	r3, [r7, #4]
 1408 007e 1B68     		ldr	r3, [r3]
 1409              		.loc 1 825 38
 1410 0080 0122     		movs	r2, #1
 1411 0082 1340     		ands	r3, r2
 1412              		.loc 1 825 5
 1413 0084 40D0     		beq	.L87
 826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 1414              		.loc 1 830 25
 1415 0086 7B68     		ldr	r3, [r7, #4]
 1416 0088 5B68     		ldr	r3, [r3, #4]
 1417              		.loc 1 830 7
 1418 008a 012B     		cmp	r3, #1
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 41


 1419 008c 07D1     		bne	.L88
 831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSE ready flag */  
 833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 1420              		.loc 1 833 10
 1421 008e 3E4B     		ldr	r3, .L95+4
 1422 0090 1A68     		ldr	r2, [r3]
 1423 0092 8023     		movs	r3, #128
 1424 0094 9B02     		lsls	r3, r3, #10
 1425 0096 1340     		ands	r3, r2
 1426              		.loc 1 833 9
 1427 0098 14D1     		bne	.L89
 834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 1428              		.loc 1 835 16
 1429 009a 0123     		movs	r3, #1
 1430 009c 6EE0     		b	.L83
 1431              	.L88:
 836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 1432              		.loc 1 839 30
 1433 009e 7B68     		ldr	r3, [r7, #4]
 1434 00a0 5B68     		ldr	r3, [r3, #4]
 1435              		.loc 1 839 12
 1436 00a2 022B     		cmp	r3, #2
 1437 00a4 07D1     		bne	.L90
 840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the PLL ready flag */  
 842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 1438              		.loc 1 842 10
 1439 00a6 384B     		ldr	r3, .L95+4
 1440 00a8 1A68     		ldr	r2, [r3]
 1441 00aa 8023     		movs	r3, #128
 1442 00ac 9B04     		lsls	r3, r3, #18
 1443 00ae 1340     		ands	r3, r2
 1444              		.loc 1 842 9
 1445 00b0 08D1     		bne	.L89
 843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 1446              		.loc 1 844 16
 1447 00b2 0123     		movs	r3, #1
 1448 00b4 62E0     		b	.L83
 1449              	.L90:
 845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_CFGR_SWS_HSI48)
 848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* HSI48 is selected as System Clock Source */
 849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI48)
 850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSI48 ready flag */
 852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 42


 857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_CFGR_SWS_HSI48 */
 858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSI ready flag */  
 862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 1450              		.loc 1 862 10
 1451 00b6 344B     		ldr	r3, .L95+4
 1452 00b8 1B68     		ldr	r3, [r3]
 1453 00ba 0222     		movs	r2, #2
 1454 00bc 1340     		ands	r3, r2
 1455              		.loc 1 862 9
 1456 00be 01D1     		bne	.L89
 863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 1457              		.loc 1 864 16
 1458 00c0 0123     		movs	r3, #1
 1459 00c2 5BE0     		b	.L83
 1460              	.L89:
 865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 1461              		.loc 1 867 5
 1462 00c4 304B     		ldr	r3, .L95+4
 1463 00c6 5B68     		ldr	r3, [r3, #4]
 1464 00c8 0322     		movs	r2, #3
 1465 00ca 9343     		bics	r3, r2
 1466 00cc 1900     		movs	r1, r3
 1467 00ce 7B68     		ldr	r3, [r7, #4]
 1468 00d0 5A68     		ldr	r2, [r3, #4]
 1469 00d2 2D4B     		ldr	r3, .L95+4
 1470 00d4 0A43     		orrs	r2, r1
 1471 00d6 5A60     		str	r2, [r3, #4]
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Get Start Tick */
 870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 1472              		.loc 1 870 17
 1473 00d8 FFF7FEFF 		bl	HAL_GetTick
 1474 00dc 0300     		movs	r3, r0
 1475 00de FB60     		str	r3, [r7, #12]
 871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 1476              		.loc 1 872 11
 1477 00e0 09E0     		b	.L91
 1478              	.L92:
 873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1479              		.loc 1 874 11
 1480 00e2 FFF7FEFF 		bl	HAL_GetTick
 1481 00e6 0200     		movs	r2, r0
 1482              		.loc 1 874 25 discriminator 1
 1483 00e8 FB68     		ldr	r3, [r7, #12]
 1484 00ea D31A     		subs	r3, r2, r3
 1485              		.loc 1 874 9 discriminator 1
 1486 00ec 274A     		ldr	r2, .L95+8
 1487 00ee 9342     		cmp	r3, r2
 1488 00f0 01D9     		bls	.L91
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 43


 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_TIMEOUT;
 1489              		.loc 1 876 16
 1490 00f2 0323     		movs	r3, #3
 1491 00f4 42E0     		b	.L83
 1492              	.L91:
 872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1493              		.loc 1 872 12
 1494 00f6 244B     		ldr	r3, .L95+4
 1495 00f8 5B68     		ldr	r3, [r3, #4]
 1496 00fa 0C22     		movs	r2, #12
 1497 00fc 1A40     		ands	r2, r3
 872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1498              		.loc 1 872 63
 1499 00fe 7B68     		ldr	r3, [r7, #4]
 1500 0100 5B68     		ldr	r3, [r3, #4]
 872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1501              		.loc 1 872 78
 1502 0102 9B00     		lsls	r3, r3, #2
 872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1503              		.loc 1 872 42
 1504 0104 9A42     		cmp	r2, r3
 1505 0106 ECD1     		bne	.L92
 1506              	.L87:
 877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(FLatency < __HAL_FLASH_GET_LATENCY())
 1507              		.loc 1 882 17
 1508 0108 1E4B     		ldr	r3, .L95
 1509 010a 1B68     		ldr	r3, [r3]
 1510 010c 0122     		movs	r2, #1
 1511 010e 1340     		ands	r3, r2
 1512              		.loc 1 882 5
 1513 0110 3A68     		ldr	r2, [r7]
 1514 0112 9A42     		cmp	r2, r3
 1515 0114 11D2     		bcs	.L93
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {    
 884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1516              		.loc 1 885 5
 1517 0116 1B4B     		ldr	r3, .L95
 1518 0118 1B68     		ldr	r3, [r3]
 1519 011a 0122     		movs	r2, #1
 1520 011c 9343     		bics	r3, r2
 1521 011e 1900     		movs	r1, r3
 1522 0120 184B     		ldr	r3, .L95
 1523 0122 3A68     		ldr	r2, [r7]
 1524 0124 0A43     		orrs	r2, r1
 1525 0126 1A60     		str	r2, [r3]
 886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 1526              		.loc 1 889 8
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 44


 1527 0128 164B     		ldr	r3, .L95
 1528 012a 1B68     		ldr	r3, [r3]
 1529 012c 0122     		movs	r2, #1
 1530 012e 1340     		ands	r3, r2
 1531              		.loc 1 889 7
 1532 0130 3A68     		ldr	r2, [r7]
 1533 0132 9A42     		cmp	r2, r3
 1534 0134 01D0     		beq	.L93
 890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       return HAL_ERROR;
 1535              		.loc 1 891 14
 1536 0136 0123     		movs	r3, #1
 1537 0138 20E0     		b	.L83
 1538              	.L93:
 892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }    
 894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/ 
 896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1539              		.loc 1 896 25
 1540 013a 7B68     		ldr	r3, [r7, #4]
 1541 013c 1B68     		ldr	r3, [r3]
 1542              		.loc 1 896 38
 1543 013e 0422     		movs	r2, #4
 1544 0140 1340     		ands	r3, r2
 1545              		.loc 1 896 5
 1546 0142 09D0     		beq	.L94
 897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 1547              		.loc 1 899 5
 1548 0144 104B     		ldr	r3, .L95+4
 1549 0146 5B68     		ldr	r3, [r3, #4]
 1550 0148 114A     		ldr	r2, .L95+12
 1551 014a 1340     		ands	r3, r2
 1552 014c 1900     		movs	r1, r3
 1553 014e 7B68     		ldr	r3, [r7, #4]
 1554 0150 DA68     		ldr	r2, [r3, #12]
 1555 0152 0D4B     		ldr	r3, .L95+4
 1556 0154 0A43     		orrs	r2, r1
 1557 0156 5A60     		str	r2, [r3, #4]
 1558              	.L94:
 900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 1559              		.loc 1 903 21
 1560 0158 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1561 015c 0100     		movs	r1, r0
 1562              		.loc 1 903 68 discriminator 1
 1563 015e 0A4B     		ldr	r3, .L95+4
 1564 0160 5B68     		ldr	r3, [r3, #4]
 1565              		.loc 1 903 91 discriminator 1
 1566 0162 1B09     		lsrs	r3, r3, #4
 1567 0164 0F22     		movs	r2, #15
 1568 0166 1340     		ands	r3, r2
 1569              		.loc 1 903 63 discriminator 1
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 45


 1570 0168 0A4A     		ldr	r2, .L95+16
 1571 016a D35C     		ldrb	r3, [r2, r3]
 1572              		.loc 1 903 47 discriminator 1
 1573 016c 0A00     		movs	r2, r1
 1574 016e DA40     		lsrs	r2, r2, r3
 1575              		.loc 1 903 19 discriminator 1
 1576 0170 094B     		ldr	r3, .L95+20
 1577 0172 1A60     		str	r2, [r3]
 904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   HAL_InitTick (TICK_INT_PRIORITY);
 1578              		.loc 1 906 3
 1579 0174 0320     		movs	r0, #3
 1580 0176 FFF7FEFF 		bl	HAL_InitTick
 907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return HAL_OK;
 1581              		.loc 1 908 10
 1582 017a 0023     		movs	r3, #0
 1583              	.L83:
 909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1584              		.loc 1 909 1
 1585 017c 1800     		movs	r0, r3
 1586 017e BD46     		mov	sp, r7
 1587 0180 04B0     		add	sp, sp, #16
 1588              		@ sp needed
 1589 0182 80BD     		pop	{r7, pc}
 1590              	.L96:
 1591              		.align	2
 1592              	.L95:
 1593 0184 00200240 		.word	1073881088
 1594 0188 00100240 		.word	1073876992
 1595 018c 88130000 		.word	5000
 1596 0190 FFF8FFFF 		.word	-1793
 1597 0194 00000000 		.word	AHBPrescTable
 1598 0198 00000000 		.word	SystemCoreClock
 1599              		.cfi_endproc
 1600              	.LFE42:
 1602              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1603              		.align	1
 1604              		.global	HAL_RCC_MCOConfig
 1605              		.syntax unified
 1606              		.code	16
 1607              		.thumb_func
 1609              	HAL_RCC_MCOConfig:
 1610              	.LFB43:
 910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @}
 913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *  @brief   RCC clocks control functions
 917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
 918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @verbatim   
 919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ===============================================================================
 920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                   ##### Peripheral Control functions #####
 921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ===============================================================================  
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 46


 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]
 923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks 
 924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     frequencies.
 925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @endverbatim
 927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
 928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_CFGR_MCOPRE)
 931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected
 940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System Clock selected as MCO clock
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI         LSI selected as MCO clock
 944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE         LSE selected as MCO clock
 945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI14       HSI14 selected as MCO clock
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @if STM32F042x6
 947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F048xx
 950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F071xB
 953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F072xB
 956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F078xx
 959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F091xC
 962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F098xx
 965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F030x6
 968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F030xC
 970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F031x6
 972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F038xx
 974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F070x6
 976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F070xB
 978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 47


 979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @endif
 980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK_DIV2 PLLCLK Divided by 2 selected as MCO clock
 981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1   no division applied to MCO clock
 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_2   division by 2 applied to MCO clock
 985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_4   division by 4 applied to MCO clock
 986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_8   division by 8 applied to MCO clock
 987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_16  division by 16 applied to MCO clock
 988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_32  division by 32 applied to MCO clock
 989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_64  division by 64 applied to MCO clock
 990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_128 division by 128 applied to MCO clock
 991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #else
 994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
1000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
1002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected as MCO clock
1003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System clock selected as MCO clock
1004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
1005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
1006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI         LSI selected as MCO clock
1007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE         LSE selected as MCO clock
1008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI14       HSI14 selected as MCO clock
1009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK_DIV2 PLLCLK Divided by 2 selected as MCO clock
1010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
1011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
1012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1 no division applied to MCO clock
1013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif
1016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1611              		.loc 1 1017 1
 1612              		.cfi_startproc
 1613              		@ args = 0, pretend = 0, frame = 40
 1614              		@ frame_needed = 1, uses_anonymous_args = 0
 1615 0000 80B5     		push	{r7, lr}
 1616              	.LCFI9:
 1617              		.cfi_def_cfa_offset 8
 1618              		.cfi_offset 7, -8
 1619              		.cfi_offset 14, -4
 1620 0002 8AB0     		sub	sp, sp, #40
 1621              	.LCFI10:
 1622              		.cfi_def_cfa_offset 48
 1623 0004 00AF     		add	r7, sp, #0
 1624              	.LCFI11:
 1625              		.cfi_def_cfa_register 7
 1626 0006 F860     		str	r0, [r7, #12]
 1627 0008 B960     		str	r1, [r7, #8]
 1628 000a 7A60     		str	r2, [r7, #4]
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 48


1018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   GPIO_InitTypeDef gpio;
1019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
1021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
1022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
1024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Prevent unused argument(s) compilation warning */
1026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   UNUSED(RCC_MCOx);
1027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Configure the MCO1 pin in alternate function mode */
1029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Mode      = GPIO_MODE_AF_PP;
 1629              		.loc 1 1029 18
 1630 000c 1420     		movs	r0, #20
 1631 000e 3B18     		adds	r3, r7, r0
 1632 0010 0222     		movs	r2, #2
 1633 0012 5A60     		str	r2, [r3, #4]
1030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Speed     = GPIO_SPEED_FREQ_HIGH;
 1634              		.loc 1 1030 18
 1635 0014 3B18     		adds	r3, r7, r0
 1636 0016 0322     		movs	r2, #3
 1637 0018 DA60     		str	r2, [r3, #12]
1031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Pull      = GPIO_NOPULL;
 1638              		.loc 1 1031 18
 1639 001a 3B18     		adds	r3, r7, r0
 1640 001c 0022     		movs	r2, #0
 1641 001e 9A60     		str	r2, [r3, #8]
1032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Pin       = MCO1_PIN;
 1642              		.loc 1 1032 18
 1643 0020 3B18     		adds	r3, r7, r0
 1644 0022 8022     		movs	r2, #128
 1645 0024 5200     		lsls	r2, r2, #1
 1646 0026 1A60     		str	r2, [r3]
1033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Alternate = GPIO_AF0_MCO;
 1647              		.loc 1 1033 18
 1648 0028 3B18     		adds	r3, r7, r0
 1649 002a 0022     		movs	r2, #0
 1650 002c 1A61     		str	r2, [r3, #16]
 1651              	.LBB4:
1034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* MCO1 Clock Enable */
1036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   MCO1_CLK_ENABLE();
 1652              		.loc 1 1036 3
 1653 002e 114B     		ldr	r3, .L98
 1654 0030 5A69     		ldr	r2, [r3, #20]
 1655 0032 104B     		ldr	r3, .L98
 1656 0034 8021     		movs	r1, #128
 1657 0036 8902     		lsls	r1, r1, #10
 1658 0038 0A43     		orrs	r2, r1
 1659 003a 5A61     		str	r2, [r3, #20]
 1660 003c 0D4B     		ldr	r3, .L98
 1661 003e 5A69     		ldr	r2, [r3, #20]
 1662 0040 8023     		movs	r3, #128
 1663 0042 9B02     		lsls	r3, r3, #10
 1664 0044 1340     		ands	r3, r2
 1665 0046 3B61     		str	r3, [r7, #16]
 1666 0048 3B69     		ldr	r3, [r7, #16]
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 49


 1667              	.LBE4:
1037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   HAL_GPIO_Init(MCO1_GPIO_PORT, &gpio);
 1668              		.loc 1 1038 3
 1669 004a 3A18     		adds	r2, r7, r0
 1670 004c 9023     		movs	r3, #144
 1671 004e DB05     		lsls	r3, r3, #23
 1672 0050 1100     		movs	r1, r2
 1673 0052 1800     		movs	r0, r3
 1674 0054 FFF7FEFF 		bl	HAL_GPIO_Init
1039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Configure the MCO clock source */
1041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   __HAL_RCC_MCO1_CONFIG(RCC_MCOSource, RCC_MCODiv);
 1675              		.loc 1 1041 3
 1676 0058 064B     		ldr	r3, .L98
 1677 005a 5B68     		ldr	r3, [r3, #4]
 1678 005c 064A     		ldr	r2, .L98+4
 1679 005e 1340     		ands	r3, r2
 1680 0060 1900     		movs	r1, r3
 1681 0062 044B     		ldr	r3, .L98
 1682 0064 BA68     		ldr	r2, [r7, #8]
 1683 0066 0A43     		orrs	r2, r1
 1684 0068 5A60     		str	r2, [r3, #4]
1042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1685              		.loc 1 1042 1
 1686 006a C046     		nop
 1687 006c BD46     		mov	sp, r7
 1688 006e 0AB0     		add	sp, sp, #40
 1689              		@ sp needed
 1690 0070 80BD     		pop	{r7, pc}
 1691              	.L99:
 1692 0072 C046     		.align	2
 1693              	.L98:
 1694 0074 00100240 		.word	1073876992
 1695 0078 FFFFFFF0 		.word	-251658241
 1696              		.cfi_endproc
 1697              	.LFE43:
 1699              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 1700              		.align	1
 1701              		.global	HAL_RCC_EnableCSS
 1702              		.syntax unified
 1703              		.code	16
 1704              		.thumb_func
 1706              	HAL_RCC_EnableCSS:
 1707              	.LFB44:
1043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
1046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
1047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
1048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
1049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to 
1050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         the Cortex-M0 NMI (Non-Maskable Interrupt) exception vector.  
1051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
1054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 50


 1708              		.loc 1 1054 1
 1709              		.cfi_startproc
 1710              		@ args = 0, pretend = 0, frame = 0
 1711              		@ frame_needed = 1, uses_anonymous_args = 0
 1712 0000 80B5     		push	{r7, lr}
 1713              	.LCFI12:
 1714              		.cfi_def_cfa_offset 8
 1715              		.cfi_offset 7, -8
 1716              		.cfi_offset 14, -4
 1717 0002 00AF     		add	r7, sp, #0
 1718              	.LCFI13:
 1719              		.cfi_def_cfa_register 7
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_CSSON) ;
 1720              		.loc 1 1055 3
 1721 0004 044B     		ldr	r3, .L101
 1722 0006 1A68     		ldr	r2, [r3]
 1723 0008 034B     		ldr	r3, .L101
 1724 000a 8021     		movs	r1, #128
 1725 000c 0903     		lsls	r1, r1, #12
 1726 000e 0A43     		orrs	r2, r1
 1727 0010 1A60     		str	r2, [r3]
1056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1728              		.loc 1 1056 1
 1729 0012 C046     		nop
 1730 0014 BD46     		mov	sp, r7
 1731              		@ sp needed
 1732 0016 80BD     		pop	{r7, pc}
 1733              	.L102:
 1734              		.align	2
 1735              	.L101:
 1736 0018 00100240 		.word	1073876992
 1737              		.cfi_endproc
 1738              	.LFE44:
 1740              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 1741              		.align	1
 1742              		.global	HAL_RCC_DisableCSS
 1743              		.syntax unified
 1744              		.code	16
 1745              		.thumb_func
 1747              	HAL_RCC_DisableCSS:
 1748              	.LFB45:
1057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
1060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
1063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1749              		.loc 1 1063 1
 1750              		.cfi_startproc
 1751              		@ args = 0, pretend = 0, frame = 0
 1752              		@ frame_needed = 1, uses_anonymous_args = 0
 1753 0000 80B5     		push	{r7, lr}
 1754              	.LCFI14:
 1755              		.cfi_def_cfa_offset 8
 1756              		.cfi_offset 7, -8
 1757              		.cfi_offset 14, -4
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 51


 1758 0002 00AF     		add	r7, sp, #0
 1759              	.LCFI15:
 1760              		.cfi_def_cfa_register 7
1064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_CSSON) ;
 1761              		.loc 1 1064 3
 1762 0004 044B     		ldr	r3, .L104
 1763 0006 1A68     		ldr	r2, [r3]
 1764 0008 034B     		ldr	r3, .L104
 1765 000a 0449     		ldr	r1, .L104+4
 1766 000c 0A40     		ands	r2, r1
 1767 000e 1A60     		str	r2, [r3]
1065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1768              		.loc 1 1065 1
 1769 0010 C046     		nop
 1770 0012 BD46     		mov	sp, r7
 1771              		@ sp needed
 1772 0014 80BD     		pop	{r7, pc}
 1773              	.L105:
 1774 0016 C046     		.align	2
 1775              	.L104:
 1776 0018 00100240 		.word	1073876992
 1777 001c FFFFF7FF 		.word	-524289
 1778              		.cfi_endproc
 1779              	.LFE45:
 1781              		.global	__aeabi_uidiv
 1782              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1783              		.align	1
 1784              		.global	HAL_RCC_GetSysClockFreq
 1785              		.syntax unified
 1786              		.code	16
 1787              		.thumb_func
 1789              	HAL_RCC_GetSysClockFreq:
 1790              	.LFB46:
1066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency     
1069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real 
1070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined 
1071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         constant and the selected clock source:
1072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
1073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns a value based on HSE_VALUE
1074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           divided by PREDIV factor(**)
1075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns a value based on HSE_VALUE
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           divided by PREDIV factor(**) or depending on STM32F0xxxx devices either a value based
1077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           on HSI_VALUE divided by 2 or HSI_VALUE divided by PREDIV factor(*) multiplied by the 
1078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           PLL factor.
1079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f0xx_hal_conf.h file (default value
1080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *               8 MHz) but the real value may vary depending on the variations
1081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *               in voltage and temperature.
1082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f0xx_hal_conf.h file (default value
1083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *                8 MHz), user has to ensure that HSE_VALUE is same as the real
1084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
1085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *                have wrong result.
1086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *                  
1087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
1088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         value for HSE crystal.
1089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 52


1090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the 
1091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         baud-rate for the communication peripherals or configure other parameters.
1092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           
1093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
1094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
1095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         
1096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval SYSCLK frequency
1097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
1099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1791              		.loc 1 1099 1
 1792              		.cfi_startproc
 1793              		@ args = 0, pretend = 0, frame = 24
 1794              		@ frame_needed = 1, uses_anonymous_args = 0
 1795 0000 80B5     		push	{r7, lr}
 1796              	.LCFI16:
 1797              		.cfi_def_cfa_offset 8
 1798              		.cfi_offset 7, -8
 1799              		.cfi_offset 14, -4
 1800 0002 86B0     		sub	sp, sp, #24
 1801              	.LCFI17:
 1802              		.cfi_def_cfa_offset 32
 1803 0004 00AF     		add	r7, sp, #0
 1804              	.LCFI18:
 1805              		.cfi_def_cfa_register 7
1100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   static const uint8_t aPLLMULFactorTable[16U] = { 2U,  3U,  4U,  5U,  6U,  7U,  8U,  9U,
1101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                                                    10U, 11U, 12U, 13U, 14U, 15U, 16U, 16U};
1102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   static const uint8_t aPredivFactorTable[16U] = { 1U, 2U,  3U,  4U,  5U,  6U,  7U,  8U,
1103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                                                    9U,10U, 11U, 12U, 13U, 14U, 15U, 16U};
1104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 1806              		.loc 1 1105 12
 1807 0006 0023     		movs	r3, #0
 1808 0008 FB60     		str	r3, [r7, #12]
 1809              		.loc 1 1105 25
 1810 000a 0023     		movs	r3, #0
 1811 000c BB60     		str	r3, [r7, #8]
 1812              		.loc 1 1105 38
 1813 000e 0023     		movs	r3, #0
 1814 0010 7B61     		str	r3, [r7, #20]
 1815              		.loc 1 1105 51
 1816 0012 0023     		movs	r3, #0
 1817 0014 7B60     		str	r3, [r7, #4]
1106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
 1818              		.loc 1 1106 12
 1819 0016 0023     		movs	r3, #0
 1820 0018 3B61     		str	r3, [r7, #16]
1107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   tmpreg = RCC->CFGR;
 1821              		.loc 1 1108 15
 1822 001a 204B     		ldr	r3, .L115
 1823              		.loc 1 1108 10
 1824 001c 5B68     		ldr	r3, [r3, #4]
 1825 001e FB60     		str	r3, [r7, #12]
1109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
1111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   switch (tmpreg & RCC_CFGR_SWS)
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 53


 1826              		.loc 1 1111 18
 1827 0020 FB68     		ldr	r3, [r7, #12]
 1828 0022 0C22     		movs	r2, #12
 1829 0024 1340     		ands	r3, r2
 1830              		.loc 1 1111 3
 1831 0026 042B     		cmp	r3, #4
 1832 0028 02D0     		beq	.L107
 1833 002a 082B     		cmp	r3, #8
 1834 002c 03D0     		beq	.L108
 1835 002e 2CE0     		b	.L114
 1836              	.L107:
1112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
1114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
1115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
 1837              		.loc 1 1115 20
 1838 0030 1B4B     		ldr	r3, .L115+4
 1839 0032 3B61     		str	r3, [r7, #16]
1116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       break;
 1840              		.loc 1 1116 7
 1841 0034 2CE0     		b	.L110
 1842              	.L108:
1117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
1119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
1120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_BITNUMBER
 1843              		.loc 1 1120 72
 1844 0036 FB68     		ldr	r3, [r7, #12]
 1845 0038 9B0C     		lsrs	r3, r3, #18
 1846 003a 0F22     		movs	r2, #15
 1847 003c 1340     		ands	r3, r2
 1848              		.loc 1 1120 34
 1849 003e 194A     		ldr	r2, .L115+8
 1850 0040 D35C     		ldrb	r3, [r2, r3]
 1851              		.loc 1 1120 14
 1852 0042 7B60     		str	r3, [r7, #4]
1121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BIT
 1853              		.loc 1 1121 49
 1854 0044 154B     		ldr	r3, .L115
 1855 0046 DB6A     		ldr	r3, [r3, #44]
 1856              		.loc 1 1121 77
 1857 0048 0F22     		movs	r2, #15
 1858 004a 1340     		ands	r3, r2
 1859              		.loc 1 1121 34
 1860 004c 164A     		ldr	r2, .L115+12
 1861 004e D35C     		ldrb	r3, [r2, r3]
 1862              		.loc 1 1121 14
 1863 0050 BB60     		str	r3, [r7, #8]
1122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 1864              		.loc 1 1122 19
 1865 0052 FA68     		ldr	r2, [r7, #12]
 1866 0054 8023     		movs	r3, #128
 1867 0056 5B02     		lsls	r3, r3, #9
 1868 0058 1340     		ands	r3, r2
 1869              		.loc 1 1122 10
 1870 005a 09D0     		beq	.L111
1123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 54


1124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
1125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pllclk = (uint32_t)((uint64_t) HSE_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 1871              		.loc 1 1125 18
 1872 005c B968     		ldr	r1, [r7, #8]
 1873 005e 1048     		ldr	r0, .L115+4
 1874 0060 FFF7FEFF 		bl	__aeabi_uidiv
 1875 0064 0300     		movs	r3, r0
 1876 0066 1A00     		movs	r2, r3
 1877              		.loc 1 1125 16
 1878 0068 7B68     		ldr	r3, [r7, #4]
 1879 006a 5343     		muls	r3, r2
 1880 006c 7B61     		str	r3, [r7, #20]
 1881 006e 09E0     		b	.L112
 1882              	.L111:
1126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI48_PREDIV)
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSI48)
1129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* HSI48 used as PLL clock source : PLLCLK = HSI48/PREDIV * PLLMUL */
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pllclk = (uint32_t)((uint64_t) HSI48_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
1132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
1133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI48_PREDIV */
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
1135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if  (defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F070x6) || defined(STM32F071xB) 
1137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/PREDIV * PLLMUL */
1138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pllclk = (uint32_t)((uint64_t) HSI_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
1139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #else
1140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
1141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pllclk = (uint32_t)((uint64_t) (HSI_VALUE >> 1U) * ((uint64_t) pllmul));
 1883              		.loc 1 1141 16
 1884 0070 7968     		ldr	r1, [r7, #4]
 1885 0072 0A00     		movs	r2, r1
 1886 0074 5201     		lsls	r2, r2, #5
 1887 0076 521A     		subs	r2, r2, r1
 1888 0078 9301     		lsls	r3, r2, #6
 1889 007a 9B1A     		subs	r3, r3, r2
 1890 007c DB00     		lsls	r3, r3, #3
 1891 007e 5B18     		adds	r3, r3, r1
 1892 0080 1B02     		lsls	r3, r3, #8
 1893 0082 7B61     		str	r3, [r7, #20]
 1894              	.L112:
1142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif
1143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
1144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       sysclockfreq = pllclk;
 1895              		.loc 1 1144 20
 1896 0084 7B69     		ldr	r3, [r7, #20]
 1897 0086 3B61     		str	r3, [r7, #16]
1145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       break;
 1898              		.loc 1 1145 7
 1899 0088 02E0     		b	.L110
 1900              	.L114:
1146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
1147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_CFGR_SWS_HSI48)
1148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSI48:    /* HSI48 used as system clock source */
1149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
1150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       sysclockfreq = HSI48_VALUE;
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 55


1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       break;
1152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
1153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_CFGR_SWS_HSI48 */
1154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
1155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     default: /* HSI used as system clock */
1156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
1157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 1901              		.loc 1 1157 20
 1902 008a 054B     		ldr	r3, .L115+4
 1903 008c 3B61     		str	r3, [r7, #16]
1158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       break;
 1904              		.loc 1 1158 7
 1905 008e C046     		nop
 1906              	.L110:
1159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
1160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return sysclockfreq;
 1907              		.loc 1 1161 10
 1908 0090 3B69     		ldr	r3, [r7, #16]
1162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1909              		.loc 1 1162 1
 1910 0092 1800     		movs	r0, r3
 1911 0094 BD46     		mov	sp, r7
 1912 0096 06B0     		add	sp, sp, #24
 1913              		@ sp needed
 1914 0098 80BD     		pop	{r7, pc}
 1915              	.L116:
 1916 009a C046     		.align	2
 1917              	.L115:
 1918 009c 00100240 		.word	1073876992
 1919 00a0 00127A00 		.word	8000000
 1920 00a4 00000000 		.word	aPLLMULFactorTable.1
 1921 00a8 00000000 		.word	aPredivFactorTable.0
 1922              		.cfi_endproc
 1923              	.LFE46:
 1925              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 1926              		.align	1
 1927              		.global	HAL_RCC_GetHCLKFreq
 1928              		.syntax unified
 1929              		.code	16
 1930              		.thumb_func
 1932              	HAL_RCC_GetHCLKFreq:
 1933              	.LFB47:
1163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency     
1166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * 
1169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
1170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         and updated within this function
1171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval HCLK frequency
1172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1934              		.loc 1 1174 1
 1935              		.cfi_startproc
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 56


 1936              		@ args = 0, pretend = 0, frame = 0
 1937              		@ frame_needed = 1, uses_anonymous_args = 0
 1938 0000 80B5     		push	{r7, lr}
 1939              	.LCFI19:
 1940              		.cfi_def_cfa_offset 8
 1941              		.cfi_offset 7, -8
 1942              		.cfi_offset 14, -4
 1943 0002 00AF     		add	r7, sp, #0
 1944              	.LCFI20:
 1945              		.cfi_def_cfa_register 7
1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return SystemCoreClock;
 1946              		.loc 1 1175 10
 1947 0004 024B     		ldr	r3, .L119
 1948 0006 1B68     		ldr	r3, [r3]
1176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1949              		.loc 1 1176 1
 1950 0008 1800     		movs	r0, r3
 1951 000a BD46     		mov	sp, r7
 1952              		@ sp needed
 1953 000c 80BD     		pop	{r7, pc}
 1954              	.L120:
 1955 000e C046     		.align	2
 1956              	.L119:
 1957 0010 00000000 		.word	SystemCoreClock
 1958              		.cfi_endproc
 1959              	.LFE47:
 1961              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 1962              		.align	1
 1963              		.global	HAL_RCC_GetPCLK1Freq
 1964              		.syntax unified
 1965              		.code	16
 1966              		.thumb_func
 1968              	HAL_RCC_GetPCLK1Freq:
 1969              	.LFB48:
1177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency     
1180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval PCLK1 frequency
1183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1970              		.loc 1 1185 1
 1971              		.cfi_startproc
 1972              		@ args = 0, pretend = 0, frame = 0
 1973              		@ frame_needed = 1, uses_anonymous_args = 0
 1974 0000 80B5     		push	{r7, lr}
 1975              	.LCFI21:
 1976              		.cfi_def_cfa_offset 8
 1977              		.cfi_offset 7, -8
 1978              		.cfi_offset 14, -4
 1979 0002 00AF     		add	r7, sp, #0
 1980              	.LCFI22:
 1981              		.cfi_def_cfa_register 7
1186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE) >> RCC_CFGR_PPRE_BITNU
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 57


 1982              		.loc 1 1187 11
 1983 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1984 0008 0100     		movs	r1, r0
 1985              		.loc 1 1187 54 discriminator 1
 1986 000a 064B     		ldr	r3, .L123
 1987 000c 5B68     		ldr	r3, [r3, #4]
 1988              		.loc 1 1187 78 discriminator 1
 1989 000e 1B0A     		lsrs	r3, r3, #8
 1990 0010 0722     		movs	r2, #7
 1991 0012 1340     		ands	r3, r2
 1992              		.loc 1 1187 49 discriminator 1
 1993 0014 044A     		ldr	r2, .L123+4
 1994 0016 D35C     		ldrb	r3, [r2, r3]
 1995              		.loc 1 1187 33 discriminator 1
 1996 0018 D940     		lsrs	r1, r1, r3
 1997 001a 0B00     		movs	r3, r1
1188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }    
 1998              		.loc 1 1188 1
 1999 001c 1800     		movs	r0, r3
 2000 001e BD46     		mov	sp, r7
 2001              		@ sp needed
 2002 0020 80BD     		pop	{r7, pc}
 2003              	.L124:
 2004 0022 C046     		.align	2
 2005              	.L123:
 2006 0024 00100240 		.word	1073876992
 2007 0028 00000000 		.word	APBPrescTable
 2008              		.cfi_endproc
 2009              	.LFE48:
 2011              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 2012              		.align	1
 2013              		.global	HAL_RCC_GetOscConfig
 2014              		.syntax unified
 2015              		.code	16
 2016              		.thumb_func
 2018              	HAL_RCC_GetOscConfig:
 2019              	.LFB49:
1189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal 
1192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * RCC configuration registers.
1193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that 
1194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * will be configured.
1195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 2020              		.loc 1 1198 1
 2021              		.cfi_startproc
 2022              		@ args = 0, pretend = 0, frame = 8
 2023              		@ frame_needed = 1, uses_anonymous_args = 0
 2024 0000 80B5     		push	{r7, lr}
 2025              	.LCFI23:
 2026              		.cfi_def_cfa_offset 8
 2027              		.cfi_offset 7, -8
 2028              		.cfi_offset 14, -4
 2029 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 58


 2030              	.LCFI24:
 2031              		.cfi_def_cfa_offset 16
 2032 0004 00AF     		add	r7, sp, #0
 2033              	.LCFI25:
 2034              		.cfi_def_cfa_register 7
 2035 0006 7860     		str	r0, [r7, #4]
1199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
1200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
1201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI  \
 2036              		.loc 1 1203 37
 2037 0008 7B68     		ldr	r3, [r7, #4]
 2038 000a 1F22     		movs	r2, #31
 2039 000c 1A60     		str	r2, [r3]
1204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                   | RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI | RCC_OSCILLATORTYPE_HSI14;
1205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
1206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType |= RCC_OSCILLATORTYPE_HSI48;
1207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 2040              		.loc 1 1211 10
 2041 000e 484B     		ldr	r3, .L140
 2042 0010 1A68     		ldr	r2, [r3]
 2043              		.loc 1 1211 15
 2044 0012 8023     		movs	r3, #128
 2045 0014 DB02     		lsls	r3, r3, #11
 2046 0016 1A40     		ands	r2, r3
 2047              		.loc 1 1211 5
 2048 0018 8023     		movs	r3, #128
 2049 001a DB02     		lsls	r3, r3, #11
 2050 001c 9A42     		cmp	r2, r3
 2051 001e 03D1     		bne	.L126
1212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 2052              		.loc 1 1213 33
 2053 0020 7B68     		ldr	r3, [r7, #4]
 2054 0022 0522     		movs	r2, #5
 2055 0024 5A60     		str	r2, [r3, #4]
 2056 0026 0FE0     		b	.L127
 2057              	.L126:
1214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
 2058              		.loc 1 1215 15
 2059 0028 414B     		ldr	r3, .L140
 2060 002a 1A68     		ldr	r2, [r3]
 2061              		.loc 1 1215 20
 2062 002c 8023     		movs	r3, #128
 2063 002e 5B02     		lsls	r3, r3, #9
 2064 0030 1A40     		ands	r2, r3
 2065              		.loc 1 1215 10
 2066 0032 8023     		movs	r3, #128
 2067 0034 5B02     		lsls	r3, r3, #9
 2068 0036 9A42     		cmp	r2, r3
 2069 0038 03D1     		bne	.L128
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 59


1216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
 2070              		.loc 1 1217 33
 2071 003a 7B68     		ldr	r3, [r7, #4]
 2072 003c 0122     		movs	r2, #1
 2073 003e 5A60     		str	r2, [r3, #4]
 2074 0040 02E0     		b	.L127
 2075              	.L128:
1218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 2076              		.loc 1 1221 33
 2077 0042 7B68     		ldr	r3, [r7, #4]
 2078 0044 0022     		movs	r2, #0
 2079 0046 5A60     		str	r2, [r3, #4]
 2080              	.L127:
1222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 2081              		.loc 1 1225 10
 2082 0048 394B     		ldr	r3, .L140
 2083 004a 1B68     		ldr	r3, [r3]
 2084              		.loc 1 1225 15
 2085 004c 0122     		movs	r2, #1
 2086 004e 1340     		ands	r3, r2
 2087              		.loc 1 1225 5
 2088 0050 012B     		cmp	r3, #1
 2089 0052 03D1     		bne	.L129
1226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 2090              		.loc 1 1227 33
 2091 0054 7B68     		ldr	r3, [r7, #4]
 2092 0056 0122     		movs	r2, #1
 2093 0058 DA60     		str	r2, [r3, #12]
 2094 005a 02E0     		b	.L130
 2095              	.L129:
1228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 2096              		.loc 1 1231 33
 2097 005c 7B68     		ldr	r3, [r7, #4]
 2098 005e 0022     		movs	r2, #0
 2099 0060 DA60     		str	r2, [r3, #12]
 2100              	.L130:
1232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR &RCC_CR_HSITRIM) >> RCC_CR_HSITRIM_B
 2101              		.loc 1 1234 59
 2102 0062 334B     		ldr	r3, .L140
 2103 0064 1B68     		ldr	r3, [r3]
 2104              		.loc 1 1234 44
 2105 0066 DB08     		lsrs	r3, r3, #3
 2106 0068 1F22     		movs	r2, #31
 2107 006a 1A40     		ands	r2, r3
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 60


 2108              		.loc 1 1234 42
 2109 006c 7B68     		ldr	r3, [r7, #4]
 2110 006e 1A61     		str	r2, [r3, #16]
1235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 2111              		.loc 1 1237 10
 2112 0070 2F4B     		ldr	r3, .L140
 2113 0072 1B6A     		ldr	r3, [r3, #32]
 2114              		.loc 1 1237 17
 2115 0074 0422     		movs	r2, #4
 2116 0076 1340     		ands	r3, r2
 2117              		.loc 1 1237 5
 2118 0078 042B     		cmp	r3, #4
 2119 007a 03D1     		bne	.L131
1238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 2120              		.loc 1 1239 33
 2121 007c 7B68     		ldr	r3, [r7, #4]
 2122 007e 0522     		movs	r2, #5
 2123 0080 9A60     		str	r2, [r3, #8]
 2124 0082 0CE0     		b	.L132
 2125              	.L131:
1240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
 2126              		.loc 1 1241 15
 2127 0084 2A4B     		ldr	r3, .L140
 2128 0086 1B6A     		ldr	r3, [r3, #32]
 2129              		.loc 1 1241 22
 2130 0088 0122     		movs	r2, #1
 2131 008a 1340     		ands	r3, r2
 2132              		.loc 1 1241 10
 2133 008c 012B     		cmp	r3, #1
 2134 008e 03D1     		bne	.L133
1242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
 2135              		.loc 1 1243 33
 2136 0090 7B68     		ldr	r3, [r7, #4]
 2137 0092 0122     		movs	r2, #1
 2138 0094 9A60     		str	r2, [r3, #8]
 2139 0096 02E0     		b	.L132
 2140              	.L133:
1244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 2141              		.loc 1 1247 33
 2142 0098 7B68     		ldr	r3, [r7, #4]
 2143 009a 0022     		movs	r2, #0
 2144 009c 9A60     		str	r2, [r3, #8]
 2145              	.L132:
1248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
 2146              		.loc 1 1251 10
 2147 009e 244B     		ldr	r3, .L140
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 61


 2148 00a0 5B6A     		ldr	r3, [r3, #36]
 2149              		.loc 1 1251 16
 2150 00a2 0122     		movs	r2, #1
 2151 00a4 1340     		ands	r3, r2
 2152              		.loc 1 1251 5
 2153 00a6 012B     		cmp	r3, #1
 2154 00a8 03D1     		bne	.L134
1252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 2155              		.loc 1 1253 33
 2156 00aa 7B68     		ldr	r3, [r7, #4]
 2157 00ac 0122     		movs	r2, #1
 2158 00ae DA61     		str	r2, [r3, #28]
 2159 00b0 02E0     		b	.L135
 2160              	.L134:
1254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 2161              		.loc 1 1257 33
 2162 00b2 7B68     		ldr	r3, [r7, #4]
 2163 00b4 0022     		movs	r2, #0
 2164 00b6 DA61     		str	r2, [r3, #28]
 2165              	.L135:
1258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HSI14 configuration -----------------------------------------------*/
1261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CR2 & RCC_CR2_HSI14ON) == RCC_CR2_HSI14ON)
 2166              		.loc 1 1261 10
 2167 00b8 1D4B     		ldr	r3, .L140
 2168 00ba 5B6B     		ldr	r3, [r3, #52]
 2169              		.loc 1 1261 16
 2170 00bc 0122     		movs	r2, #1
 2171 00be 1340     		ands	r3, r2
 2172              		.loc 1 1261 5
 2173 00c0 012B     		cmp	r3, #1
 2174 00c2 03D1     		bne	.L136
1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSI14State = RCC_HSI_ON;
 2175              		.loc 1 1263 35
 2176 00c4 7B68     		ldr	r3, [r7, #4]
 2177 00c6 0122     		movs	r2, #1
 2178 00c8 5A61     		str	r2, [r3, #20]
 2179 00ca 02E0     		b	.L137
 2180              	.L136:
1264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSI14State = RCC_HSI_OFF;
 2181              		.loc 1 1267 35
 2182 00cc 7B68     		ldr	r3, [r7, #4]
 2183 00ce 0022     		movs	r2, #0
 2184 00d0 5A61     		str	r2, [r3, #20]
 2185              	.L137:
1268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->HSI14CalibrationValue = (uint32_t)((RCC->CR2 & RCC_CR2_HSI14TRIM) >> RCC_HSI14
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 62


 2186              		.loc 1 1270 61
 2187 00d2 174B     		ldr	r3, .L140
 2188 00d4 5B6B     		ldr	r3, [r3, #52]
 2189              		.loc 1 1270 46
 2190 00d6 DB08     		lsrs	r3, r3, #3
 2191 00d8 1F22     		movs	r2, #31
 2192 00da 1A40     		ands	r2, r3
 2193              		.loc 1 1270 44
 2194 00dc 7B68     		ldr	r3, [r7, #4]
 2195 00de 9A61     		str	r2, [r3, #24]
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
1273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HSI48 configuration if any-----------------------------------------*/
1274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->HSI48State = __HAL_RCC_GET_HSI48_STATE();
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
1276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
 2196              		.loc 1 1278 10
 2197 00e0 134B     		ldr	r3, .L140
 2198 00e2 1A68     		ldr	r2, [r3]
 2199              		.loc 1 1278 15
 2200 00e4 8023     		movs	r3, #128
 2201 00e6 5B04     		lsls	r3, r3, #17
 2202 00e8 1A40     		ands	r2, r3
 2203              		.loc 1 1278 5
 2204 00ea 8023     		movs	r3, #128
 2205 00ec 5B04     		lsls	r3, r3, #17
 2206 00ee 9A42     		cmp	r2, r3
 2207 00f0 03D1     		bne	.L138
1279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 2208              		.loc 1 1280 37
 2209 00f2 7B68     		ldr	r3, [r7, #4]
 2210 00f4 0222     		movs	r2, #2
 2211 00f6 1A62     		str	r2, [r3, #32]
 2212 00f8 02E0     		b	.L139
 2213              	.L138:
1281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 2214              		.loc 1 1284 37
 2215 00fa 7B68     		ldr	r3, [r7, #4]
 2216 00fc 0122     		movs	r2, #1
 2217 00fe 1A62     		str	r2, [r3, #32]
 2218              	.L139:
1285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLSRC);
 2219              		.loc 1 1286 52
 2220 0100 0B4B     		ldr	r3, .L140
 2221 0102 5A68     		ldr	r2, [r3, #4]
 2222              		.loc 1 1286 38
 2223 0104 8023     		movs	r3, #128
 2224 0106 5B02     		lsls	r3, r3, #9
 2225 0108 1A40     		ands	r2, r3
 2226              		.loc 1 1286 36
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 63


 2227 010a 7B68     		ldr	r3, [r7, #4]
 2228 010c 5A62     		str	r2, [r3, #36]
1287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLMUL = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLMUL);
 2229              		.loc 1 1287 49
 2230 010e 084B     		ldr	r3, .L140
 2231 0110 5A68     		ldr	r2, [r3, #4]
 2232              		.loc 1 1287 35
 2233 0112 F023     		movs	r3, #240
 2234 0114 9B03     		lsls	r3, r3, #14
 2235 0116 1A40     		ands	r2, r3
 2236              		.loc 1 1287 33
 2237 0118 7B68     		ldr	r3, [r7, #4]
 2238 011a 9A62     		str	r2, [r3, #40]
1288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PREDIV = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV);
 2239              		.loc 1 1288 49
 2240 011c 044B     		ldr	r3, .L140
 2241 011e DB6A     		ldr	r3, [r3, #44]
 2242              		.loc 1 1288 35
 2243 0120 0F22     		movs	r2, #15
 2244 0122 1A40     		ands	r2, r3
 2245              		.loc 1 1288 33
 2246 0124 7B68     		ldr	r3, [r7, #4]
 2247 0126 DA62     		str	r2, [r3, #44]
1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 2248              		.loc 1 1289 1
 2249 0128 C046     		nop
 2250 012a BD46     		mov	sp, r7
 2251 012c 02B0     		add	sp, sp, #8
 2252              		@ sp needed
 2253 012e 80BD     		pop	{r7, pc}
 2254              	.L141:
 2255              		.align	2
 2256              	.L140:
 2257 0130 00100240 		.word	1073876992
 2258              		.cfi_endproc
 2259              	.LFE49:
 2261              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 2262              		.align	1
 2263              		.global	HAL_RCC_GetClockConfig
 2264              		.syntax unified
 2265              		.code	16
 2266              		.thumb_func
 2268              	HAL_RCC_GetClockConfig:
 2269              	.LFB50:
1290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Get the RCC_ClkInitStruct according to the internal 
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * RCC configuration registers.
1294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that 
1295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * contains the current clock configuration.
1296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 2270              		.loc 1 1300 1
 2271              		.cfi_startproc
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 64


 2272              		@ args = 0, pretend = 0, frame = 8
 2273              		@ frame_needed = 1, uses_anonymous_args = 0
 2274 0000 80B5     		push	{r7, lr}
 2275              	.LCFI26:
 2276              		.cfi_def_cfa_offset 8
 2277              		.cfi_offset 7, -8
 2278              		.cfi_offset 14, -4
 2279 0002 82B0     		sub	sp, sp, #8
 2280              	.LCFI27:
 2281              		.cfi_def_cfa_offset 16
 2282 0004 00AF     		add	r7, sp, #0
 2283              	.LCFI28:
 2284              		.cfi_def_cfa_register 7
 2285 0006 7860     		str	r0, [r7, #4]
 2286 0008 3960     		str	r1, [r7]
1301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
1302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
1303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(pFLatency != NULL);
1304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1;
 2287              		.loc 1 1306 32
 2288 000a 7B68     		ldr	r3, [r7, #4]
 2289 000c 0722     		movs	r2, #7
 2290 000e 1A60     		str	r2, [r3]
1307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/ 
1309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 2291              		.loc 1 1309 51
 2292 0010 0E4B     		ldr	r3, .L143
 2293 0012 5B68     		ldr	r3, [r3, #4]
 2294              		.loc 1 1309 37
 2295 0014 0322     		movs	r2, #3
 2296 0016 1A40     		ands	r2, r3
 2297              		.loc 1 1309 35
 2298 0018 7B68     		ldr	r3, [r7, #4]
 2299 001a 5A60     		str	r2, [r3, #4]
1310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/ 
1312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE); 
 2300              		.loc 1 1312 52
 2301 001c 0B4B     		ldr	r3, .L143
 2302 001e 5B68     		ldr	r3, [r3, #4]
 2303              		.loc 1 1312 38
 2304 0020 F022     		movs	r2, #240
 2305 0022 1A40     		ands	r2, r3
 2306              		.loc 1 1312 36
 2307 0024 7B68     		ldr	r3, [r7, #4]
 2308 0026 9A60     		str	r2, [r3, #8]
1313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/ 
1315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE);   
 2309              		.loc 1 1315 53
 2310 0028 084B     		ldr	r3, .L143
 2311 002a 5A68     		ldr	r2, [r3, #4]
 2312              		.loc 1 1315 39
 2313 002c E023     		movs	r3, #224
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 65


 2314 002e DB00     		lsls	r3, r3, #3
 2315 0030 1A40     		ands	r2, r3
 2316              		.loc 1 1315 37
 2317 0032 7B68     		ldr	r3, [r7, #4]
 2318 0034 DA60     		str	r2, [r3, #12]
1316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/   
1317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *pFLatency = __HAL_FLASH_GET_LATENCY(); 
 2319              		.loc 1 1317 16
 2320 0036 064B     		ldr	r3, .L143+4
 2321 0038 1B68     		ldr	r3, [r3]
 2322 003a 0122     		movs	r2, #1
 2323 003c 1A40     		ands	r2, r3
 2324              		.loc 1 1317 14
 2325 003e 3B68     		ldr	r3, [r7]
 2326 0040 1A60     		str	r2, [r3]
1318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 2327              		.loc 1 1318 1
 2328 0042 C046     		nop
 2329 0044 BD46     		mov	sp, r7
 2330 0046 02B0     		add	sp, sp, #8
 2331              		@ sp needed
 2332 0048 80BD     		pop	{r7, pc}
 2333              	.L144:
 2334 004a C046     		.align	2
 2335              	.L143:
 2336 004c 00100240 		.word	1073876992
 2337 0050 00200240 		.word	1073881088
 2338              		.cfi_endproc
 2339              	.LFE50:
 2341              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 2342              		.align	1
 2343              		.global	HAL_RCC_NMI_IRQHandler
 2344              		.syntax unified
 2345              		.code	16
 2346              		.thumb_func
 2348              	HAL_RCC_NMI_IRQHandler:
 2349              	.LFB51:
1319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 2350              		.loc 1 1326 1
 2351              		.cfi_startproc
 2352              		@ args = 0, pretend = 0, frame = 0
 2353              		@ frame_needed = 1, uses_anonymous_args = 0
 2354 0000 80B5     		push	{r7, lr}
 2355              	.LCFI29:
 2356              		.cfi_def_cfa_offset 8
 2357              		.cfi_offset 7, -8
 2358              		.cfi_offset 14, -4
 2359 0002 00AF     		add	r7, sp, #0
 2360              	.LCFI30:
 2361              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 66


1327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
 2362              		.loc 1 1328 6
 2363 0004 064B     		ldr	r3, .L148
 2364 0006 9B68     		ldr	r3, [r3, #8]
 2365 0008 8022     		movs	r2, #128
 2366 000a 1340     		ands	r3, r2
 2367              		.loc 1 1328 5
 2368 000c 802B     		cmp	r3, #128
 2369 000e 04D1     		bne	.L147
1329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
 2370              		.loc 1 1331 5
 2371 0010 FFF7FEFF 		bl	HAL_RCC_CSSCallback
1332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
1333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
 2372              		.loc 1 1334 5
 2373 0014 034B     		ldr	r3, .L148+4
 2374 0016 8022     		movs	r2, #128
 2375 0018 1A70     		strb	r2, [r3]
 2376              	.L147:
1335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 2377              		.loc 1 1336 1
 2378 001a C046     		nop
 2379 001c BD46     		mov	sp, r7
 2380              		@ sp needed
 2381 001e 80BD     		pop	{r7, pc}
 2382              	.L149:
 2383              		.align	2
 2384              	.L148:
 2385 0020 00100240 		.word	1073876992
 2386 0024 0A100240 		.word	1073877002
 2387              		.cfi_endproc
 2388              	.LFE51:
 2390              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2391              		.align	1
 2392              		.weak	HAL_RCC_CSSCallback
 2393              		.syntax unified
 2394              		.code	16
 2395              		.thumb_func
 2397              	HAL_RCC_CSSCallback:
 2398              	.LFB52:
1337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval none
1341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 2399              		.loc 1 1343 1
 2400              		.cfi_startproc
 2401              		@ args = 0, pretend = 0, frame = 0
 2402              		@ frame_needed = 1, uses_anonymous_args = 0
 2403 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 67


 2404              	.LCFI31:
 2405              		.cfi_def_cfa_offset 8
 2406              		.cfi_offset 7, -8
 2407              		.cfi_offset 14, -4
 2408 0002 00AF     		add	r7, sp, #0
 2409              	.LCFI32:
 2410              		.cfi_def_cfa_register 7
1344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     the HAL_RCC_CSSCallback could be implemented in the user file
1346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     */ 
1347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 2411              		.loc 1 1347 1
 2412 0004 C046     		nop
 2413 0006 BD46     		mov	sp, r7
 2414              		@ sp needed
 2415 0008 80BD     		pop	{r7, pc}
 2416              		.cfi_endproc
 2417              	.LFE52:
 2419              		.section	.rodata.aPLLMULFactorTable.1,"a"
 2420              		.align	2
 2423              	aPLLMULFactorTable.1:
 2424 0000 02030405 		.ascii	"\002\003\004\005\006\007\010\011\012\013\014\015\016"
 2424      06070809 
 2424      0A0B0C0D 
 2424      0E
 2425 000d 0F1010   		.ascii	"\017\020\020"
 2426              		.section	.rodata.aPredivFactorTable.0,"a"
 2427              		.align	2
 2430              	aPredivFactorTable.0:
 2431 0000 01020304 		.ascii	"\001\002\003\004\005\006\007\010\011\012\013\014\015"
 2431      05060708 
 2431      090A0B0C 
 2431      0D
 2432 000d 0E0F10   		.ascii	"\016\017\020"
 2433              		.text
 2434              	.Letext0:
 2435              		.file 2 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 2436              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 2437              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 2438              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
 2439              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 2440              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 2441              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 2442              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 2443              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s 			page 68


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_hal_rcc.c
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:19     .text.HAL_RCC_DeInit:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:25     .text.HAL_RCC_DeInit:00000000 HAL_RCC_DeInit
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:201    .text.HAL_RCC_DeInit:000000ec $d
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:213    .text.HAL_RCC_OscConfig:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:219    .text.HAL_RCC_OscConfig:00000000 HAL_RCC_OscConfig
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:791    .text.HAL_RCC_OscConfig:0000032c $d
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:797    .text.HAL_RCC_OscConfig:0000033c $t
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:1295   .text.HAL_RCC_OscConfig:00000620 $d
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:1304   .text.HAL_RCC_ClockConfig:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:1310   .text.HAL_RCC_ClockConfig:00000000 HAL_RCC_ClockConfig
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:1789   .text.HAL_RCC_GetSysClockFreq:00000000 HAL_RCC_GetSysClockFreq
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:1593   .text.HAL_RCC_ClockConfig:00000184 $d
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:1603   .text.HAL_RCC_MCOConfig:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:1609   .text.HAL_RCC_MCOConfig:00000000 HAL_RCC_MCOConfig
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:1694   .text.HAL_RCC_MCOConfig:00000074 $d
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:1700   .text.HAL_RCC_EnableCSS:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:1706   .text.HAL_RCC_EnableCSS:00000000 HAL_RCC_EnableCSS
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:1736   .text.HAL_RCC_EnableCSS:00000018 $d
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:1741   .text.HAL_RCC_DisableCSS:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:1747   .text.HAL_RCC_DisableCSS:00000000 HAL_RCC_DisableCSS
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:1776   .text.HAL_RCC_DisableCSS:00000018 $d
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:1783   .text.HAL_RCC_GetSysClockFreq:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:1918   .text.HAL_RCC_GetSysClockFreq:0000009c $d
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:2423   .rodata.aPLLMULFactorTable.1:00000000 aPLLMULFactorTable.1
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:2430   .rodata.aPredivFactorTable.0:00000000 aPredivFactorTable.0
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:1926   .text.HAL_RCC_GetHCLKFreq:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:1932   .text.HAL_RCC_GetHCLKFreq:00000000 HAL_RCC_GetHCLKFreq
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:1957   .text.HAL_RCC_GetHCLKFreq:00000010 $d
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:1962   .text.HAL_RCC_GetPCLK1Freq:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:1968   .text.HAL_RCC_GetPCLK1Freq:00000000 HAL_RCC_GetPCLK1Freq
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:2006   .text.HAL_RCC_GetPCLK1Freq:00000024 $d
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:2012   .text.HAL_RCC_GetOscConfig:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:2018   .text.HAL_RCC_GetOscConfig:00000000 HAL_RCC_GetOscConfig
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:2257   .text.HAL_RCC_GetOscConfig:00000130 $d
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:2262   .text.HAL_RCC_GetClockConfig:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:2268   .text.HAL_RCC_GetClockConfig:00000000 HAL_RCC_GetClockConfig
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:2336   .text.HAL_RCC_GetClockConfig:0000004c $d
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:2342   .text.HAL_RCC_NMI_IRQHandler:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:2348   .text.HAL_RCC_NMI_IRQHandler:00000000 HAL_RCC_NMI_IRQHandler
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:2397   .text.HAL_RCC_CSSCallback:00000000 HAL_RCC_CSSCallback
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:2385   .text.HAL_RCC_NMI_IRQHandler:00000020 $d
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:2391   .text.HAL_RCC_CSSCallback:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:2420   .rodata.aPLLMULFactorTable.1:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccOPiMUa.s:2427   .rodata.aPredivFactorTable.0:00000000 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_InitTick
SystemCoreClock
uwTickPrio
AHBPrescTable
HAL_GPIO_Init
__aeabi_uidiv
APBPrescTable
