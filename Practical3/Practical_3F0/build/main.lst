ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.global	g_total_program_cycles
  19              		.section	.bss.g_total_program_cycles,"aw",%nobits
  20              		.align	2
  23              	g_total_program_cycles:
  24 0000 00000000 		.space	4
  25              		.global	g_total_program_time_ms
  26              		.section	.bss.g_total_program_time_ms,"aw",%nobits
  27              		.align	3
  30              	g_total_program_time_ms:
  31 0000 00000000 		.space	8
  31      00000000 
  32              		.global	g_total_time_sum
  33              		.section	.bss.g_total_time_sum,"aw",%nobits
  34              		.align	3
  37              	g_total_time_sum:
  38 0000 00000000 		.space	8
  38      00000000 
  39              		.global	g_test_counter
  40              		.section	.bss.g_test_counter,"aw",%nobits
  41              		.align	2
  44              	g_test_counter:
  45 0000 00000000 		.space	4
  46              		.global	g_simple_test
  47              		.section	.bss.g_simple_test,"aw",%nobits
  48              		.align	2
  51              	g_simple_test:
  52 0000 00000000 		.space	4
  53              		.section	.rodata.kNumScalingFactors,"a"
  54              		.align	2
  57              	kNumScalingFactors:
  58 0000 03000000 		.word	3
  59              		.section	.rodata.kScalingFactors,"a"
  60              		.align	2
  63              	kScalingFactors:
  64 0000 E8030000 		.word	1000
  65 0004 10270000 		.word	10000
  66 0008 40420F00 		.word	1000000
  67              		.section	.rodata
  68              		.align	2
  69              	.LC0:
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 2


  70 0000 31305E33 		.ascii	"10^3\000"
  70      00
  71 0005 000000   		.align	2
  72              	.LC1:
  73 0008 31305E34 		.ascii	"10^4\000"
  73      00
  74 000d 000000   		.align	2
  75              	.LC2:
  76 0010 31305E36 		.ascii	"10^6\000"
  76      00
  77              		.section	.data.kScalingFactorNames,"aw"
  78              		.align	2
  81              	kScalingFactorNames:
  82 0000 00000000 		.word	.LC0
  83 0004 08000000 		.word	.LC1
  84 0008 10000000 		.word	.LC2
  85              		.global	g_fixed_checksum
  86              		.section	.bss.g_fixed_checksum,"aw",%nobits
  87              		.align	2
  90              	g_fixed_checksum:
  91 0000 00000000 		.space	60
  91      00000000 
  91      00000000 
  91      00000000 
  91      00000000 
  92              		.global	g_fixed_execution_time_ms
  93              		.section	.bss.g_fixed_execution_time_ms,"aw",%nobits
  94              		.align	3
  97              	g_fixed_execution_time_ms:
  98 0000 00000000 		.space	120
  98      00000000 
  98      00000000 
  98      00000000 
  98      00000000 
  99              		.global	g_fixed_overflow_count
 100              		.section	.bss.g_fixed_overflow_count,"aw",%nobits
 101              		.align	2
 104              	g_fixed_overflow_count:
 105 0000 00000000 		.space	12
 105      00000000 
 105      00000000 
 106              		.global	g_current_scaling_factor
 107              		.section	.bss.g_current_scaling_factor,"aw",%nobits
 108              		.align	2
 111              	g_current_scaling_factor:
 112 0000 00000000 		.space	4
 113              		.global	g_current_scaling_index
 114              		.section	.bss.g_current_scaling_index,"aw",%nobits
 115              		.align	2
 118              	g_current_scaling_index:
 119 0000 00000000 		.space	4
 120              		.section	.rodata.kMaxIter,"a"
 121              		.align	2
 124              	kMaxIter:
 125 0000 64000000 		.word	100
 126              		.section	.rodata.kNumResolutions,"a"
 127              		.align	2
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 3


 130              	kNumResolutions:
 131 0000 05000000 		.word	5
 132              		.section	.rodata.kWidths,"a"
 133              		.align	2
 136              	kWidths:
 137 0000 8000     		.short	128
 138 0002 A000     		.short	160
 139 0004 C000     		.short	192
 140 0006 E000     		.short	224
 141 0008 0001     		.short	256
 142              		.section	.rodata.kHeights,"a"
 143              		.align	2
 146              	kHeights:
 147 0000 8000     		.short	128
 148 0002 A000     		.short	160
 149 0004 C000     		.short	192
 150 0006 E000     		.short	224
 151 0008 0001     		.short	256
 152              		.global	g_current_width
 153              		.section	.bss.g_current_width,"aw",%nobits
 154              		.align	2
 157              	g_current_width:
 158 0000 00000000 		.space	4
 159              		.global	g_current_height
 160              		.section	.bss.g_current_height,"aw",%nobits
 161              		.align	2
 164              	g_current_height:
 165 0000 00000000 		.space	4
 166              		.global	g_current_cycles
 167              		.section	.bss.g_current_cycles,"aw",%nobits
 168              		.align	2
 171              	g_current_cycles:
 172 0000 00000000 		.space	4
 173              		.global	g_current_checksum
 174              		.section	.bss.g_current_checksum,"aw",%nobits
 175              		.align	2
 178              	g_current_checksum:
 179 0000 00000000 		.space	4
 180              		.global	g_current_execution_time
 181              		.section	.bss.g_current_execution_time,"aw",%nobits
 182              		.align	3
 185              	g_current_execution_time:
 186 0000 00000000 		.space	8
 186      00000000 
 187              		.global	g_current_throughput
 188              		.section	.bss.g_current_throughput,"aw",%nobits
 189              		.align	3
 192              	g_current_throughput:
 193 0000 00000000 		.space	8
 193      00000000 
 194              		.global	checksum
 195              		.section	.bss.checksum,"aw",%nobits
 196              		.align	2
 199              	checksum:
 200 0000 00000000 		.space	20
 200      00000000 
 200      00000000 
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 4


 200      00000000 
 200      00000000 
 201              		.global	execution_time_ms
 202              		.section	.bss.execution_time_ms,"aw",%nobits
 203              		.align	3
 206              	execution_time_ms:
 207 0000 00000000 		.space	40
 207      00000000 
 207      00000000 
 207      00000000 
 207      00000000 
 208              		.global	cpu_cycles
 209              		.section	.bss.cpu_cycles,"aw",%nobits
 210              		.align	2
 213              	cpu_cycles:
 214 0000 00000000 		.space	20
 214      00000000 
 214      00000000 
 214      00000000 
 214      00000000 
 215              		.global	throughput_pps
 216              		.section	.bss.throughput_pps,"aw",%nobits
 217              		.align	3
 220              	throughput_pps:
 221 0000 00000000 		.space	40
 221      00000000 
 221      00000000 
 221      00000000 
 221      00000000 
 222              		.global	g_num_tiles_x
 223              		.section	.bss.g_num_tiles_x,"aw",%nobits
 224              		.align	2
 227              	g_num_tiles_x:
 228 0000 00000000 		.space	4
 229              		.global	g_num_tiles_y
 230              		.section	.bss.g_num_tiles_y,"aw",%nobits
 231              		.align	2
 234              	g_num_tiles_y:
 235 0000 00000000 		.space	4
 236              		.global	g_total_tiles
 237              		.section	.bss.g_total_tiles,"aw",%nobits
 238              		.align	2
 241              	g_total_tiles:
 242 0000 00000000 		.space	4
 243              		.global	g_current_tile
 244              		.section	.bss.g_current_tile,"aw",%nobits
 245              		.align	2
 248              	g_current_tile:
 249 0000 00000000 		.space	4
 250              		.global	__aeabi_ui2d
 251              		.global	__aeabi_ddiv
 252              		.global	__aeabi_dmul
 253              		.global	__aeabi_dadd
 254              		.section	.rodata
 255 0015 000000   		.align	2
 256              	.LC20:
 257 0018 0D0A3D3D 		.ascii	"\015\012=== Task 7: Fixed-Point Arithmetic Analysis"
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 5


 257      3D205461 
 257      736B2037 
 257      3A204669 
 257      7865642D 
 258 0045 203D3D3D 		.ascii	" ===\015\000"
 258      0D00
 259 004b 00       		.align	2
 260              	.LC26:
 261 004c 0D0A2D2D 		.ascii	"\015\012--- Scaling Factor: %s (%lu) ---\015\012\000"
 261      2D205363 
 261      616C696E 
 261      67204661 
 261      63746F72 
 262 0071 000000   		.align	2
 263              	.LC31:
 264 0074 5265736F 		.ascii	"Resolution %ux%u: %lu ms, checksum %lu, overflows %"
 264      6C757469 
 264      6F6E2025 
 264      75782575 
 264      3A20256C 
 265 00a7 6C750D0A 		.ascii	"lu\015\012\000"
 265      00
 266              		.align	2
 267              	.LC33:
 268 00ac 0D0A3D3D 		.ascii	"\015\012=== Fixed-Point Analysis Summary ===\015\000"
 268      3D204669 
 268      7865642D 
 268      506F696E 
 268      7420416E 
 269              		.align	2
 270              	.LC35:
 271 00d4 5363616C 		.ascii	"Scaling Factor %s: Total overflows = %lu\015\012\000"
 271      696E6720 
 271      46616374 
 271      6F722025 
 271      733A2054 
 272              		.section	.text.main,"ax",%progbits
 273              		.align	1
 274              		.global	main
 275              		.syntax unified
 276              		.code	16
 277              		.thumb_func
 279              	main:
 280              	.LFB40:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 6


  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Task 6: Global variables for Live Expressions - Must be declared here for debugger access */
  28:Core/Src/main.c **** uint32_t g_total_program_cycles = 0u;
  29:Core/Src/main.c **** double g_total_program_time_ms = 0.0;
  30:Core/Src/main.c **** double g_total_time_sum = 0.0;
  31:Core/Src/main.c **** uint32_t g_test_counter = 0u;
  32:Core/Src/main.c **** uint32_t g_simple_test = 0u;  /* Simple test variable */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Task 7: Fixed-Point Arithmetic Analysis */
  35:Core/Src/main.c **** /* Fixed-point scaling factors to test */
  36:Core/Src/main.c **** static const uint32_t kNumScalingFactors = 3;
  37:Core/Src/main.c **** static const uint32_t kScalingFactors[3] = {1000u, 10000u, 1000000u};  /* 10^3, 10^4, 10^6 */
  38:Core/Src/main.c **** static const char* kScalingFactorNames[3] = {"10^3", "10^4", "10^6"};
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Fixed-point results for each scaling factor */
  41:Core/Src/main.c **** uint32_t g_fixed_checksum[3][5] = {{0}};  /* [scaling_factor][resolution] */
  42:Core/Src/main.c **** double g_fixed_execution_time_ms[3][5] = {{0.0}};
  43:Core/Src/main.c **** uint32_t g_fixed_overflow_count[3] = {0u, 0u, 0u};  /* Overflow counter per scaling factor */
  44:Core/Src/main.c **** uint32_t g_current_scaling_factor = 0u;  /* Current scaling factor being tested */
  45:Core/Src/main.c **** uint32_t g_current_scaling_index = 0u;   /* Index of current scaling factor */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  48:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE END PTD */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  53:Core/Src/main.c **** /* USER CODE BEGIN PD */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PD */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  58:Core/Src/main.c **** /* USER CODE BEGIN PM */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END PM */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* USER CODE BEGIN PV */
  65:Core/Src/main.c **** /* Task 6: Compiler Optimization Analysis - Practical 1B sizes */
  66:Core/Src/main.c **** static const uint32_t kMaxIter = 100u;
  67:Core/Src/main.c **** static const uint32_t kNumResolutions = 5;
  68:Core/Src/main.c **** static const uint16_t kWidths[5]  = {128, 160, 192, 224, 256};  /* Practical 1B sizes */
  69:Core/Src/main.c **** static const uint16_t kHeights[5] = {128, 160, 192, 224, 256};
  70:Core/Src/main.c **** 
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 7


  71:Core/Src/main.c **** /* Memory management for large images */
  72:Core/Src/main.c **** #define MAX_TILE_SIZE 128  /* Smaller tile size for F0 due to limited SRAM */
  73:Core/Src/main.c **** #define TILE_OVERLAP 0     /* No overlap needed for Mandelbrot calculation */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* Live Expressions: current benchmark metrics */
  76:Core/Src/main.c **** volatile uint32_t g_current_width = 0u;
  77:Core/Src/main.c **** volatile uint32_t g_current_height = 0u;
  78:Core/Src/main.c **** volatile uint32_t g_current_cycles = 0u;
  79:Core/Src/main.c **** volatile uint32_t g_current_checksum = 0u;
  80:Core/Src/main.c **** volatile double g_current_execution_time = 0.0;
  81:Core/Src/main.c **** volatile double g_current_throughput = 0.0;
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** /* Live Expressions: per-size results */
  84:Core/Src/main.c **** volatile uint32_t checksum[5] = {0u, 0u, 0u, 0u, 0u};
  85:Core/Src/main.c **** volatile double execution_time_ms[5] = {0.0, 0.0, 0.0, 0.0, 0.0};
  86:Core/Src/main.c **** volatile uint32_t cpu_cycles[5] = {0u, 0u, 0u, 0u, 0u};
  87:Core/Src/main.c **** volatile double throughput_pps[5] = {0.0, 0.0, 0.0, 0.0, 0.0};
  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** /* Task 4: Tiling information */
  90:Core/Src/main.c **** volatile uint32_t g_num_tiles_x = 0u;
  91:Core/Src/main.c **** volatile uint32_t g_num_tiles_y = 0u;
  92:Core/Src/main.c **** volatile uint32_t g_total_tiles = 0u;
  93:Core/Src/main.c **** volatile uint32_t g_current_tile = 0u;
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** /* USER CODE END PV */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  98:Core/Src/main.c **** void SystemClock_Config(void);
  99:Core/Src/main.c **** static void MX_GPIO_Init(void);
 100:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 101:Core/Src/main.c **** static uint32_t generate_mandelbrot_checksum(uint16_t width, uint16_t height, uint32_t max_iter);
 102:Core/Src/main.c **** static uint32_t generate_mandelbrot_checksum_tiled(uint16_t width, uint16_t height, uint32_t max_it
 103:Core/Src/main.c **** static uint32_t estimate_cpu_cycles_from_ms(uint32_t elapsed_ms);
 104:Core/Src/main.c **** static void log_tiling_info(uint16_t width, uint16_t height, uint32_t tiles_x, uint32_t tiles_y);
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** /* Task 7: Fixed-point arithmetic functions */
 107:Core/Src/main.c **** static int64_t fixed_multiply(int64_t a, int64_t b, uint32_t scale);
 108:Core/Src/main.c **** static int64_t fixed_add(int64_t a, int64_t b);
 109:Core/Src/main.c **** static int64_t double_to_fixed(double value, uint32_t scale);
 110:Core/Src/main.c **** static double fixed_to_double(int64_t value, uint32_t scale);
 111:Core/Src/main.c **** static uint32_t generate_mandelbrot_checksum_fixed_point(uint16_t width, uint16_t height, uint32_t 
 112:Core/Src/main.c **** 
 113:Core/Src/main.c **** /* USER CODE END PFP */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 116:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 117:Core/Src/main.c **** 
 118:Core/Src/main.c **** /* USER CODE END 0 */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c **** /**
 121:Core/Src/main.c ****   * @brief  The application entry point.
 122:Core/Src/main.c ****   * @retval int
 123:Core/Src/main.c ****   */
 124:Core/Src/main.c **** int main(void)
 125:Core/Src/main.c **** {
 281              		.loc 1 125 1
 282              		.cfi_startproc
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 8


 283              		@ args = 0, pretend = 0, frame = 104
 284              		@ frame_needed = 1, uses_anonymous_args = 0
 285 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 286              	.LCFI0:
 287              		.cfi_def_cfa_offset 20
 288              		.cfi_offset 4, -20
 289              		.cfi_offset 5, -16
 290              		.cfi_offset 6, -12
 291              		.cfi_offset 7, -8
 292              		.cfi_offset 14, -4
 293 0002 9DB0     		sub	sp, sp, #116
 294              	.LCFI1:
 295              		.cfi_def_cfa_offset 136
 296 0004 02AF     		add	r7, sp, #8
 297              	.LCFI2:
 298              		.cfi_def_cfa 7, 128
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* USER CODE END 1 */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 134:Core/Src/main.c ****   HAL_Init();
 299              		.loc 1 134 3
 300 0006 FFF7FEFF 		bl	HAL_Init
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   /* USER CODE END Init */
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /* Configure the system clock */
 141:Core/Src/main.c ****   SystemClock_Config();
 301              		.loc 1 141 3
 302 000a FFF7FEFF 		bl	SystemClock_Config
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****   /* USER CODE END SysInit */
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   /* Initialize all configured peripherals */
 148:Core/Src/main.c ****   MX_GPIO_Init();
 303              		.loc 1 148 3
 304 000e FFF7FEFF 		bl	MX_GPIO_Init
 149:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 150:Core/Src/main.c ****   
 151:Core/Src/main.c ****   /* Initialize Task 6 timing variables */
 152:Core/Src/main.c ****   g_total_program_cycles = 0u;
 305              		.loc 1 152 26
 306 0012 D74B     		ldr	r3, .L16
 307 0014 0022     		movs	r2, #0
 308 0016 1A60     		str	r2, [r3]
 153:Core/Src/main.c ****   g_total_program_time_ms = 0.0;
 309              		.loc 1 153 27
 310 0018 D649     		ldr	r1, .L16+4
 311 001a 0022     		movs	r2, #0
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 9


 312 001c 0023     		movs	r3, #0
 313 001e 0A60     		str	r2, [r1]
 314 0020 4B60     		str	r3, [r1, #4]
 154:Core/Src/main.c ****   g_total_time_sum = 0.0;
 315              		.loc 1 154 20
 316 0022 D549     		ldr	r1, .L16+8
 317 0024 0022     		movs	r2, #0
 318 0026 0023     		movs	r3, #0
 319 0028 0A60     		str	r2, [r1]
 320 002a 4B60     		str	r3, [r1, #4]
 155:Core/Src/main.c ****   g_test_counter = 0u;
 321              		.loc 1 155 18
 322 002c D34B     		ldr	r3, .L16+12
 323 002e 0022     		movs	r2, #0
 324 0030 1A60     		str	r2, [r3]
 325              	.L15:
 326              	.LBB4:
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   /* USER CODE END 2 */
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /* Infinite loop */
 160:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 161:Core/Src/main.c ****   while (1)
 162:Core/Src/main.c ****   {
 163:Core/Src/main.c ****     /* USER CODE END WHILE */
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 166:Core/Src/main.c ****       /* Increment test counters to verify Live Expressions work */
 167:Core/Src/main.c ****       g_test_counter++;
 327              		.loc 1 167 21
 328 0032 D24B     		ldr	r3, .L16+12
 329 0034 1B68     		ldr	r3, [r3]
 330 0036 5A1C     		adds	r2, r3, #1
 331 0038 D04B     		ldr	r3, .L16+12
 332 003a 1A60     		str	r2, [r3]
 168:Core/Src/main.c ****       g_simple_test++;
 333              		.loc 1 168 20
 334 003c D04B     		ldr	r3, .L16+16
 335 003e 1B68     		ldr	r3, [r3]
 336 0040 5A1C     		adds	r2, r3, #1
 337 0042 CF4B     		ldr	r3, .L16+16
 338 0044 1A60     		str	r2, [r3]
 169:Core/Src/main.c ****       
 170:Core/Src/main.c ****       /* Start total program timing */
 171:Core/Src/main.c ****       uint32_t program_start_ms = HAL_GetTick();
 339              		.loc 1 171 35
 340 0046 FFF7FEFF 		bl	HAL_GetTick
 341 004a 0300     		movs	r3, r0
 342 004c FB64     		str	r3, [r7, #76]
 172:Core/Src/main.c ****       
 173:Core/Src/main.c ****       /* Visual indicator: LED0 ON */
 174:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 343              		.loc 1 174 7
 344 004e CD4B     		ldr	r3, .L16+20
 345 0050 0122     		movs	r2, #1
 346 0052 0121     		movs	r1, #1
 347 0054 1800     		movs	r0, r3
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 10


 348 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
 349              	.LBB5:
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****       /* Task 4: Scalability test up to Full HD with tiling for large images */
 177:Core/Src/main.c ****       for (uint32_t size_index = 0; size_index < kNumResolutions; ++size_index)
 350              		.loc 1 177 21
 351 005a 0023     		movs	r3, #0
 352 005c 7B66     		str	r3, [r7, #100]
 353              		.loc 1 177 7
 354 005e A9E0     		b	.L2
 355              	.L6:
 356              	.LBB6:
 178:Core/Src/main.c ****       {
 179:Core/Src/main.c ****         uint16_t w = kWidths[size_index];
 357              		.loc 1 179 18
 358 0060 2A20     		movs	r0, #42
 359 0062 3B18     		adds	r3, r7, r0
 360 0064 C84A     		ldr	r2, .L16+24
 361 0066 796E     		ldr	r1, [r7, #100]
 362 0068 4900     		lsls	r1, r1, #1
 363 006a 8A5A     		ldrh	r2, [r1, r2]
 364 006c 1A80     		strh	r2, [r3]
 180:Core/Src/main.c ****         uint16_t h = kHeights[size_index];
 365              		.loc 1 180 18
 366 006e 2825     		movs	r5, #40
 367 0070 7B19     		adds	r3, r7, r5
 368 0072 C64A     		ldr	r2, .L16+28
 369 0074 796E     		ldr	r1, [r7, #100]
 370 0076 4900     		lsls	r1, r1, #1
 371 0078 8A5A     		ldrh	r2, [r1, r2]
 372 007a 1A80     		strh	r2, [r3]
 181:Core/Src/main.c ****         g_current_width = (uint32_t)w;
 373              		.loc 1 181 27
 374 007c 0400     		movs	r4, r0
 375 007e 3B18     		adds	r3, r7, r0
 376 0080 1A88     		ldrh	r2, [r3]
 377              		.loc 1 181 25
 378 0082 C34B     		ldr	r3, .L16+32
 379 0084 1A60     		str	r2, [r3]
 182:Core/Src/main.c ****         g_current_height = (uint32_t)h;
 380              		.loc 1 182 28
 381 0086 7B19     		adds	r3, r7, r5
 382 0088 1A88     		ldrh	r2, [r3]
 383              		.loc 1 182 26
 384 008a C24B     		ldr	r3, .L16+36
 385 008c 1A60     		str	r2, [r3]
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****         uint32_t start_ms = HAL_GetTick();
 386              		.loc 1 184 29
 387 008e FFF7FEFF 		bl	HAL_GetTick
 388 0092 0300     		movs	r3, r0
 389 0094 7B62     		str	r3, [r7, #36]
 185:Core/Src/main.c ****         
 186:Core/Src/main.c ****         /* Use tiled approach for large images that exceed memory constraints */
 187:Core/Src/main.c ****         uint32_t result_checksum;
 188:Core/Src/main.c ****         if (w > MAX_TILE_SIZE || h > MAX_TILE_SIZE) {
 390              		.loc 1 188 12
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 11


 391 0096 3B19     		adds	r3, r7, r4
 392 0098 1B88     		ldrh	r3, [r3]
 393 009a 802B     		cmp	r3, #128
 394 009c 03D8     		bhi	.L3
 395              		.loc 1 188 31 discriminator 1
 396 009e 7B19     		adds	r3, r7, r5
 397 00a0 1B88     		ldrh	r3, [r3]
 398 00a2 802B     		cmp	r3, #128
 399 00a4 0CD9     		bls	.L4
 400              	.L3:
 189:Core/Src/main.c ****           result_checksum = generate_mandelbrot_checksum_tiled(w, h, kMaxIter);
 401              		.loc 1 189 29
 402 00a6 6422     		movs	r2, #100
 403 00a8 2823     		movs	r3, #40
 404 00aa FB18     		adds	r3, r7, r3
 405 00ac 1988     		ldrh	r1, [r3]
 406 00ae 2A23     		movs	r3, #42
 407 00b0 FB18     		adds	r3, r7, r3
 408 00b2 1B88     		ldrh	r3, [r3]
 409 00b4 1800     		movs	r0, r3
 410 00b6 FFF7FEFF 		bl	generate_mandelbrot_checksum_tiled
 411 00ba 0300     		movs	r3, r0
 412 00bc 3B66     		str	r3, [r7, #96]
 413              		.loc 1 189 27
 414 00be 0BE0     		b	.L5
 415              	.L4:
 190:Core/Src/main.c ****         } else {
 191:Core/Src/main.c ****           result_checksum = generate_mandelbrot_checksum(w, h, kMaxIter);
 416              		.loc 1 191 29
 417 00c0 6422     		movs	r2, #100
 418 00c2 2823     		movs	r3, #40
 419 00c4 FB18     		adds	r3, r7, r3
 420 00c6 1988     		ldrh	r1, [r3]
 421 00c8 2A23     		movs	r3, #42
 422 00ca FB18     		adds	r3, r7, r3
 423 00cc 1B88     		ldrh	r3, [r3]
 424 00ce 1800     		movs	r0, r3
 425 00d0 FFF7FEFF 		bl	generate_mandelbrot_checksum
 426 00d4 0300     		movs	r3, r0
 427 00d6 3B66     		str	r3, [r7, #96]
 428              	.L5:
 192:Core/Src/main.c ****         }
 193:Core/Src/main.c ****         
 194:Core/Src/main.c ****         uint32_t end_ms = HAL_GetTick();
 429              		.loc 1 194 27
 430 00d8 FFF7FEFF 		bl	HAL_GetTick
 431 00dc 0300     		movs	r3, r0
 432 00de 3B62     		str	r3, [r7, #32]
 195:Core/Src/main.c ****         uint32_t elapsed_ms = end_ms - start_ms;
 433              		.loc 1 195 18
 434 00e0 3A6A     		ldr	r2, [r7, #32]
 435 00e2 7B6A     		ldr	r3, [r7, #36]
 436 00e4 D31A     		subs	r3, r2, r3
 437 00e6 FB61     		str	r3, [r7, #28]
 196:Core/Src/main.c ****         
 197:Core/Src/main.c ****         /* Estimate CPU cycles from elapsed time (F0 doesn't have DWT) */
 198:Core/Src/main.c ****         uint32_t estimated_cycles = estimate_cpu_cycles_from_ms(elapsed_ms);
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 12


 438              		.loc 1 198 37
 439 00e8 FB69     		ldr	r3, [r7, #28]
 440 00ea 1800     		movs	r0, r3
 441 00ec FFF7FEFF 		bl	estimate_cpu_cycles_from_ms
 442 00f0 0300     		movs	r3, r0
 443 00f2 BB61     		str	r3, [r7, #24]
 199:Core/Src/main.c ****         double elapsed_seconds = (double)elapsed_ms / 1000.0;
 444              		.loc 1 199 34
 445 00f4 F869     		ldr	r0, [r7, #28]
 446 00f6 FFF7FEFF 		bl	__aeabi_ui2d
 447              		.loc 1 199 16
 448 00fa 0022     		movs	r2, #0
 449 00fc A64B     		ldr	r3, .L16+40
 450 00fe FFF7FEFF 		bl	__aeabi_ddiv
 451 0102 0200     		movs	r2, r0
 452 0104 0B00     		movs	r3, r1
 453 0106 3A61     		str	r2, [r7, #16]
 454 0108 7B61     		str	r3, [r7, #20]
 200:Core/Src/main.c ****         double total_pixels = (double)w * (double)h;
 455              		.loc 1 200 31
 456 010a 2A23     		movs	r3, #42
 457 010c FB18     		adds	r3, r7, r3
 458 010e 1B88     		ldrh	r3, [r3]
 459 0110 1800     		movs	r0, r3
 460 0112 FFF7FEFF 		bl	__aeabi_ui2d
 461 0116 0400     		movs	r4, r0
 462 0118 0D00     		movs	r5, r1
 463              		.loc 1 200 43
 464 011a 2823     		movs	r3, #40
 465 011c FB18     		adds	r3, r7, r3
 466 011e 1B88     		ldrh	r3, [r3]
 467 0120 1800     		movs	r0, r3
 468 0122 FFF7FEFF 		bl	__aeabi_ui2d
 469 0126 0200     		movs	r2, r0
 470 0128 0B00     		movs	r3, r1
 471              		.loc 1 200 16
 472 012a 2000     		movs	r0, r4
 473 012c 2900     		movs	r1, r5
 474 012e FFF7FEFF 		bl	__aeabi_dmul
 475 0132 0200     		movs	r2, r0
 476 0134 0B00     		movs	r3, r1
 477 0136 BA60     		str	r2, [r7, #8]
 478 0138 FB60     		str	r3, [r7, #12]
 201:Core/Src/main.c ****         double throughput = total_pixels / elapsed_seconds;
 479              		.loc 1 201 16
 480 013a 3A69     		ldr	r2, [r7, #16]
 481 013c 7B69     		ldr	r3, [r7, #20]
 482 013e B868     		ldr	r0, [r7, #8]
 483 0140 F968     		ldr	r1, [r7, #12]
 484 0142 FFF7FEFF 		bl	__aeabi_ddiv
 485 0146 0200     		movs	r2, r0
 486 0148 0B00     		movs	r3, r1
 487 014a 3A60     		str	r2, [r7]
 488 014c 7B60     		str	r3, [r7, #4]
 202:Core/Src/main.c **** 
 203:Core/Src/main.c ****         /* Update Live Expressions */
 204:Core/Src/main.c ****         g_current_cycles = estimated_cycles;
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 13


 489              		.loc 1 204 26
 490 014e 934B     		ldr	r3, .L16+44
 491 0150 BA69     		ldr	r2, [r7, #24]
 492 0152 1A60     		str	r2, [r3]
 205:Core/Src/main.c ****         g_current_checksum = result_checksum;
 493              		.loc 1 205 28
 494 0154 924B     		ldr	r3, .L16+48
 495 0156 3A6E     		ldr	r2, [r7, #96]
 496 0158 1A60     		str	r2, [r3]
 206:Core/Src/main.c ****         g_current_execution_time = (double)elapsed_ms;
 497              		.loc 1 206 36
 498 015a F869     		ldr	r0, [r7, #28]
 499 015c FFF7FEFF 		bl	__aeabi_ui2d
 500 0160 0200     		movs	r2, r0
 501 0162 0B00     		movs	r3, r1
 502              		.loc 1 206 34
 503 0164 8F49     		ldr	r1, .L16+52
 504 0166 0A60     		str	r2, [r1]
 505 0168 4B60     		str	r3, [r1, #4]
 207:Core/Src/main.c ****         g_current_throughput = throughput;
 506              		.loc 1 207 30
 507 016a 8F49     		ldr	r1, .L16+56
 508 016c 3A68     		ldr	r2, [r7]
 509 016e 7B68     		ldr	r3, [r7, #4]
 510 0170 0A60     		str	r2, [r1]
 511 0172 4B60     		str	r3, [r1, #4]
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****         /* Store results */
 210:Core/Src/main.c ****         checksum[size_index] = result_checksum;
 512              		.loc 1 210 30
 513 0174 8D4B     		ldr	r3, .L16+60
 514 0176 7A6E     		ldr	r2, [r7, #100]
 515 0178 9200     		lsls	r2, r2, #2
 516 017a 396E     		ldr	r1, [r7, #96]
 517 017c D150     		str	r1, [r2, r3]
 211:Core/Src/main.c ****         execution_time_ms[size_index] = (double)elapsed_ms;
 518              		.loc 1 211 41
 519 017e F869     		ldr	r0, [r7, #28]
 520 0180 FFF7FEFF 		bl	__aeabi_ui2d
 521 0184 0200     		movs	r2, r0
 522 0186 0B00     		movs	r3, r1
 523              		.loc 1 211 39
 524 0188 8948     		ldr	r0, .L16+64
 525 018a 796E     		ldr	r1, [r7, #100]
 526 018c C900     		lsls	r1, r1, #3
 527 018e 4118     		adds	r1, r0, r1
 528 0190 0A60     		str	r2, [r1]
 529 0192 4B60     		str	r3, [r1, #4]
 212:Core/Src/main.c ****         cpu_cycles[size_index] = estimated_cycles;
 530              		.loc 1 212 32
 531 0194 874B     		ldr	r3, .L16+68
 532 0196 7A6E     		ldr	r2, [r7, #100]
 533 0198 9200     		lsls	r2, r2, #2
 534 019a B969     		ldr	r1, [r7, #24]
 535 019c D150     		str	r1, [r2, r3]
 213:Core/Src/main.c ****         throughput_pps[size_index] = throughput;
 536              		.loc 1 213 36
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 14


 537 019e 864A     		ldr	r2, .L16+72
 538 01a0 7B6E     		ldr	r3, [r7, #100]
 539 01a2 DB00     		lsls	r3, r3, #3
 540 01a4 D118     		adds	r1, r2, r3
 541 01a6 3A68     		ldr	r2, [r7]
 542 01a8 7B68     		ldr	r3, [r7, #4]
 543 01aa 0A60     		str	r2, [r1]
 544 01ac 4B60     		str	r3, [r1, #4]
 545              	.LBE6:
 177:Core/Src/main.c ****       {
 546              		.loc 1 177 67 discriminator 2
 547 01ae 7B6E     		ldr	r3, [r7, #100]
 548 01b0 0133     		adds	r3, r3, #1
 549 01b2 7B66     		str	r3, [r7, #100]
 550              	.L2:
 177:Core/Src/main.c ****       {
 551              		.loc 1 177 48 discriminator 1
 552 01b4 0522     		movs	r2, #5
 553 01b6 7B6E     		ldr	r3, [r7, #100]
 554 01b8 9342     		cmp	r3, r2
 555 01ba 00D2     		bcs	.LCB226
 556 01bc 50E7     		b	.L6	@long jump
 557              	.LCB226:
 558              	.LBE5:
 214:Core/Src/main.c ****       }
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****       /* End total program timing */
 217:Core/Src/main.c ****       uint32_t program_end_ms = HAL_GetTick();
 559              		.loc 1 217 33
 560 01be FFF7FEFF 		bl	HAL_GetTick
 561 01c2 0300     		movs	r3, r0
 562 01c4 BB64     		str	r3, [r7, #72]
 218:Core/Src/main.c ****       uint32_t total_elapsed_ms = program_end_ms - program_start_ms;
 563              		.loc 1 218 16
 564 01c6 BA6C     		ldr	r2, [r7, #72]
 565 01c8 FB6C     		ldr	r3, [r7, #76]
 566 01ca D31A     		subs	r3, r2, r3
 567 01cc 7B64     		str	r3, [r7, #68]
 219:Core/Src/main.c ****       g_total_program_time_ms = (double)total_elapsed_ms;
 568              		.loc 1 219 33
 569 01ce 786C     		ldr	r0, [r7, #68]
 570 01d0 FFF7FEFF 		bl	__aeabi_ui2d
 571 01d4 0200     		movs	r2, r0
 572 01d6 0B00     		movs	r3, r1
 573              		.loc 1 219 31
 574 01d8 6649     		ldr	r1, .L16+4
 575 01da 0A60     		str	r2, [r1]
 576 01dc 4B60     		str	r3, [r1, #4]
 220:Core/Src/main.c ****       
 221:Core/Src/main.c ****       /* Calculate total time sum from individual tests */
 222:Core/Src/main.c ****       g_total_time_sum = 0.0;
 577              		.loc 1 222 24
 578 01de 6649     		ldr	r1, .L16+8
 579 01e0 0022     		movs	r2, #0
 580 01e2 0023     		movs	r3, #0
 581 01e4 0A60     		str	r2, [r1]
 582 01e6 4B60     		str	r3, [r1, #4]
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 15


 583              	.LBB7:
 223:Core/Src/main.c ****       for (uint32_t i = 0; i < kNumResolutions; ++i) {
 584              		.loc 1 223 21
 585 01e8 0023     		movs	r3, #0
 586 01ea FB65     		str	r3, [r7, #92]
 587              		.loc 1 223 7
 588 01ec 12E0     		b	.L7
 589              	.L8:
 224:Core/Src/main.c ****         g_total_time_sum += execution_time_ms[i];
 590              		.loc 1 224 46
 591 01ee 704A     		ldr	r2, .L16+64
 592 01f0 FB6D     		ldr	r3, [r7, #92]
 593 01f2 DB00     		lsls	r3, r3, #3
 594 01f4 D318     		adds	r3, r2, r3
 595 01f6 1868     		ldr	r0, [r3]
 596 01f8 5968     		ldr	r1, [r3, #4]
 597              		.loc 1 224 26
 598 01fa 5F4B     		ldr	r3, .L16+8
 599 01fc 1A68     		ldr	r2, [r3]
 600 01fe 5B68     		ldr	r3, [r3, #4]
 601 0200 FFF7FEFF 		bl	__aeabi_dadd
 602 0204 0200     		movs	r2, r0
 603 0206 0B00     		movs	r3, r1
 604 0208 5B49     		ldr	r1, .L16+8
 605 020a 0A60     		str	r2, [r1]
 606 020c 4B60     		str	r3, [r1, #4]
 223:Core/Src/main.c ****       for (uint32_t i = 0; i < kNumResolutions; ++i) {
 607              		.loc 1 223 49 discriminator 3
 608 020e FB6D     		ldr	r3, [r7, #92]
 609 0210 0133     		adds	r3, r3, #1
 610 0212 FB65     		str	r3, [r7, #92]
 611              	.L7:
 223:Core/Src/main.c ****       for (uint32_t i = 0; i < kNumResolutions; ++i) {
 612              		.loc 1 223 30 discriminator 1
 613 0214 0522     		movs	r2, #5
 614 0216 FB6D     		ldr	r3, [r7, #92]
 615 0218 9342     		cmp	r3, r2
 616 021a E8D3     		bcc	.L8
 617              	.LBE7:
 225:Core/Src/main.c ****       }
 226:Core/Src/main.c ****       
 227:Core/Src/main.c ****       /* Debug: Store raw values for debugging */
 228:Core/Src/main.c ****       g_total_program_cycles = total_elapsed_ms;  /* Store raw ms value for debugging */
 618              		.loc 1 228 30
 619 021c 544B     		ldr	r3, .L16
 620 021e 7A6C     		ldr	r2, [r7, #68]
 621 0220 1A60     		str	r2, [r3]
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****       /* Task 7: Fixed-Point Arithmetic Analysis */
 231:Core/Src/main.c ****       printf("\r\n=== Task 7: Fixed-Point Arithmetic Analysis ===\r\n");
 622              		.loc 1 231 7
 623 0222 664B     		ldr	r3, .L16+76
 624 0224 1800     		movs	r0, r3
 625 0226 FFF7FEFF 		bl	puts
 626              	.LBB8:
 232:Core/Src/main.c ****       
 233:Core/Src/main.c ****       /* Test each scaling factor */
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 16


 234:Core/Src/main.c ****       for (uint32_t scale_idx = 0; scale_idx < kNumScalingFactors; ++scale_idx)
 627              		.loc 1 234 21
 628 022a 0023     		movs	r3, #0
 629 022c BB65     		str	r3, [r7, #88]
 630              		.loc 1 234 7
 631 022e 6FE0     		b	.L9
 632              	.L12:
 633              	.LBB9:
 235:Core/Src/main.c ****       {
 236:Core/Src/main.c ****         uint32_t scale = kScalingFactors[scale_idx];
 634              		.loc 1 236 18
 635 0230 634B     		ldr	r3, .L16+80
 636 0232 BA6D     		ldr	r2, [r7, #88]
 637 0234 9200     		lsls	r2, r2, #2
 638 0236 D358     		ldr	r3, [r2, r3]
 639 0238 3B64     		str	r3, [r7, #64]
 237:Core/Src/main.c ****         g_current_scaling_factor = scale;
 640              		.loc 1 237 34
 641 023a 624B     		ldr	r3, .L16+84
 642 023c 3A6C     		ldr	r2, [r7, #64]
 643 023e 1A60     		str	r2, [r3]
 238:Core/Src/main.c ****         g_current_scaling_index = scale_idx;
 644              		.loc 1 238 33
 645 0240 614B     		ldr	r3, .L16+88
 646 0242 BA6D     		ldr	r2, [r7, #88]
 647 0244 1A60     		str	r2, [r3]
 239:Core/Src/main.c ****         
 240:Core/Src/main.c ****         printf("\r\n--- Scaling Factor: %s (%lu) ---\r\n", kScalingFactorNames[scale_idx], (unsigne
 648              		.loc 1 240 9
 649 0246 614B     		ldr	r3, .L16+92
 650 0248 BA6D     		ldr	r2, [r7, #88]
 651 024a 9200     		lsls	r2, r2, #2
 652 024c D158     		ldr	r1, [r2, r3]
 653 024e 3A6C     		ldr	r2, [r7, #64]
 654 0250 5F4B     		ldr	r3, .L16+96
 655 0252 1800     		movs	r0, r3
 656 0254 FFF7FEFF 		bl	printf
 657              	.LBB10:
 241:Core/Src/main.c ****         
 242:Core/Src/main.c ****         /* Test each resolution */
 243:Core/Src/main.c ****         for (uint32_t size_index = 0; size_index < kNumResolutions; ++size_index)
 658              		.loc 1 243 23
 659 0258 0023     		movs	r3, #0
 660 025a 7B65     		str	r3, [r7, #84]
 661              		.loc 1 243 9
 662 025c 51E0     		b	.L10
 663              	.L11:
 664              	.LBB11:
 244:Core/Src/main.c ****         {
 245:Core/Src/main.c ****           uint16_t w = kWidths[size_index];
 665              		.loc 1 245 20
 666 025e 3E25     		movs	r5, #62
 667 0260 7B19     		adds	r3, r7, r5
 668 0262 494A     		ldr	r2, .L16+24
 669 0264 796D     		ldr	r1, [r7, #84]
 670 0266 4900     		lsls	r1, r1, #1
 671 0268 8A5A     		ldrh	r2, [r1, r2]
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 17


 672 026a 1A80     		strh	r2, [r3]
 246:Core/Src/main.c ****           uint16_t h = kHeights[size_index];
 673              		.loc 1 246 20
 674 026c 3C26     		movs	r6, #60
 675 026e BB19     		adds	r3, r7, r6
 676 0270 464A     		ldr	r2, .L16+28
 677 0272 796D     		ldr	r1, [r7, #84]
 678 0274 4900     		lsls	r1, r1, #1
 679 0276 8A5A     		ldrh	r2, [r1, r2]
 680 0278 1A80     		strh	r2, [r3]
 247:Core/Src/main.c ****           
 248:Core/Src/main.c ****           /* Time the fixed-point calculation */
 249:Core/Src/main.c ****           uint32_t start_ms = HAL_GetTick();
 681              		.loc 1 249 31
 682 027a FFF7FEFF 		bl	HAL_GetTick
 683 027e 0300     		movs	r3, r0
 684 0280 BB63     		str	r3, [r7, #56]
 250:Core/Src/main.c ****           uint32_t result_checksum = generate_mandelbrot_checksum_fixed_point(w, h, kMaxIter, scale
 685              		.loc 1 250 38
 686 0282 6424     		movs	r4, #100
 687 0284 3A6C     		ldr	r2, [r7, #64]
 688 0286 BB19     		adds	r3, r7, r6
 689 0288 1988     		ldrh	r1, [r3]
 690 028a 7B19     		adds	r3, r7, r5
 691 028c 1888     		ldrh	r0, [r3]
 692 028e 1300     		movs	r3, r2
 693 0290 2200     		movs	r2, r4
 694 0292 FFF7FEFF 		bl	generate_mandelbrot_checksum_fixed_point
 695 0296 0300     		movs	r3, r0
 696 0298 7B63     		str	r3, [r7, #52]
 251:Core/Src/main.c ****           uint32_t end_ms = HAL_GetTick();
 697              		.loc 1 251 29
 698 029a FFF7FEFF 		bl	HAL_GetTick
 699 029e 0300     		movs	r3, r0
 700 02a0 3B63     		str	r3, [r7, #48]
 252:Core/Src/main.c ****           uint32_t elapsed_ms = end_ms - start_ms;
 701              		.loc 1 252 20
 702 02a2 3A6B     		ldr	r2, [r7, #48]
 703 02a4 BB6B     		ldr	r3, [r7, #56]
 704 02a6 D31A     		subs	r3, r2, r3
 705 02a8 FB62     		str	r3, [r7, #44]
 253:Core/Src/main.c ****           
 254:Core/Src/main.c ****           /* Store results */
 255:Core/Src/main.c ****           g_fixed_checksum[scale_idx][size_index] = result_checksum;
 706              		.loc 1 255 51
 707 02aa 4A49     		ldr	r1, .L16+100
 708 02ac BA6D     		ldr	r2, [r7, #88]
 709 02ae 1300     		movs	r3, r2
 710 02b0 9B00     		lsls	r3, r3, #2
 711 02b2 9B18     		adds	r3, r3, r2
 712 02b4 7A6D     		ldr	r2, [r7, #84]
 713 02b6 9B18     		adds	r3, r3, r2
 714 02b8 9B00     		lsls	r3, r3, #2
 715 02ba 7A6B     		ldr	r2, [r7, #52]
 716 02bc 5A50     		str	r2, [r3, r1]
 256:Core/Src/main.c ****           g_fixed_execution_time_ms[scale_idx][size_index] = (double)elapsed_ms;
 717              		.loc 1 256 62
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 18


 718 02be F86A     		ldr	r0, [r7, #44]
 719 02c0 FFF7FEFF 		bl	__aeabi_ui2d
 720              		.loc 1 256 60
 721 02c4 444C     		ldr	r4, .L16+104
 722 02c6 BA6D     		ldr	r2, [r7, #88]
 723 02c8 1300     		movs	r3, r2
 724 02ca 9B00     		lsls	r3, r3, #2
 725 02cc 9B18     		adds	r3, r3, r2
 726 02ce 7A6D     		ldr	r2, [r7, #84]
 727 02d0 9B18     		adds	r3, r3, r2
 728 02d2 DB00     		lsls	r3, r3, #3
 729 02d4 E318     		adds	r3, r4, r3
 730 02d6 1860     		str	r0, [r3]
 731 02d8 5960     		str	r1, [r3, #4]
 257:Core/Src/main.c ****           
 258:Core/Src/main.c ****           printf("Resolution %ux%u: %lu ms, checksum %lu, overflows %lu\r\n",
 732              		.loc 1 258 11
 733 02da 7B19     		adds	r3, r7, r5
 734 02dc 1988     		ldrh	r1, [r3]
 735 02de BB19     		adds	r3, r7, r6
 736 02e0 1C88     		ldrh	r4, [r3]
 259:Core/Src/main.c ****                  (unsigned)w, (unsigned)h, (unsigned long)elapsed_ms, 
 260:Core/Src/main.c ****                  (unsigned long)result_checksum, (unsigned long)g_fixed_overflow_count[scale_idx]);
 737              		.loc 1 260 87
 738 02e2 3E4B     		ldr	r3, .L16+108
 739 02e4 BA6D     		ldr	r2, [r7, #88]
 740 02e6 9200     		lsls	r2, r2, #2
 741 02e8 D358     		ldr	r3, [r2, r3]
 258:Core/Src/main.c ****                  (unsigned)w, (unsigned)h, (unsigned long)elapsed_ms, 
 742              		.loc 1 258 11
 743 02ea FA6A     		ldr	r2, [r7, #44]
 744 02ec 3C48     		ldr	r0, .L16+112
 745 02ee 0193     		str	r3, [sp, #4]
 746 02f0 7B6B     		ldr	r3, [r7, #52]
 747 02f2 0093     		str	r3, [sp]
 748 02f4 1300     		movs	r3, r2
 749 02f6 2200     		movs	r2, r4
 750 02f8 FFF7FEFF 		bl	printf
 751              	.LBE11:
 243:Core/Src/main.c ****         {
 752              		.loc 1 243 69 discriminator 3
 753 02fc 7B6D     		ldr	r3, [r7, #84]
 754 02fe 0133     		adds	r3, r3, #1
 755 0300 7B65     		str	r3, [r7, #84]
 756              	.L10:
 243:Core/Src/main.c ****         {
 757              		.loc 1 243 50 discriminator 1
 758 0302 0522     		movs	r2, #5
 759 0304 7B6D     		ldr	r3, [r7, #84]
 760 0306 9342     		cmp	r3, r2
 761 0308 A9D3     		bcc	.L11
 762              	.LBE10:
 763              	.LBE9:
 234:Core/Src/main.c ****       {
 764              		.loc 1 234 68 discriminator 2
 765 030a BB6D     		ldr	r3, [r7, #88]
 766 030c 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 19


 767 030e BB65     		str	r3, [r7, #88]
 768              	.L9:
 234:Core/Src/main.c ****       {
 769              		.loc 1 234 46 discriminator 1
 770 0310 0322     		movs	r2, #3
 771 0312 BB6D     		ldr	r3, [r7, #88]
 772 0314 9342     		cmp	r3, r2
 773 0316 8BD3     		bcc	.L12
 774              	.LBE8:
 261:Core/Src/main.c ****         }
 262:Core/Src/main.c ****       }
 263:Core/Src/main.c ****       
 264:Core/Src/main.c ****       /* Print analysis summary */
 265:Core/Src/main.c ****       printf("\r\n=== Fixed-Point Analysis Summary ===\r\n");
 775              		.loc 1 265 7
 776 0318 324B     		ldr	r3, .L16+116
 777 031a 1800     		movs	r0, r3
 778 031c FFF7FEFF 		bl	puts
 779              	.LBB12:
 266:Core/Src/main.c ****       for (uint32_t scale_idx = 0; scale_idx < kNumScalingFactors; ++scale_idx)
 780              		.loc 1 266 21
 781 0320 0023     		movs	r3, #0
 782 0322 3B65     		str	r3, [r7, #80]
 783              		.loc 1 266 7
 784 0324 0EE0     		b	.L13
 785              	.L14:
 267:Core/Src/main.c ****       {
 268:Core/Src/main.c ****         printf("Scaling Factor %s: Total overflows = %lu\r\n", 
 786              		.loc 1 268 9
 787 0326 294B     		ldr	r3, .L16+92
 788 0328 3A6D     		ldr	r2, [r7, #80]
 789 032a 9200     		lsls	r2, r2, #2
 790 032c D158     		ldr	r1, [r2, r3]
 269:Core/Src/main.c ****                kScalingFactorNames[scale_idx], (unsigned long)g_fixed_overflow_count[scale_idx]);
 791              		.loc 1 269 85
 792 032e 2B4B     		ldr	r3, .L16+108
 793 0330 3A6D     		ldr	r2, [r7, #80]
 794 0332 9200     		lsls	r2, r2, #2
 795 0334 D258     		ldr	r2, [r2, r3]
 268:Core/Src/main.c ****                kScalingFactorNames[scale_idx], (unsigned long)g_fixed_overflow_count[scale_idx]);
 796              		.loc 1 268 9
 797 0336 2C4B     		ldr	r3, .L16+120
 798 0338 1800     		movs	r0, r3
 799 033a FFF7FEFF 		bl	printf
 266:Core/Src/main.c ****       {
 800              		.loc 1 266 68 discriminator 3
 801 033e 3B6D     		ldr	r3, [r7, #80]
 802 0340 0133     		adds	r3, r3, #1
 803 0342 3B65     		str	r3, [r7, #80]
 804              	.L13:
 266:Core/Src/main.c ****       {
 805              		.loc 1 266 46 discriminator 1
 806 0344 0322     		movs	r2, #3
 807 0346 3B6D     		ldr	r3, [r7, #80]
 808 0348 9342     		cmp	r3, r2
 809 034a ECD3     		bcc	.L14
 810              	.LBE12:
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 20


 270:Core/Src/main.c ****       }
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****       /* Visual indicator: LED1 ON, keep ON 2s, then turn both OFF */
 273:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 811              		.loc 1 273 7
 812 034c 0D4B     		ldr	r3, .L16+20
 813 034e 0122     		movs	r2, #1
 814 0350 0221     		movs	r1, #2
 815 0352 1800     		movs	r0, r3
 816 0354 FFF7FEFF 		bl	HAL_GPIO_WritePin
 274:Core/Src/main.c ****       HAL_Delay(2000);
 817              		.loc 1 274 7
 818 0358 FA23     		movs	r3, #250
 819 035a DB00     		lsls	r3, r3, #3
 820 035c 1800     		movs	r0, r3
 821 035e FFF7FEFF 		bl	HAL_Delay
 275:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0 | GPIO_PIN_1, GPIO_PIN_RESET);
 822              		.loc 1 275 7
 823 0362 084B     		ldr	r3, .L16+20
 824 0364 0022     		movs	r2, #0
 825 0366 0321     		movs	r1, #3
 826 0368 1800     		movs	r0, r3
 827 036a FFF7FEFF 		bl	HAL_GPIO_WritePin
 828              	.LBE4:
 162:Core/Src/main.c ****     /* USER CODE END WHILE */
 829              		.loc 1 162 3
 830 036e 60E6     		b	.L15
 831              	.L17:
 832              		.align	2
 833              	.L16:
 834 0370 00000000 		.word	g_total_program_cycles
 835 0374 00000000 		.word	g_total_program_time_ms
 836 0378 00000000 		.word	g_total_time_sum
 837 037c 00000000 		.word	g_test_counter
 838 0380 00000000 		.word	g_simple_test
 839 0384 00040048 		.word	1207960576
 840 0388 00000000 		.word	kWidths
 841 038c 00000000 		.word	kHeights
 842 0390 00000000 		.word	g_current_width
 843 0394 00000000 		.word	g_current_height
 844 0398 00408F40 		.word	1083129856
 845 039c 00000000 		.word	g_current_cycles
 846 03a0 00000000 		.word	g_current_checksum
 847 03a4 00000000 		.word	g_current_execution_time
 848 03a8 00000000 		.word	g_current_throughput
 849 03ac 00000000 		.word	checksum
 850 03b0 00000000 		.word	execution_time_ms
 851 03b4 00000000 		.word	cpu_cycles
 852 03b8 00000000 		.word	throughput_pps
 853 03bc 18000000 		.word	.LC20
 854 03c0 00000000 		.word	kScalingFactors
 855 03c4 00000000 		.word	g_current_scaling_factor
 856 03c8 00000000 		.word	g_current_scaling_index
 857 03cc 00000000 		.word	kScalingFactorNames
 858 03d0 4C000000 		.word	.LC26
 859 03d4 00000000 		.word	g_fixed_checksum
 860 03d8 00000000 		.word	g_fixed_execution_time_ms
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 21


 861 03dc 00000000 		.word	g_fixed_overflow_count
 862 03e0 74000000 		.word	.LC31
 863 03e4 AC000000 		.word	.LC33
 864 03e8 D4000000 		.word	.LC35
 865              		.cfi_endproc
 866              	.LFE40:
 868              		.section	.text.SystemClock_Config,"ax",%progbits
 869              		.align	1
 870              		.global	SystemClock_Config
 871              		.syntax unified
 872              		.code	16
 873              		.thumb_func
 875              	SystemClock_Config:
 876              	.LFB41:
 276:Core/Src/main.c ****   }
 277:Core/Src/main.c ****   /* USER CODE END 3 */
 278:Core/Src/main.c **** }
 279:Core/Src/main.c **** 
 280:Core/Src/main.c **** /**
 281:Core/Src/main.c ****   * @brief System Clock Configuration
 282:Core/Src/main.c ****   * @retval None
 283:Core/Src/main.c ****   */
 284:Core/Src/main.c **** void SystemClock_Config(void)
 285:Core/Src/main.c **** {
 877              		.loc 1 285 1
 878              		.cfi_startproc
 879              		@ args = 0, pretend = 0, frame = 64
 880              		@ frame_needed = 1, uses_anonymous_args = 0
 881 0000 90B5     		push	{r4, r7, lr}
 882              	.LCFI3:
 883              		.cfi_def_cfa_offset 12
 884              		.cfi_offset 4, -12
 885              		.cfi_offset 7, -8
 886              		.cfi_offset 14, -4
 887 0002 91B0     		sub	sp, sp, #68
 888              	.LCFI4:
 889              		.cfi_def_cfa_offset 80
 890 0004 00AF     		add	r7, sp, #0
 891              	.LCFI5:
 892              		.cfi_def_cfa_register 7
 286:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 893              		.loc 1 286 22
 894 0006 1024     		movs	r4, #16
 895 0008 3B19     		adds	r3, r7, r4
 896 000a 1800     		movs	r0, r3
 897 000c 3023     		movs	r3, #48
 898 000e 1A00     		movs	r2, r3
 899 0010 0021     		movs	r1, #0
 900 0012 FFF7FEFF 		bl	memset
 287:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 901              		.loc 1 287 22
 902 0016 3B00     		movs	r3, r7
 903 0018 1800     		movs	r0, r3
 904 001a 1023     		movs	r3, #16
 905 001c 1A00     		movs	r2, r3
 906 001e 0021     		movs	r1, #0
 907 0020 FFF7FEFF 		bl	memset
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 22


 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 290:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 291:Core/Src/main.c ****   */
 292:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 908              		.loc 1 292 36
 909 0024 2100     		movs	r1, r4
 910 0026 7B18     		adds	r3, r7, r1
 911 0028 0222     		movs	r2, #2
 912 002a 1A60     		str	r2, [r3]
 293:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 913              		.loc 1 293 30
 914 002c 7B18     		adds	r3, r7, r1
 915 002e 0122     		movs	r2, #1
 916 0030 DA60     		str	r2, [r3, #12]
 294:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 917              		.loc 1 294 41
 918 0032 7B18     		adds	r3, r7, r1
 919 0034 1022     		movs	r2, #16
 920 0036 1A61     		str	r2, [r3, #16]
 295:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 921              		.loc 1 295 34
 922 0038 7B18     		adds	r3, r7, r1
 923 003a 0222     		movs	r2, #2
 924 003c 1A62     		str	r2, [r3, #32]
 296:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 925              		.loc 1 296 35
 926 003e 7B18     		adds	r3, r7, r1
 927 0040 0022     		movs	r2, #0
 928 0042 5A62     		str	r2, [r3, #36]
 297:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 929              		.loc 1 297 32
 930 0044 7B18     		adds	r3, r7, r1
 931 0046 A022     		movs	r2, #160
 932 0048 9203     		lsls	r2, r2, #14
 933 004a 9A62     		str	r2, [r3, #40]
 298:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 934              		.loc 1 298 32
 935 004c 7B18     		adds	r3, r7, r1
 936 004e 0022     		movs	r2, #0
 937 0050 DA62     		str	r2, [r3, #44]
 299:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 938              		.loc 1 299 7
 939 0052 7B18     		adds	r3, r7, r1
 940 0054 1800     		movs	r0, r3
 941 0056 FFF7FEFF 		bl	HAL_RCC_OscConfig
 942 005a 031E     		subs	r3, r0, #0
 943              		.loc 1 299 6 discriminator 1
 944 005c 01D0     		beq	.L19
 300:Core/Src/main.c ****   {
 301:Core/Src/main.c ****     Error_Handler();
 945              		.loc 1 301 5
 946 005e FFF7FEFF 		bl	Error_Handler
 947              	.L19:
 302:Core/Src/main.c ****   }
 303:Core/Src/main.c **** 
 304:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 23


 305:Core/Src/main.c ****   */
 306:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 948              		.loc 1 306 31
 949 0062 3B00     		movs	r3, r7
 950 0064 0722     		movs	r2, #7
 951 0066 1A60     		str	r2, [r3]
 307:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 308:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 952              		.loc 1 308 34
 953 0068 3B00     		movs	r3, r7
 954 006a 0222     		movs	r2, #2
 955 006c 5A60     		str	r2, [r3, #4]
 309:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 956              		.loc 1 309 35
 957 006e 3B00     		movs	r3, r7
 958 0070 0022     		movs	r2, #0
 959 0072 9A60     		str	r2, [r3, #8]
 310:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 960              		.loc 1 310 36
 961 0074 3B00     		movs	r3, r7
 962 0076 0022     		movs	r2, #0
 963 0078 DA60     		str	r2, [r3, #12]
 311:Core/Src/main.c **** 
 312:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 964              		.loc 1 312 7
 965 007a 3B00     		movs	r3, r7
 966 007c 0121     		movs	r1, #1
 967 007e 1800     		movs	r0, r3
 968 0080 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 969 0084 031E     		subs	r3, r0, #0
 970              		.loc 1 312 6 discriminator 1
 971 0086 01D0     		beq	.L21
 313:Core/Src/main.c ****   {
 314:Core/Src/main.c ****     Error_Handler();
 972              		.loc 1 314 5
 973 0088 FFF7FEFF 		bl	Error_Handler
 974              	.L21:
 315:Core/Src/main.c ****   }
 316:Core/Src/main.c **** }
 975              		.loc 1 316 1
 976 008c C046     		nop
 977 008e BD46     		mov	sp, r7
 978 0090 11B0     		add	sp, sp, #68
 979              		@ sp needed
 980 0092 90BD     		pop	{r4, r7, pc}
 981              		.cfi_endproc
 982              	.LFE41:
 984              		.section	.text.MX_GPIO_Init,"ax",%progbits
 985              		.align	1
 986              		.syntax unified
 987              		.code	16
 988              		.thumb_func
 990              	MX_GPIO_Init:
 991              	.LFB42:
 317:Core/Src/main.c **** 
 318:Core/Src/main.c **** /**
 319:Core/Src/main.c ****   * @brief GPIO Initialization Function
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 24


 320:Core/Src/main.c ****   * @param None
 321:Core/Src/main.c ****   * @retval None
 322:Core/Src/main.c ****   */
 323:Core/Src/main.c **** static void MX_GPIO_Init(void)
 324:Core/Src/main.c **** {
 992              		.loc 1 324 1
 993              		.cfi_startproc
 994              		@ args = 0, pretend = 0, frame = 32
 995              		@ frame_needed = 1, uses_anonymous_args = 0
 996 0000 90B5     		push	{r4, r7, lr}
 997              	.LCFI6:
 998              		.cfi_def_cfa_offset 12
 999              		.cfi_offset 4, -12
 1000              		.cfi_offset 7, -8
 1001              		.cfi_offset 14, -4
 1002 0002 89B0     		sub	sp, sp, #36
 1003              	.LCFI7:
 1004              		.cfi_def_cfa_offset 48
 1005 0004 00AF     		add	r7, sp, #0
 1006              	.LCFI8:
 1007              		.cfi_def_cfa_register 7
 325:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 1008              		.loc 1 325 20
 1009 0006 0C24     		movs	r4, #12
 1010 0008 3B19     		adds	r3, r7, r4
 1011 000a 1800     		movs	r0, r3
 1012 000c 1423     		movs	r3, #20
 1013 000e 1A00     		movs	r2, r3
 1014 0010 0021     		movs	r1, #0
 1015 0012 FFF7FEFF 		bl	memset
 1016              	.LBB13:
 326:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 327:Core/Src/main.c **** 
 328:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 329:Core/Src/main.c **** 
 330:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 331:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
 1017              		.loc 1 331 3
 1018 0016 234B     		ldr	r3, .L23
 1019 0018 5A69     		ldr	r2, [r3, #20]
 1020 001a 224B     		ldr	r3, .L23
 1021 001c 8021     		movs	r1, #128
 1022 001e C903     		lsls	r1, r1, #15
 1023 0020 0A43     		orrs	r2, r1
 1024 0022 5A61     		str	r2, [r3, #20]
 1025 0024 1F4B     		ldr	r3, .L23
 1026 0026 5A69     		ldr	r2, [r3, #20]
 1027 0028 8023     		movs	r3, #128
 1028 002a DB03     		lsls	r3, r3, #15
 1029 002c 1340     		ands	r3, r2
 1030 002e BB60     		str	r3, [r7, #8]
 1031 0030 BB68     		ldr	r3, [r7, #8]
 1032              	.LBE13:
 1033              	.LBB14:
 332:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 1034              		.loc 1 332 3
 1035 0032 1C4B     		ldr	r3, .L23
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 25


 1036 0034 5A69     		ldr	r2, [r3, #20]
 1037 0036 1B4B     		ldr	r3, .L23
 1038 0038 8021     		movs	r1, #128
 1039 003a C902     		lsls	r1, r1, #11
 1040 003c 0A43     		orrs	r2, r1
 1041 003e 5A61     		str	r2, [r3, #20]
 1042 0040 184B     		ldr	r3, .L23
 1043 0042 5A69     		ldr	r2, [r3, #20]
 1044 0044 8023     		movs	r3, #128
 1045 0046 DB02     		lsls	r3, r3, #11
 1046 0048 1340     		ands	r3, r2
 1047 004a 7B60     		str	r3, [r7, #4]
 1048 004c 7B68     		ldr	r3, [r7, #4]
 1049              	.LBE14:
 1050              	.LBB15:
 333:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 1051              		.loc 1 333 3
 1052 004e 154B     		ldr	r3, .L23
 1053 0050 5A69     		ldr	r2, [r3, #20]
 1054 0052 144B     		ldr	r3, .L23
 1055 0054 8021     		movs	r1, #128
 1056 0056 8902     		lsls	r1, r1, #10
 1057 0058 0A43     		orrs	r2, r1
 1058 005a 5A61     		str	r2, [r3, #20]
 1059 005c 114B     		ldr	r3, .L23
 1060 005e 5A69     		ldr	r2, [r3, #20]
 1061 0060 8023     		movs	r3, #128
 1062 0062 9B02     		lsls	r3, r3, #10
 1063 0064 1340     		ands	r3, r2
 1064 0066 3B60     		str	r3, [r7]
 1065 0068 3B68     		ldr	r3, [r7]
 1066              	.LBE15:
 334:Core/Src/main.c **** 
 335:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 336:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 1067              		.loc 1 336 3
 1068 006a 0F4B     		ldr	r3, .L23+4
 1069 006c 0022     		movs	r2, #0
 1070 006e FF21     		movs	r1, #255
 1071 0070 1800     		movs	r0, r3
 1072 0072 FFF7FEFF 		bl	HAL_GPIO_WritePin
 337:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 338:Core/Src/main.c **** 
 339:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB2 PB3
 340:Core/Src/main.c ****                            PB4 PB5 PB6 PB7 */
 341:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 1073              		.loc 1 341 23
 1074 0076 2100     		movs	r1, r4
 1075 0078 7B18     		adds	r3, r7, r1
 1076 007a FF22     		movs	r2, #255
 1077 007c 1A60     		str	r2, [r3]
 342:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 343:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1078              		.loc 1 343 24
 1079 007e 7B18     		adds	r3, r7, r1
 1080 0080 0122     		movs	r2, #1
 1081 0082 5A60     		str	r2, [r3, #4]
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 26


 344:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1082              		.loc 1 344 24
 1083 0084 7B18     		adds	r3, r7, r1
 1084 0086 0022     		movs	r2, #0
 1085 0088 9A60     		str	r2, [r3, #8]
 345:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1086              		.loc 1 345 25
 1087 008a 7B18     		adds	r3, r7, r1
 1088 008c 0022     		movs	r2, #0
 1089 008e DA60     		str	r2, [r3, #12]
 346:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 1090              		.loc 1 346 3
 1091 0090 7B18     		adds	r3, r7, r1
 1092 0092 054A     		ldr	r2, .L23+4
 1093 0094 1900     		movs	r1, r3
 1094 0096 1000     		movs	r0, r2
 1095 0098 FFF7FEFF 		bl	HAL_GPIO_Init
 347:Core/Src/main.c **** 
 348:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 349:Core/Src/main.c **** 
 350:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 351:Core/Src/main.c **** }
 1096              		.loc 1 351 1
 1097 009c C046     		nop
 1098 009e BD46     		mov	sp, r7
 1099 00a0 09B0     		add	sp, sp, #36
 1100              		@ sp needed
 1101 00a2 90BD     		pop	{r4, r7, pc}
 1102              	.L24:
 1103              		.align	2
 1104              	.L23:
 1105 00a4 00100240 		.word	1073876992
 1106 00a8 00040048 		.word	1207960576
 1107              		.cfi_endproc
 1108              	.LFE42:
 1110              		.global	__aeabi_dsub
 1111              		.global	__aeabi_dcmple
 1112              		.section	.text.generate_mandelbrot_checksum,"ax",%progbits
 1113              		.align	1
 1114              		.syntax unified
 1115              		.code	16
 1116              		.thumb_func
 1118              	generate_mandelbrot_checksum:
 1119              	.LFB43:
 352:Core/Src/main.c **** 
 353:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 354:Core/Src/main.c **** static uint32_t generate_mandelbrot_checksum(uint16_t width, uint16_t height, uint32_t max_iter)
 355:Core/Src/main.c **** {
 1120              		.loc 1 355 1
 1121              		.cfi_startproc
 1122              		@ args = 0, pretend = 0, frame = 64
 1123              		@ frame_needed = 1, uses_anonymous_args = 0
 1124 0000 B0B5     		push	{r4, r5, r7, lr}
 1125              	.LCFI9:
 1126              		.cfi_def_cfa_offset 16
 1127              		.cfi_offset 4, -16
 1128              		.cfi_offset 5, -12
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 27


 1129              		.cfi_offset 7, -8
 1130              		.cfi_offset 14, -4
 1131 0002 90B0     		sub	sp, sp, #64
 1132              	.LCFI10:
 1133              		.cfi_def_cfa_offset 80
 1134 0004 00AF     		add	r7, sp, #0
 1135              	.LCFI11:
 1136              		.cfi_def_cfa_register 7
 1137 0006 3A60     		str	r2, [r7]
 1138 0008 BB1D     		adds	r3, r7, #6
 1139 000a 021C     		adds	r2, r0, #0
 1140 000c 1A80     		strh	r2, [r3]
 1141 000e 3B1D     		adds	r3, r7, #4
 1142 0010 0A1C     		adds	r2, r1, #0
 1143 0012 1A80     		strh	r2, [r3]
 356:Core/Src/main.c ****   uint32_t mandelbrot_sum = 0u;
 1144              		.loc 1 356 12
 1145 0014 0023     		movs	r3, #0
 1146 0016 FB63     		str	r3, [r7, #60]
 1147              	.LBB16:
 357:Core/Src/main.c ****   for (uint16_t y = 0; y < height; ++y)
 1148              		.loc 1 357 17
 1149 0018 3A23     		movs	r3, #58
 1150 001a FB18     		adds	r3, r7, r3
 1151 001c 0022     		movs	r2, #0
 1152 001e 1A80     		strh	r2, [r3]
 1153              		.loc 1 357 3
 1154 0020 D8E0     		b	.L26
 1155              	.L32:
 1156              	.LBB17:
 358:Core/Src/main.c ****   {
 359:Core/Src/main.c ****     double y0 = ((double)y / (double)height) * 2.0 - 1.0;
 1157              		.loc 1 359 18
 1158 0022 3A23     		movs	r3, #58
 1159 0024 FB18     		adds	r3, r7, r3
 1160 0026 1B88     		ldrh	r3, [r3]
 1161 0028 1800     		movs	r0, r3
 1162 002a FFF7FEFF 		bl	__aeabi_ui2d
 1163 002e 0400     		movs	r4, r0
 1164 0030 0D00     		movs	r5, r1
 1165              		.loc 1 359 30
 1166 0032 3B1D     		adds	r3, r7, #4
 1167 0034 1B88     		ldrh	r3, [r3]
 1168 0036 1800     		movs	r0, r3
 1169 0038 FFF7FEFF 		bl	__aeabi_ui2d
 1170 003c 0200     		movs	r2, r0
 1171 003e 0B00     		movs	r3, r1
 1172              		.loc 1 359 28
 1173 0040 2000     		movs	r0, r4
 1174 0042 2900     		movs	r1, r5
 1175 0044 FFF7FEFF 		bl	__aeabi_ddiv
 1176 0048 0200     		movs	r2, r0
 1177 004a 0B00     		movs	r3, r1
 1178 004c 1000     		movs	r0, r2
 1179 004e 1900     		movs	r1, r3
 1180              		.loc 1 359 46
 1181 0050 0200     		movs	r2, r0
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 28


 1182 0052 0B00     		movs	r3, r1
 1183 0054 FFF7FEFF 		bl	__aeabi_dadd
 1184 0058 0200     		movs	r2, r0
 1185 005a 0B00     		movs	r3, r1
 1186 005c 1000     		movs	r0, r2
 1187 005e 1900     		movs	r1, r3
 1188              		.loc 1 359 12
 1189 0060 0022     		movs	r2, #0
 1190 0062 634B     		ldr	r3, .L34
 1191 0064 FFF7FEFF 		bl	__aeabi_dsub
 1192 0068 0200     		movs	r2, r0
 1193 006a 0B00     		movs	r3, r1
 1194 006c BA61     		str	r2, [r7, #24]
 1195 006e FB61     		str	r3, [r7, #28]
 1196              	.LBB18:
 360:Core/Src/main.c ****     for (uint16_t x = 0; x < width; ++x)
 1197              		.loc 1 360 19
 1198 0070 3823     		movs	r3, #56
 1199 0072 FB18     		adds	r3, r7, r3
 1200 0074 0022     		movs	r2, #0
 1201 0076 1A80     		strh	r2, [r3]
 1202              		.loc 1 360 5
 1203 0078 9EE0     		b	.L27
 1204              	.L31:
 1205              	.LBB19:
 361:Core/Src/main.c ****     {
 362:Core/Src/main.c ****       double x0 = ((double)x / (double)width) * 3.5 - 2.5;
 1206              		.loc 1 362 20
 1207 007a 3823     		movs	r3, #56
 1208 007c FB18     		adds	r3, r7, r3
 1209 007e 1B88     		ldrh	r3, [r3]
 1210 0080 1800     		movs	r0, r3
 1211 0082 FFF7FEFF 		bl	__aeabi_ui2d
 1212 0086 0400     		movs	r4, r0
 1213 0088 0D00     		movs	r5, r1
 1214              		.loc 1 362 32
 1215 008a BB1D     		adds	r3, r7, #6
 1216 008c 1B88     		ldrh	r3, [r3]
 1217 008e 1800     		movs	r0, r3
 1218 0090 FFF7FEFF 		bl	__aeabi_ui2d
 1219 0094 0200     		movs	r2, r0
 1220 0096 0B00     		movs	r3, r1
 1221              		.loc 1 362 30
 1222 0098 2000     		movs	r0, r4
 1223 009a 2900     		movs	r1, r5
 1224 009c FFF7FEFF 		bl	__aeabi_ddiv
 1225 00a0 0200     		movs	r2, r0
 1226 00a2 0B00     		movs	r3, r1
 1227 00a4 1000     		movs	r0, r2
 1228 00a6 1900     		movs	r1, r3
 1229              		.loc 1 362 47
 1230 00a8 0022     		movs	r2, #0
 1231 00aa 524B     		ldr	r3, .L34+4
 1232 00ac FFF7FEFF 		bl	__aeabi_dmul
 1233 00b0 0200     		movs	r2, r0
 1234 00b2 0B00     		movs	r3, r1
 1235 00b4 1000     		movs	r0, r2
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 29


 1236 00b6 1900     		movs	r1, r3
 1237              		.loc 1 362 14
 1238 00b8 0022     		movs	r2, #0
 1239 00ba 4F4B     		ldr	r3, .L34+8
 1240 00bc FFF7FEFF 		bl	__aeabi_dsub
 1241 00c0 0200     		movs	r2, r0
 1242 00c2 0B00     		movs	r3, r1
 1243 00c4 3A61     		str	r2, [r7, #16]
 1244 00c6 7B61     		str	r3, [r7, #20]
 363:Core/Src/main.c ****       double xi = 0.0;
 1245              		.loc 1 363 14
 1246 00c8 0022     		movs	r2, #0
 1247 00ca 0023     		movs	r3, #0
 1248 00cc 3A63     		str	r2, [r7, #48]
 1249 00ce 7B63     		str	r3, [r7, #52]
 364:Core/Src/main.c ****       double yi = 0.0;
 1250              		.loc 1 364 14
 1251 00d0 0022     		movs	r2, #0
 1252 00d2 0023     		movs	r3, #0
 1253 00d4 BA62     		str	r2, [r7, #40]
 1254 00d6 FB62     		str	r3, [r7, #44]
 365:Core/Src/main.c ****       uint32_t iteration = 0u;
 1255              		.loc 1 365 16
 1256 00d8 0023     		movs	r3, #0
 1257 00da 7B62     		str	r3, [r7, #36]
 366:Core/Src/main.c ****       while (iteration < max_iter && (xi*xi + yi*yi) <= 4.0)
 1258              		.loc 1 366 13
 1259 00dc 3EE0     		b	.L28
 1260              	.L30:
 1261              	.LBB20:
 367:Core/Src/main.c ****       {
 368:Core/Src/main.c ****         double tmp = xi*xi - yi*yi + x0;
 1262              		.loc 1 368 24
 1263 00de 3A6B     		ldr	r2, [r7, #48]
 1264 00e0 7B6B     		ldr	r3, [r7, #52]
 1265 00e2 386B     		ldr	r0, [r7, #48]
 1266 00e4 796B     		ldr	r1, [r7, #52]
 1267 00e6 FFF7FEFF 		bl	__aeabi_dmul
 1268 00ea 0200     		movs	r2, r0
 1269 00ec 0B00     		movs	r3, r1
 1270 00ee 1400     		movs	r4, r2
 1271 00f0 1D00     		movs	r5, r3
 1272              		.loc 1 368 32
 1273 00f2 BA6A     		ldr	r2, [r7, #40]
 1274 00f4 FB6A     		ldr	r3, [r7, #44]
 1275 00f6 B86A     		ldr	r0, [r7, #40]
 1276 00f8 F96A     		ldr	r1, [r7, #44]
 1277 00fa FFF7FEFF 		bl	__aeabi_dmul
 1278 00fe 0200     		movs	r2, r0
 1279 0100 0B00     		movs	r3, r1
 1280              		.loc 1 368 28
 1281 0102 2000     		movs	r0, r4
 1282 0104 2900     		movs	r1, r5
 1283 0106 FFF7FEFF 		bl	__aeabi_dsub
 1284 010a 0200     		movs	r2, r0
 1285 010c 0B00     		movs	r3, r1
 1286              		.loc 1 368 16
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 30


 1287 010e 3869     		ldr	r0, [r7, #16]
 1288 0110 7969     		ldr	r1, [r7, #20]
 1289 0112 FFF7FEFF 		bl	__aeabi_dadd
 1290 0116 0200     		movs	r2, r0
 1291 0118 0B00     		movs	r3, r1
 1292 011a BA60     		str	r2, [r7, #8]
 1293 011c FB60     		str	r3, [r7, #12]
 369:Core/Src/main.c ****         yi = 2.0*xi*yi + y0;
 1294              		.loc 1 369 17
 1295 011e 386B     		ldr	r0, [r7, #48]
 1296 0120 796B     		ldr	r1, [r7, #52]
 1297 0122 0200     		movs	r2, r0
 1298 0124 0B00     		movs	r3, r1
 1299 0126 FFF7FEFF 		bl	__aeabi_dadd
 1300 012a 0200     		movs	r2, r0
 1301 012c 0B00     		movs	r3, r1
 1302 012e 1000     		movs	r0, r2
 1303 0130 1900     		movs	r1, r3
 1304              		.loc 1 369 20
 1305 0132 BA6A     		ldr	r2, [r7, #40]
 1306 0134 FB6A     		ldr	r3, [r7, #44]
 1307 0136 FFF7FEFF 		bl	__aeabi_dmul
 1308 013a 0200     		movs	r2, r0
 1309 013c 0B00     		movs	r3, r1
 1310              		.loc 1 369 12
 1311 013e B869     		ldr	r0, [r7, #24]
 1312 0140 F969     		ldr	r1, [r7, #28]
 1313 0142 FFF7FEFF 		bl	__aeabi_dadd
 1314 0146 0200     		movs	r2, r0
 1315 0148 0B00     		movs	r3, r1
 1316 014a BA62     		str	r2, [r7, #40]
 1317 014c FB62     		str	r3, [r7, #44]
 370:Core/Src/main.c ****         xi = tmp;
 1318              		.loc 1 370 12
 1319 014e BA68     		ldr	r2, [r7, #8]
 1320 0150 FB68     		ldr	r3, [r7, #12]
 1321 0152 3A63     		str	r2, [r7, #48]
 1322 0154 7B63     		str	r3, [r7, #52]
 371:Core/Src/main.c ****         ++iteration;
 1323              		.loc 1 371 9
 1324 0156 7B6A     		ldr	r3, [r7, #36]
 1325 0158 0133     		adds	r3, r3, #1
 1326 015a 7B62     		str	r3, [r7, #36]
 1327              	.L28:
 1328              	.LBE20:
 366:Core/Src/main.c ****       {
 1329              		.loc 1 366 35
 1330 015c 7A6A     		ldr	r2, [r7, #36]
 1331 015e 3B68     		ldr	r3, [r7]
 1332 0160 9A42     		cmp	r2, r3
 1333 0162 1FD2     		bcs	.L29
 366:Core/Src/main.c ****       {
 1334              		.loc 1 366 41 discriminator 1
 1335 0164 3A6B     		ldr	r2, [r7, #48]
 1336 0166 7B6B     		ldr	r3, [r7, #52]
 1337 0168 386B     		ldr	r0, [r7, #48]
 1338 016a 796B     		ldr	r1, [r7, #52]
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 31


 1339 016c FFF7FEFF 		bl	__aeabi_dmul
 1340 0170 0200     		movs	r2, r0
 1341 0172 0B00     		movs	r3, r1
 1342 0174 1400     		movs	r4, r2
 1343 0176 1D00     		movs	r5, r3
 366:Core/Src/main.c ****       {
 1344              		.loc 1 366 49 discriminator 1
 1345 0178 BA6A     		ldr	r2, [r7, #40]
 1346 017a FB6A     		ldr	r3, [r7, #44]
 1347 017c B86A     		ldr	r0, [r7, #40]
 1348 017e F96A     		ldr	r1, [r7, #44]
 1349 0180 FFF7FEFF 		bl	__aeabi_dmul
 1350 0184 0200     		movs	r2, r0
 1351 0186 0B00     		movs	r3, r1
 366:Core/Src/main.c ****       {
 1352              		.loc 1 366 45 discriminator 1
 1353 0188 2000     		movs	r0, r4
 1354 018a 2900     		movs	r1, r5
 1355 018c FFF7FEFF 		bl	__aeabi_dadd
 1356 0190 0200     		movs	r2, r0
 1357 0192 0B00     		movs	r3, r1
 1358 0194 1000     		movs	r0, r2
 1359 0196 1900     		movs	r1, r3
 366:Core/Src/main.c ****       {
 1360              		.loc 1 366 35 discriminator 1
 1361 0198 0022     		movs	r2, #0
 1362 019a 184B     		ldr	r3, .L34+12
 1363 019c FFF7FEFF 		bl	__aeabi_dcmple
 1364 01a0 031E     		subs	r3, r0, #0
 1365 01a2 9CD1     		bne	.L30
 1366              	.L29:
 372:Core/Src/main.c ****       }
 373:Core/Src/main.c ****       mandelbrot_sum += iteration;
 1367              		.loc 1 373 22
 1368 01a4 FA6B     		ldr	r2, [r7, #60]
 1369 01a6 7B6A     		ldr	r3, [r7, #36]
 1370 01a8 D318     		adds	r3, r2, r3
 1371 01aa FB63     		str	r3, [r7, #60]
 1372              	.LBE19:
 360:Core/Src/main.c ****     {
 1373              		.loc 1 360 37 discriminator 2
 1374 01ac 3822     		movs	r2, #56
 1375 01ae BB18     		adds	r3, r7, r2
 1376 01b0 BA18     		adds	r2, r7, r2
 1377 01b2 1288     		ldrh	r2, [r2]
 1378 01b4 0132     		adds	r2, r2, #1
 1379 01b6 1A80     		strh	r2, [r3]
 1380              	.L27:
 360:Core/Src/main.c ****     {
 1381              		.loc 1 360 28 discriminator 1
 1382 01b8 3823     		movs	r3, #56
 1383 01ba FA18     		adds	r2, r7, r3
 1384 01bc BB1D     		adds	r3, r7, #6
 1385 01be 1288     		ldrh	r2, [r2]
 1386 01c0 1B88     		ldrh	r3, [r3]
 1387 01c2 9A42     		cmp	r2, r3
 1388 01c4 00D2     		bcs	.LCB940
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 32


 1389 01c6 58E7     		b	.L31	@long jump
 1390              	.LCB940:
 1391              	.LBE18:
 1392              	.LBE17:
 357:Core/Src/main.c ****   {
 1393              		.loc 1 357 36 discriminator 2
 1394 01c8 3A22     		movs	r2, #58
 1395 01ca BB18     		adds	r3, r7, r2
 1396 01cc BA18     		adds	r2, r7, r2
 1397 01ce 1288     		ldrh	r2, [r2]
 1398 01d0 0132     		adds	r2, r2, #1
 1399 01d2 1A80     		strh	r2, [r3]
 1400              	.L26:
 357:Core/Src/main.c ****   {
 1401              		.loc 1 357 26 discriminator 1
 1402 01d4 3A23     		movs	r3, #58
 1403 01d6 FA18     		adds	r2, r7, r3
 1404 01d8 3B1D     		adds	r3, r7, #4
 1405 01da 1288     		ldrh	r2, [r2]
 1406 01dc 1B88     		ldrh	r3, [r3]
 1407 01de 9A42     		cmp	r2, r3
 1408 01e0 00D2     		bcs	.LCB958
 1409 01e2 1EE7     		b	.L32	@long jump
 1410              	.LCB958:
 1411              	.LBE16:
 374:Core/Src/main.c ****     }
 375:Core/Src/main.c ****   }
 376:Core/Src/main.c ****   return mandelbrot_sum;
 1412              		.loc 1 376 10
 1413 01e4 FB6B     		ldr	r3, [r7, #60]
 377:Core/Src/main.c **** }
 1414              		.loc 1 377 1
 1415 01e6 1800     		movs	r0, r3
 1416 01e8 BD46     		mov	sp, r7
 1417 01ea 10B0     		add	sp, sp, #64
 1418              		@ sp needed
 1419 01ec B0BD     		pop	{r4, r5, r7, pc}
 1420              	.L35:
 1421 01ee C046     		.align	2
 1422              	.L34:
 1423 01f0 0000F03F 		.word	1072693248
 1424 01f4 00000C40 		.word	1074528256
 1425 01f8 00000440 		.word	1074003968
 1426 01fc 00001040 		.word	1074790400
 1427              		.cfi_endproc
 1428              	.LFE43:
 1430              		.section	.text.generate_mandelbrot_checksum_tiled,"ax",%progbits
 1431              		.align	1
 1432              		.syntax unified
 1433              		.code	16
 1434              		.thumb_func
 1436              	generate_mandelbrot_checksum_tiled:
 1437              	.LFB44:
 378:Core/Src/main.c **** 
 379:Core/Src/main.c **** static uint32_t generate_mandelbrot_checksum_tiled(uint16_t width, uint16_t height, uint32_t max_it
 380:Core/Src/main.c **** {
 1438              		.loc 1 380 1
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 33


 1439              		.cfi_startproc
 1440              		@ args = 0, pretend = 0, frame = 104
 1441              		@ frame_needed = 1, uses_anonymous_args = 0
 1442 0000 B0B5     		push	{r4, r5, r7, lr}
 1443              	.LCFI12:
 1444              		.cfi_def_cfa_offset 16
 1445              		.cfi_offset 4, -16
 1446              		.cfi_offset 5, -12
 1447              		.cfi_offset 7, -8
 1448              		.cfi_offset 14, -4
 1449 0002 9AB0     		sub	sp, sp, #104
 1450              	.LCFI13:
 1451              		.cfi_def_cfa_offset 120
 1452 0004 00AF     		add	r7, sp, #0
 1453              	.LCFI14:
 1454              		.cfi_def_cfa_register 7
 1455 0006 3A60     		str	r2, [r7]
 1456 0008 BB1D     		adds	r3, r7, #6
 1457 000a 021C     		adds	r2, r0, #0
 1458 000c 1A80     		strh	r2, [r3]
 1459 000e 3B1D     		adds	r3, r7, #4
 1460 0010 0A1C     		adds	r2, r1, #0
 1461 0012 1A80     		strh	r2, [r3]
 381:Core/Src/main.c ****   uint32_t total_checksum = 0u;
 1462              		.loc 1 381 12
 1463 0014 0023     		movs	r3, #0
 1464 0016 7B66     		str	r3, [r7, #100]
 382:Core/Src/main.c ****   
 383:Core/Src/main.c ****   /* Calculate number of tiles needed */
 384:Core/Src/main.c ****   uint32_t tiles_x = (width + MAX_TILE_SIZE - 1) / MAX_TILE_SIZE;
 1465              		.loc 1 384 45
 1466 0018 BB1D     		adds	r3, r7, #6
 1467 001a 1B88     		ldrh	r3, [r3]
 1468 001c 7F33     		adds	r3, r3, #127
 1469              		.loc 1 384 50
 1470 001e 002B     		cmp	r3, #0
 1471 0020 00DA     		bge	.L37
 1472 0022 7F33     		adds	r3, r3, #127
 1473              	.L37:
 1474 0024 DB11     		asrs	r3, r3, #7
 1475              		.loc 1 384 12
 1476 0026 3B64     		str	r3, [r7, #64]
 385:Core/Src/main.c ****   uint32_t tiles_y = (height + MAX_TILE_SIZE - 1) / MAX_TILE_SIZE;
 1477              		.loc 1 385 46
 1478 0028 3B1D     		adds	r3, r7, #4
 1479 002a 1B88     		ldrh	r3, [r3]
 1480 002c 7F33     		adds	r3, r3, #127
 1481              		.loc 1 385 51
 1482 002e 002B     		cmp	r3, #0
 1483 0030 00DA     		bge	.L38
 1484 0032 7F33     		adds	r3, r3, #127
 1485              	.L38:
 1486 0034 DB11     		asrs	r3, r3, #7
 1487              		.loc 1 385 12
 1488 0036 FB63     		str	r3, [r7, #60]
 386:Core/Src/main.c ****   uint32_t total_tiles = tiles_x * tiles_y;
 1489              		.loc 1 386 12
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 34


 1490 0038 3B6C     		ldr	r3, [r7, #64]
 1491 003a FA6B     		ldr	r2, [r7, #60]
 1492 003c 5343     		muls	r3, r2
 1493 003e BB63     		str	r3, [r7, #56]
 387:Core/Src/main.c ****   
 388:Core/Src/main.c ****   /* Update Live Expressions with tiling info */
 389:Core/Src/main.c ****   g_num_tiles_x = tiles_x;
 1494              		.loc 1 389 17
 1495 0040 B94B     		ldr	r3, .L55
 1496 0042 3A6C     		ldr	r2, [r7, #64]
 1497 0044 1A60     		str	r2, [r3]
 390:Core/Src/main.c ****   g_num_tiles_y = tiles_y;
 1498              		.loc 1 390 17
 1499 0046 B94B     		ldr	r3, .L55+4
 1500 0048 FA6B     		ldr	r2, [r7, #60]
 1501 004a 1A60     		str	r2, [r3]
 391:Core/Src/main.c ****   g_total_tiles = total_tiles;
 1502              		.loc 1 391 17
 1503 004c B84B     		ldr	r3, .L55+8
 1504 004e BA6B     		ldr	r2, [r7, #56]
 1505 0050 1A60     		str	r2, [r3]
 392:Core/Src/main.c ****   
 393:Core/Src/main.c ****   log_tiling_info(width, height, tiles_x, tiles_y);
 1506              		.loc 1 393 3
 1507 0052 FC6B     		ldr	r4, [r7, #60]
 1508 0054 3A6C     		ldr	r2, [r7, #64]
 1509 0056 3B1D     		adds	r3, r7, #4
 1510 0058 1988     		ldrh	r1, [r3]
 1511 005a BB1D     		adds	r3, r7, #6
 1512 005c 1888     		ldrh	r0, [r3]
 1513 005e 2300     		movs	r3, r4
 1514 0060 FFF7FEFF 		bl	log_tiling_info
 1515              	.LBB21:
 394:Core/Src/main.c ****   
 395:Core/Src/main.c ****   /* Process each tile */
 396:Core/Src/main.c ****   for (uint32_t tile_y = 0; tile_y < tiles_y; ++tile_y)
 1516              		.loc 1 396 17
 1517 0064 0023     		movs	r3, #0
 1518 0066 3B66     		str	r3, [r7, #96]
 1519              		.loc 1 396 3
 1520 0068 53E1     		b	.L39
 1521              	.L53:
 1522              	.LBB22:
 397:Core/Src/main.c ****   {
 398:Core/Src/main.c ****     for (uint32_t tile_x = 0; tile_x < tiles_x; ++tile_x)
 1523              		.loc 1 398 19
 1524 006a 0023     		movs	r3, #0
 1525 006c FB65     		str	r3, [r7, #92]
 1526              		.loc 1 398 5
 1527 006e 48E1     		b	.L40
 1528              	.L52:
 1529              	.LBB23:
 399:Core/Src/main.c ****     {
 400:Core/Src/main.c ****       g_current_tile = tile_y * tiles_x + tile_x + 1;
 1530              		.loc 1 400 31
 1531 0070 3B6E     		ldr	r3, [r7, #96]
 1532 0072 3A6C     		ldr	r2, [r7, #64]
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 35


 1533 0074 5A43     		muls	r2, r3
 1534              		.loc 1 400 41
 1535 0076 FB6D     		ldr	r3, [r7, #92]
 1536 0078 D318     		adds	r3, r2, r3
 1537              		.loc 1 400 50
 1538 007a 5A1C     		adds	r2, r3, #1
 1539              		.loc 1 400 22
 1540 007c AD4B     		ldr	r3, .L55+12
 1541 007e 1A60     		str	r2, [r3]
 401:Core/Src/main.c ****       
 402:Core/Src/main.c ****       /* Calculate tile boundaries */
 403:Core/Src/main.c ****       uint16_t start_x = tile_x * MAX_TILE_SIZE;
 1542              		.loc 1 403 16
 1543 0080 FB6D     		ldr	r3, [r7, #92]
 1544 0082 9AB2     		uxth	r2, r3
 1545 0084 3621     		movs	r1, #54
 1546 0086 7B18     		adds	r3, r7, r1
 1547 0088 D201     		lsls	r2, r2, #7
 1548 008a 1A80     		strh	r2, [r3]
 404:Core/Src/main.c ****       uint16_t start_y = tile_y * MAX_TILE_SIZE;
 1549              		.loc 1 404 16
 1550 008c 3B6E     		ldr	r3, [r7, #96]
 1551 008e 9AB2     		uxth	r2, r3
 1552 0090 3423     		movs	r3, #52
 1553 0092 FB18     		adds	r3, r7, r3
 1554 0094 D201     		lsls	r2, r2, #7
 1555 0096 1A80     		strh	r2, [r3]
 405:Core/Src/main.c ****       uint16_t end_x = (start_x + MAX_TILE_SIZE > width) ? width : start_x + MAX_TILE_SIZE;
 1556              		.loc 1 405 49
 1557 0098 7B18     		adds	r3, r7, r1
 1558 009a 1B88     		ldrh	r3, [r3]
 1559 009c 7F33     		adds	r3, r3, #127
 1560 009e 1A00     		movs	r2, r3
 1561 00a0 BB1D     		adds	r3, r7, #6
 1562 00a2 1B88     		ldrh	r3, [r3]
 1563              		.loc 1 405 16
 1564 00a4 9A42     		cmp	r2, r3
 1565 00a6 04DA     		bge	.L41
 1566              		.loc 1 405 16 is_stmt 0 discriminator 1
 1567 00a8 7B18     		adds	r3, r7, r1
 1568 00aa 1B88     		ldrh	r3, [r3]
 1569 00ac 8033     		adds	r3, r3, #128
 1570 00ae 9BB2     		uxth	r3, r3
 1571 00b0 01E0     		b	.L42
 1572              	.L41:
 1573              		.loc 1 405 16 discriminator 2
 1574 00b2 BB1D     		adds	r3, r7, #6
 1575 00b4 1B88     		ldrh	r3, [r3]
 1576              	.L42:
 1577              		.loc 1 405 16 discriminator 4
 1578 00b6 3222     		movs	r2, #50
 1579 00b8 BA18     		adds	r2, r7, r2
 1580 00ba 1380     		strh	r3, [r2]
 406:Core/Src/main.c ****       uint16_t end_y = (start_y + MAX_TILE_SIZE > height) ? height : start_y + MAX_TILE_SIZE;
 1581              		.loc 1 406 49 is_stmt 1
 1582 00bc 3421     		movs	r1, #52
 1583 00be 7B18     		adds	r3, r7, r1
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 36


 1584 00c0 1B88     		ldrh	r3, [r3]
 1585 00c2 7F33     		adds	r3, r3, #127
 1586 00c4 1A00     		movs	r2, r3
 1587 00c6 3B1D     		adds	r3, r7, #4
 1588 00c8 1B88     		ldrh	r3, [r3]
 1589              		.loc 1 406 16
 1590 00ca 9A42     		cmp	r2, r3
 1591 00cc 04DA     		bge	.L43
 1592              		.loc 1 406 16 is_stmt 0 discriminator 1
 1593 00ce 7B18     		adds	r3, r7, r1
 1594 00d0 1B88     		ldrh	r3, [r3]
 1595 00d2 8033     		adds	r3, r3, #128
 1596 00d4 9BB2     		uxth	r3, r3
 1597 00d6 01E0     		b	.L44
 1598              	.L43:
 1599              		.loc 1 406 16 discriminator 2
 1600 00d8 3B1D     		adds	r3, r7, #4
 1601 00da 1B88     		ldrh	r3, [r3]
 1602              	.L44:
 1603              		.loc 1 406 16 discriminator 4
 1604 00dc 3020     		movs	r0, #48
 1605 00de 3A18     		adds	r2, r7, r0
 1606 00e0 1380     		strh	r3, [r2]
 407:Core/Src/main.c ****       uint16_t tile_width = end_x - start_x;
 1607              		.loc 1 407 16 is_stmt 1
 1608 00e2 2E23     		movs	r3, #46
 1609 00e4 FB18     		adds	r3, r7, r3
 1610 00e6 3222     		movs	r2, #50
 1611 00e8 B918     		adds	r1, r7, r2
 1612 00ea 3622     		movs	r2, #54
 1613 00ec BA18     		adds	r2, r7, r2
 1614 00ee 0988     		ldrh	r1, [r1]
 1615 00f0 1288     		ldrh	r2, [r2]
 1616 00f2 8A1A     		subs	r2, r1, r2
 1617 00f4 1A80     		strh	r2, [r3]
 408:Core/Src/main.c ****       uint16_t tile_height = end_y - start_y;
 1618              		.loc 1 408 16
 1619 00f6 2C23     		movs	r3, #44
 1620 00f8 FB18     		adds	r3, r7, r3
 1621 00fa 3918     		adds	r1, r7, r0
 1622 00fc 3422     		movs	r2, #52
 1623 00fe BA18     		adds	r2, r7, r2
 1624 0100 0988     		ldrh	r1, [r1]
 1625 0102 1288     		ldrh	r2, [r2]
 1626 0104 8A1A     		subs	r2, r1, r2
 1627 0106 1A80     		strh	r2, [r3]
 1628              	.LBB24:
 409:Core/Src/main.c ****       
 410:Core/Src/main.c ****       /* Process this tile */
 411:Core/Src/main.c ****       for (uint16_t y = 0; y < tile_height; ++y)
 1629              		.loc 1 411 21
 1630 0108 5A23     		movs	r3, #90
 1631 010a FB18     		adds	r3, r7, r3
 1632 010c 0022     		movs	r2, #0
 1633 010e 1A80     		strh	r2, [r3]
 1634              		.loc 1 411 7
 1635 0110 EBE0     		b	.L45
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 37


 1636              	.L51:
 1637              	.LBB25:
 412:Core/Src/main.c ****       {
 413:Core/Src/main.c ****         uint16_t global_y = start_y + y;
 1638              		.loc 1 413 18
 1639 0112 2A20     		movs	r0, #42
 1640 0114 3B18     		adds	r3, r7, r0
 1641 0116 3422     		movs	r2, #52
 1642 0118 B918     		adds	r1, r7, r2
 1643 011a 5A22     		movs	r2, #90
 1644 011c BA18     		adds	r2, r7, r2
 1645 011e 0988     		ldrh	r1, [r1]
 1646 0120 1288     		ldrh	r2, [r2]
 1647 0122 8A18     		adds	r2, r1, r2
 1648 0124 1A80     		strh	r2, [r3]
 414:Core/Src/main.c ****         double y0 = ((double)global_y / (double)height) * 2.0 - 1.0;
 1649              		.loc 1 414 22
 1650 0126 3B18     		adds	r3, r7, r0
 1651 0128 1B88     		ldrh	r3, [r3]
 1652 012a 1800     		movs	r0, r3
 1653 012c FFF7FEFF 		bl	__aeabi_ui2d
 1654 0130 0400     		movs	r4, r0
 1655 0132 0D00     		movs	r5, r1
 1656              		.loc 1 414 41
 1657 0134 3B1D     		adds	r3, r7, #4
 1658 0136 1B88     		ldrh	r3, [r3]
 1659 0138 1800     		movs	r0, r3
 1660 013a FFF7FEFF 		bl	__aeabi_ui2d
 1661 013e 0200     		movs	r2, r0
 1662 0140 0B00     		movs	r3, r1
 1663              		.loc 1 414 39
 1664 0142 2000     		movs	r0, r4
 1665 0144 2900     		movs	r1, r5
 1666 0146 FFF7FEFF 		bl	__aeabi_ddiv
 1667 014a 0200     		movs	r2, r0
 1668 014c 0B00     		movs	r3, r1
 1669 014e 1000     		movs	r0, r2
 1670 0150 1900     		movs	r1, r3
 1671              		.loc 1 414 57
 1672 0152 0200     		movs	r2, r0
 1673 0154 0B00     		movs	r3, r1
 1674 0156 FFF7FEFF 		bl	__aeabi_dadd
 1675 015a 0200     		movs	r2, r0
 1676 015c 0B00     		movs	r3, r1
 1677 015e 1000     		movs	r0, r2
 1678 0160 1900     		movs	r1, r3
 1679              		.loc 1 414 16
 1680 0162 0022     		movs	r2, #0
 1681 0164 744B     		ldr	r3, .L55+16
 1682 0166 FFF7FEFF 		bl	__aeabi_dsub
 1683 016a 0200     		movs	r2, r0
 1684 016c 0B00     		movs	r3, r1
 1685 016e 3A62     		str	r2, [r7, #32]
 1686 0170 7B62     		str	r3, [r7, #36]
 1687              	.LBB26:
 415:Core/Src/main.c ****         for (uint16_t x = 0; x < tile_width; ++x)
 1688              		.loc 1 415 23
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 38


 1689 0172 5823     		movs	r3, #88
 1690 0174 FB18     		adds	r3, r7, r3
 1691 0176 0022     		movs	r2, #0
 1692 0178 1A80     		strh	r2, [r3]
 1693              		.loc 1 415 9
 1694 017a A7E0     		b	.L46
 1695              	.L50:
 1696              	.LBB27:
 416:Core/Src/main.c ****         {
 417:Core/Src/main.c ****           uint16_t global_x = start_x + x;
 1697              		.loc 1 417 20
 1698 017c 1E20     		movs	r0, #30
 1699 017e 3B18     		adds	r3, r7, r0
 1700 0180 3622     		movs	r2, #54
 1701 0182 B918     		adds	r1, r7, r2
 1702 0184 5822     		movs	r2, #88
 1703 0186 BA18     		adds	r2, r7, r2
 1704 0188 0988     		ldrh	r1, [r1]
 1705 018a 1288     		ldrh	r2, [r2]
 1706 018c 8A18     		adds	r2, r1, r2
 1707 018e 1A80     		strh	r2, [r3]
 418:Core/Src/main.c ****           double x0 = ((double)global_x / (double)width) * 3.5 - 2.5;
 1708              		.loc 1 418 24
 1709 0190 3B18     		adds	r3, r7, r0
 1710 0192 1B88     		ldrh	r3, [r3]
 1711 0194 1800     		movs	r0, r3
 1712 0196 FFF7FEFF 		bl	__aeabi_ui2d
 1713 019a 0400     		movs	r4, r0
 1714 019c 0D00     		movs	r5, r1
 1715              		.loc 1 418 43
 1716 019e BB1D     		adds	r3, r7, #6
 1717 01a0 1B88     		ldrh	r3, [r3]
 1718 01a2 1800     		movs	r0, r3
 1719 01a4 FFF7FEFF 		bl	__aeabi_ui2d
 1720 01a8 0200     		movs	r2, r0
 1721 01aa 0B00     		movs	r3, r1
 1722              		.loc 1 418 41
 1723 01ac 2000     		movs	r0, r4
 1724 01ae 2900     		movs	r1, r5
 1725 01b0 FFF7FEFF 		bl	__aeabi_ddiv
 1726 01b4 0200     		movs	r2, r0
 1727 01b6 0B00     		movs	r3, r1
 1728 01b8 1000     		movs	r0, r2
 1729 01ba 1900     		movs	r1, r3
 1730              		.loc 1 418 58
 1731 01bc 0022     		movs	r2, #0
 1732 01be 5F4B     		ldr	r3, .L55+20
 1733 01c0 FFF7FEFF 		bl	__aeabi_dmul
 1734 01c4 0200     		movs	r2, r0
 1735 01c6 0B00     		movs	r3, r1
 1736 01c8 1000     		movs	r0, r2
 1737 01ca 1900     		movs	r1, r3
 1738              		.loc 1 418 18
 1739 01cc 0022     		movs	r2, #0
 1740 01ce 5C4B     		ldr	r3, .L55+24
 1741 01d0 FFF7FEFF 		bl	__aeabi_dsub
 1742 01d4 0200     		movs	r2, r0
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 39


 1743 01d6 0B00     		movs	r3, r1
 1744 01d8 3A61     		str	r2, [r7, #16]
 1745 01da 7B61     		str	r3, [r7, #20]
 419:Core/Src/main.c ****           double xi = 0.0;
 1746              		.loc 1 419 18
 1747 01dc 0022     		movs	r2, #0
 1748 01de 0023     		movs	r3, #0
 1749 01e0 3A65     		str	r2, [r7, #80]
 1750 01e2 7B65     		str	r3, [r7, #84]
 420:Core/Src/main.c ****           double yi = 0.0;
 1751              		.loc 1 420 18
 1752 01e4 0022     		movs	r2, #0
 1753 01e6 0023     		movs	r3, #0
 1754 01e8 BA64     		str	r2, [r7, #72]
 1755 01ea FB64     		str	r3, [r7, #76]
 421:Core/Src/main.c ****           uint32_t iteration = 0u;
 1756              		.loc 1 421 20
 1757 01ec 0023     		movs	r3, #0
 1758 01ee 7B64     		str	r3, [r7, #68]
 422:Core/Src/main.c ****           while (iteration < max_iter && (xi*xi + yi*yi) <= 4.0)
 1759              		.loc 1 422 17
 1760 01f0 3EE0     		b	.L47
 1761              	.L49:
 1762              	.LBB28:
 423:Core/Src/main.c ****           {
 424:Core/Src/main.c ****             double tmp = xi*xi - yi*yi + x0;
 1763              		.loc 1 424 28
 1764 01f2 3A6D     		ldr	r2, [r7, #80]
 1765 01f4 7B6D     		ldr	r3, [r7, #84]
 1766 01f6 386D     		ldr	r0, [r7, #80]
 1767 01f8 796D     		ldr	r1, [r7, #84]
 1768 01fa FFF7FEFF 		bl	__aeabi_dmul
 1769 01fe 0200     		movs	r2, r0
 1770 0200 0B00     		movs	r3, r1
 1771 0202 1400     		movs	r4, r2
 1772 0204 1D00     		movs	r5, r3
 1773              		.loc 1 424 36
 1774 0206 BA6C     		ldr	r2, [r7, #72]
 1775 0208 FB6C     		ldr	r3, [r7, #76]
 1776 020a B86C     		ldr	r0, [r7, #72]
 1777 020c F96C     		ldr	r1, [r7, #76]
 1778 020e FFF7FEFF 		bl	__aeabi_dmul
 1779 0212 0200     		movs	r2, r0
 1780 0214 0B00     		movs	r3, r1
 1781              		.loc 1 424 32
 1782 0216 2000     		movs	r0, r4
 1783 0218 2900     		movs	r1, r5
 1784 021a FFF7FEFF 		bl	__aeabi_dsub
 1785 021e 0200     		movs	r2, r0
 1786 0220 0B00     		movs	r3, r1
 1787              		.loc 1 424 20
 1788 0222 3869     		ldr	r0, [r7, #16]
 1789 0224 7969     		ldr	r1, [r7, #20]
 1790 0226 FFF7FEFF 		bl	__aeabi_dadd
 1791 022a 0200     		movs	r2, r0
 1792 022c 0B00     		movs	r3, r1
 1793 022e BA60     		str	r2, [r7, #8]
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 40


 1794 0230 FB60     		str	r3, [r7, #12]
 425:Core/Src/main.c ****             yi = 2.0*xi*yi + y0;
 1795              		.loc 1 425 21
 1796 0232 386D     		ldr	r0, [r7, #80]
 1797 0234 796D     		ldr	r1, [r7, #84]
 1798 0236 0200     		movs	r2, r0
 1799 0238 0B00     		movs	r3, r1
 1800 023a FFF7FEFF 		bl	__aeabi_dadd
 1801 023e 0200     		movs	r2, r0
 1802 0240 0B00     		movs	r3, r1
 1803 0242 1000     		movs	r0, r2
 1804 0244 1900     		movs	r1, r3
 1805              		.loc 1 425 24
 1806 0246 BA6C     		ldr	r2, [r7, #72]
 1807 0248 FB6C     		ldr	r3, [r7, #76]
 1808 024a FFF7FEFF 		bl	__aeabi_dmul
 1809 024e 0200     		movs	r2, r0
 1810 0250 0B00     		movs	r3, r1
 1811              		.loc 1 425 16
 1812 0252 386A     		ldr	r0, [r7, #32]
 1813 0254 796A     		ldr	r1, [r7, #36]
 1814 0256 FFF7FEFF 		bl	__aeabi_dadd
 1815 025a 0200     		movs	r2, r0
 1816 025c 0B00     		movs	r3, r1
 1817 025e BA64     		str	r2, [r7, #72]
 1818 0260 FB64     		str	r3, [r7, #76]
 426:Core/Src/main.c ****             xi = tmp;
 1819              		.loc 1 426 16
 1820 0262 BA68     		ldr	r2, [r7, #8]
 1821 0264 FB68     		ldr	r3, [r7, #12]
 1822 0266 3A65     		str	r2, [r7, #80]
 1823 0268 7B65     		str	r3, [r7, #84]
 427:Core/Src/main.c ****             ++iteration;
 1824              		.loc 1 427 13
 1825 026a 7B6C     		ldr	r3, [r7, #68]
 1826 026c 0133     		adds	r3, r3, #1
 1827 026e 7B64     		str	r3, [r7, #68]
 1828              	.L47:
 1829              	.LBE28:
 422:Core/Src/main.c ****           {
 1830              		.loc 1 422 39
 1831 0270 7A6C     		ldr	r2, [r7, #68]
 1832 0272 3B68     		ldr	r3, [r7]
 1833 0274 9A42     		cmp	r2, r3
 1834 0276 1FD2     		bcs	.L48
 422:Core/Src/main.c ****           {
 1835              		.loc 1 422 45 discriminator 1
 1836 0278 3A6D     		ldr	r2, [r7, #80]
 1837 027a 7B6D     		ldr	r3, [r7, #84]
 1838 027c 386D     		ldr	r0, [r7, #80]
 1839 027e 796D     		ldr	r1, [r7, #84]
 1840 0280 FFF7FEFF 		bl	__aeabi_dmul
 1841 0284 0200     		movs	r2, r0
 1842 0286 0B00     		movs	r3, r1
 1843 0288 1400     		movs	r4, r2
 1844 028a 1D00     		movs	r5, r3
 422:Core/Src/main.c ****           {
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 41


 1845              		.loc 1 422 53 discriminator 1
 1846 028c BA6C     		ldr	r2, [r7, #72]
 1847 028e FB6C     		ldr	r3, [r7, #76]
 1848 0290 B86C     		ldr	r0, [r7, #72]
 1849 0292 F96C     		ldr	r1, [r7, #76]
 1850 0294 FFF7FEFF 		bl	__aeabi_dmul
 1851 0298 0200     		movs	r2, r0
 1852 029a 0B00     		movs	r3, r1
 422:Core/Src/main.c ****           {
 1853              		.loc 1 422 49 discriminator 1
 1854 029c 2000     		movs	r0, r4
 1855 029e 2900     		movs	r1, r5
 1856 02a0 FFF7FEFF 		bl	__aeabi_dadd
 1857 02a4 0200     		movs	r2, r0
 1858 02a6 0B00     		movs	r3, r1
 1859 02a8 1000     		movs	r0, r2
 1860 02aa 1900     		movs	r1, r3
 422:Core/Src/main.c ****           {
 1861              		.loc 1 422 39 discriminator 1
 1862 02ac 0022     		movs	r2, #0
 1863 02ae 254B     		ldr	r3, .L55+28
 1864 02b0 FFF7FEFF 		bl	__aeabi_dcmple
 1865 02b4 031E     		subs	r3, r0, #0
 1866 02b6 9CD1     		bne	.L49
 1867              	.L48:
 428:Core/Src/main.c ****           }
 429:Core/Src/main.c ****           total_checksum += iteration;
 1868              		.loc 1 429 26
 1869 02b8 7A6E     		ldr	r2, [r7, #100]
 1870 02ba 7B6C     		ldr	r3, [r7, #68]
 1871 02bc D318     		adds	r3, r2, r3
 1872 02be 7B66     		str	r3, [r7, #100]
 1873              	.LBE27:
 415:Core/Src/main.c ****         {
 1874              		.loc 1 415 46 discriminator 2
 1875 02c0 5822     		movs	r2, #88
 1876 02c2 BB18     		adds	r3, r7, r2
 1877 02c4 BA18     		adds	r2, r7, r2
 1878 02c6 1288     		ldrh	r2, [r2]
 1879 02c8 0132     		adds	r2, r2, #1
 1880 02ca 1A80     		strh	r2, [r3]
 1881              	.L46:
 415:Core/Src/main.c ****         {
 1882              		.loc 1 415 32 discriminator 1
 1883 02cc 5823     		movs	r3, #88
 1884 02ce FA18     		adds	r2, r7, r3
 1885 02d0 2E23     		movs	r3, #46
 1886 02d2 FB18     		adds	r3, r7, r3
 1887 02d4 1288     		ldrh	r2, [r2]
 1888 02d6 1B88     		ldrh	r3, [r3]
 1889 02d8 9A42     		cmp	r2, r3
 1890 02da 00D2     		bcs	.LCB1372
 1891 02dc 4EE7     		b	.L50	@long jump
 1892              	.LCB1372:
 1893              	.LBE26:
 1894              	.LBE25:
 411:Core/Src/main.c ****       {
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 42


 1895              		.loc 1 411 45 discriminator 2
 1896 02de 5A22     		movs	r2, #90
 1897 02e0 BB18     		adds	r3, r7, r2
 1898 02e2 BA18     		adds	r2, r7, r2
 1899 02e4 1288     		ldrh	r2, [r2]
 1900 02e6 0132     		adds	r2, r2, #1
 1901 02e8 1A80     		strh	r2, [r3]
 1902              	.L45:
 411:Core/Src/main.c ****       {
 1903              		.loc 1 411 30 discriminator 1
 1904 02ea 5A23     		movs	r3, #90
 1905 02ec FA18     		adds	r2, r7, r3
 1906 02ee 2C23     		movs	r3, #44
 1907 02f0 FB18     		adds	r3, r7, r3
 1908 02f2 1288     		ldrh	r2, [r2]
 1909 02f4 1B88     		ldrh	r3, [r3]
 1910 02f6 9A42     		cmp	r2, r3
 1911 02f8 00D2     		bcs	.LCB1391
 1912 02fa 0AE7     		b	.L51	@long jump
 1913              	.LCB1391:
 1914              	.LBE24:
 1915              	.LBE23:
 398:Core/Src/main.c ****     {
 1916              		.loc 1 398 49 discriminator 2
 1917 02fc FB6D     		ldr	r3, [r7, #92]
 1918 02fe 0133     		adds	r3, r3, #1
 1919 0300 FB65     		str	r3, [r7, #92]
 1920              	.L40:
 398:Core/Src/main.c ****     {
 1921              		.loc 1 398 38 discriminator 1
 1922 0302 FA6D     		ldr	r2, [r7, #92]
 1923 0304 3B6C     		ldr	r3, [r7, #64]
 1924 0306 9A42     		cmp	r2, r3
 1925 0308 00D2     		bcs	.LCB1402
 1926 030a B1E6     		b	.L52	@long jump
 1927              	.LCB1402:
 1928              	.LBE22:
 396:Core/Src/main.c ****   {
 1929              		.loc 1 396 47 discriminator 2
 1930 030c 3B6E     		ldr	r3, [r7, #96]
 1931 030e 0133     		adds	r3, r3, #1
 1932 0310 3B66     		str	r3, [r7, #96]
 1933              	.L39:
 396:Core/Src/main.c ****   {
 1934              		.loc 1 396 36 discriminator 1
 1935 0312 3A6E     		ldr	r2, [r7, #96]
 1936 0314 FB6B     		ldr	r3, [r7, #60]
 1937 0316 9A42     		cmp	r2, r3
 1938 0318 00D2     		bcs	.LCB1412
 1939 031a A6E6     		b	.L53	@long jump
 1940              	.LCB1412:
 1941              	.LBE21:
 430:Core/Src/main.c ****         }
 431:Core/Src/main.c ****       }
 432:Core/Src/main.c ****     }
 433:Core/Src/main.c ****   }
 434:Core/Src/main.c ****   
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 43


 435:Core/Src/main.c ****   return total_checksum;
 1942              		.loc 1 435 10
 1943 031c 7B6E     		ldr	r3, [r7, #100]
 436:Core/Src/main.c **** }
 1944              		.loc 1 436 1
 1945 031e 1800     		movs	r0, r3
 1946 0320 BD46     		mov	sp, r7
 1947 0322 1AB0     		add	sp, sp, #104
 1948              		@ sp needed
 1949 0324 B0BD     		pop	{r4, r5, r7, pc}
 1950              	.L56:
 1951 0326 C046     		.align	2
 1952              	.L55:
 1953 0328 00000000 		.word	g_num_tiles_x
 1954 032c 00000000 		.word	g_num_tiles_y
 1955 0330 00000000 		.word	g_total_tiles
 1956 0334 00000000 		.word	g_current_tile
 1957 0338 0000F03F 		.word	1072693248
 1958 033c 00000C40 		.word	1074528256
 1959 0340 00000440 		.word	1074003968
 1960 0344 00001040 		.word	1074790400
 1961              		.cfi_endproc
 1962              	.LFE44:
 1964              		.section	.text.log_tiling_info,"ax",%progbits
 1965              		.align	1
 1966              		.syntax unified
 1967              		.code	16
 1968              		.thumb_func
 1970              	log_tiling_info:
 1971              	.LFB45:
 437:Core/Src/main.c **** 
 438:Core/Src/main.c **** static void log_tiling_info(uint16_t width, uint16_t height, uint32_t tiles_x, uint32_t tiles_y)
 439:Core/Src/main.c **** {
 1972              		.loc 1 439 1
 1973              		.cfi_startproc
 1974              		@ args = 0, pretend = 0, frame = 16
 1975              		@ frame_needed = 1, uses_anonymous_args = 0
 1976 0000 80B5     		push	{r7, lr}
 1977              	.LCFI15:
 1978              		.cfi_def_cfa_offset 8
 1979              		.cfi_offset 7, -8
 1980              		.cfi_offset 14, -4
 1981 0002 84B0     		sub	sp, sp, #16
 1982              	.LCFI16:
 1983              		.cfi_def_cfa_offset 24
 1984 0004 00AF     		add	r7, sp, #0
 1985              	.LCFI17:
 1986              		.cfi_def_cfa_register 7
 1987 0006 BA60     		str	r2, [r7, #8]
 1988 0008 7B60     		str	r3, [r7, #4]
 1989 000a 0E23     		movs	r3, #14
 1990 000c FB18     		adds	r3, r7, r3
 1991 000e 021C     		adds	r2, r0, #0
 1992 0010 1A80     		strh	r2, [r3]
 1993 0012 0C23     		movs	r3, #12
 1994 0014 FB18     		adds	r3, r7, r3
 1995 0016 0A1C     		adds	r2, r1, #0
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 44


 1996 0018 1A80     		strh	r2, [r3]
 440:Core/Src/main.c ****   /* Note: F0 doesn't have printf capability, so this is a placeholder */
 441:Core/Src/main.c ****   /* In a real implementation, you might use SWO or UART for logging */
 442:Core/Src/main.c ****   (void)width; (void)height; (void)tiles_x; (void)tiles_y; /* Suppress unused warnings */
 443:Core/Src/main.c **** }
 1997              		.loc 1 443 1
 1998 001a C046     		nop
 1999 001c BD46     		mov	sp, r7
 2000 001e 04B0     		add	sp, sp, #16
 2001              		@ sp needed
 2002 0020 80BD     		pop	{r7, pc}
 2003              		.cfi_endproc
 2004              	.LFE45:
 2006              		.global	__aeabi_uidiv
 2007              		.section	.text.estimate_cpu_cycles_from_ms,"ax",%progbits
 2008              		.align	1
 2009              		.syntax unified
 2010              		.code	16
 2011              		.thumb_func
 2013              	estimate_cpu_cycles_from_ms:
 2014              	.LFB46:
 444:Core/Src/main.c **** 
 445:Core/Src/main.c **** static uint32_t estimate_cpu_cycles_from_ms(uint32_t elapsed_ms)
 446:Core/Src/main.c **** {
 2015              		.loc 1 446 1
 2016              		.cfi_startproc
 2017              		@ args = 0, pretend = 0, frame = 8
 2018              		@ frame_needed = 1, uses_anonymous_args = 0
 2019 0000 80B5     		push	{r7, lr}
 2020              	.LCFI18:
 2021              		.cfi_def_cfa_offset 8
 2022              		.cfi_offset 7, -8
 2023              		.cfi_offset 14, -4
 2024 0002 82B0     		sub	sp, sp, #8
 2025              	.LCFI19:
 2026              		.cfi_def_cfa_offset 16
 2027 0004 00AF     		add	r7, sp, #0
 2028              	.LCFI20:
 2029              		.cfi_def_cfa_register 7
 2030 0006 7860     		str	r0, [r7, #4]
 447:Core/Src/main.c ****   /* Estimate CPU cycles based on SystemCoreClock and elapsed milliseconds */
 448:Core/Src/main.c ****   /* This is an approximation since F0 doesn't have DWT cycle counter */
 449:Core/Src/main.c ****   return elapsed_ms * (SystemCoreClock / 1000u);
 2031              		.loc 1 449 40
 2032 0008 074B     		ldr	r3, .L60
 2033 000a 1B68     		ldr	r3, [r3]
 2034 000c FA22     		movs	r2, #250
 2035 000e 9100     		lsls	r1, r2, #2
 2036 0010 1800     		movs	r0, r3
 2037 0012 FFF7FEFF 		bl	__aeabi_uidiv
 2038 0016 0300     		movs	r3, r0
 2039 0018 1A00     		movs	r2, r3
 2040              		.loc 1 449 21
 2041 001a 7B68     		ldr	r3, [r7, #4]
 2042 001c 5343     		muls	r3, r2
 450:Core/Src/main.c **** }
 2043              		.loc 1 450 1
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 45


 2044 001e 1800     		movs	r0, r3
 2045 0020 BD46     		mov	sp, r7
 2046 0022 02B0     		add	sp, sp, #8
 2047              		@ sp needed
 2048 0024 80BD     		pop	{r7, pc}
 2049              	.L61:
 2050 0026 C046     		.align	2
 2051              	.L60:
 2052 0028 00000000 		.word	SystemCoreClock
 2053              		.cfi_endproc
 2054              	.LFE46:
 2056              		.global	__aeabi_lmul
 2057              		.global	__aeabi_ldivmod
 2058              		.section	.text.fixed_multiply,"ax",%progbits
 2059              		.align	1
 2060              		.syntax unified
 2061              		.code	16
 2062              		.thumb_func
 2064              	fixed_multiply:
 2065              	.LFB47:
 451:Core/Src/main.c **** 
 452:Core/Src/main.c **** /* Task 7: Fixed-point arithmetic functions */
 453:Core/Src/main.c **** static int64_t fixed_multiply(int64_t a, int64_t b, uint32_t scale)
 454:Core/Src/main.c **** {
 2066              		.loc 1 454 1
 2067              		.cfi_startproc
 2068              		@ args = 4, pretend = 0, frame = 24
 2069              		@ frame_needed = 1, uses_anonymous_args = 0
 2070 0000 B0B5     		push	{r4, r5, r7, lr}
 2071              	.LCFI21:
 2072              		.cfi_def_cfa_offset 16
 2073              		.cfi_offset 4, -16
 2074              		.cfi_offset 5, -12
 2075              		.cfi_offset 7, -8
 2076              		.cfi_offset 14, -4
 2077 0002 86B0     		sub	sp, sp, #24
 2078              	.LCFI22:
 2079              		.cfi_def_cfa_offset 40
 2080 0004 00AF     		add	r7, sp, #0
 2081              	.LCFI23:
 2082              		.cfi_def_cfa_register 7
 2083 0006 B860     		str	r0, [r7, #8]
 2084 0008 F960     		str	r1, [r7, #12]
 2085 000a 3A60     		str	r2, [r7]
 2086 000c 7B60     		str	r3, [r7, #4]
 455:Core/Src/main.c ****   /* Multiply two fixed-point numbers and scale back */
 456:Core/Src/main.c ****   int64_t result = (a * b) / (int64_t)scale;
 2087              		.loc 1 456 23
 2088 000e 3A68     		ldr	r2, [r7]
 2089 0010 7B68     		ldr	r3, [r7, #4]
 2090 0012 B868     		ldr	r0, [r7, #8]
 2091 0014 F968     		ldr	r1, [r7, #12]
 2092 0016 FFF7FEFF 		bl	__aeabi_lmul
 2093 001a 0200     		movs	r2, r0
 2094 001c 0B00     		movs	r3, r1
 2095 001e 1000     		movs	r0, r2
 2096 0020 1900     		movs	r1, r3
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 46


 2097              		.loc 1 456 30
 2098 0022 BB6A     		ldr	r3, [r7, #40]
 2099 0024 1C00     		movs	r4, r3
 2100 0026 0023     		movs	r3, #0
 2101 0028 1D00     		movs	r5, r3
 2102              		.loc 1 456 11
 2103 002a 2200     		movs	r2, r4
 2104 002c 2B00     		movs	r3, r5
 2105 002e FFF7FEFF 		bl	__aeabi_ldivmod
 2106 0032 0200     		movs	r2, r0
 2107 0034 0B00     		movs	r3, r1
 2108 0036 3A61     		str	r2, [r7, #16]
 2109 0038 7B61     		str	r3, [r7, #20]
 457:Core/Src/main.c ****   return result;
 2110              		.loc 1 457 10
 2111 003a 3A69     		ldr	r2, [r7, #16]
 2112 003c 7B69     		ldr	r3, [r7, #20]
 458:Core/Src/main.c **** }
 2113              		.loc 1 458 1
 2114 003e 1000     		movs	r0, r2
 2115 0040 1900     		movs	r1, r3
 2116 0042 BD46     		mov	sp, r7
 2117 0044 06B0     		add	sp, sp, #24
 2118              		@ sp needed
 2119 0046 B0BD     		pop	{r4, r5, r7, pc}
 2120              		.cfi_endproc
 2121              	.LFE47:
 2123              		.section	.text.fixed_add,"ax",%progbits
 2124              		.align	1
 2125              		.syntax unified
 2126              		.code	16
 2127              		.thumb_func
 2129              	fixed_add:
 2130              	.LFB48:
 459:Core/Src/main.c **** 
 460:Core/Src/main.c **** static int64_t fixed_add(int64_t a, int64_t b)
 461:Core/Src/main.c **** {
 2131              		.loc 1 461 1
 2132              		.cfi_startproc
 2133              		@ args = 0, pretend = 0, frame = 16
 2134              		@ frame_needed = 1, uses_anonymous_args = 0
 2135 0000 80B5     		push	{r7, lr}
 2136              	.LCFI24:
 2137              		.cfi_def_cfa_offset 8
 2138              		.cfi_offset 7, -8
 2139              		.cfi_offset 14, -4
 2140 0002 84B0     		sub	sp, sp, #16
 2141              	.LCFI25:
 2142              		.cfi_def_cfa_offset 24
 2143 0004 00AF     		add	r7, sp, #0
 2144              	.LCFI26:
 2145              		.cfi_def_cfa_register 7
 2146 0006 B860     		str	r0, [r7, #8]
 2147 0008 F960     		str	r1, [r7, #12]
 2148 000a 3A60     		str	r2, [r7]
 2149 000c 7B60     		str	r3, [r7, #4]
 462:Core/Src/main.c ****   return a + b;
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 47


 2150              		.loc 1 462 12
 2151 000e B868     		ldr	r0, [r7, #8]
 2152 0010 F968     		ldr	r1, [r7, #12]
 2153 0012 3A68     		ldr	r2, [r7]
 2154 0014 7B68     		ldr	r3, [r7, #4]
 2155 0016 1218     		adds	r2, r2, r0
 2156 0018 4B41     		adcs	r3, r3, r1
 463:Core/Src/main.c **** }
 2157              		.loc 1 463 1
 2158 001a 1000     		movs	r0, r2
 2159 001c 1900     		movs	r1, r3
 2160 001e BD46     		mov	sp, r7
 2161 0020 04B0     		add	sp, sp, #16
 2162              		@ sp needed
 2163 0022 80BD     		pop	{r7, pc}
 2164              		.cfi_endproc
 2165              	.LFE48:
 2167              		.global	__aeabi_d2lz
 2168              		.section	.text.double_to_fixed,"ax",%progbits
 2169              		.align	1
 2170              		.syntax unified
 2171              		.code	16
 2172              		.thumb_func
 2174              	double_to_fixed:
 2175              	.LFB49:
 464:Core/Src/main.c **** 
 465:Core/Src/main.c **** static int64_t double_to_fixed(double value, uint32_t scale)
 466:Core/Src/main.c **** {
 2176              		.loc 1 466 1
 2177              		.cfi_startproc
 2178              		@ args = 0, pretend = 0, frame = 16
 2179              		@ frame_needed = 1, uses_anonymous_args = 0
 2180 0000 80B5     		push	{r7, lr}
 2181              	.LCFI27:
 2182              		.cfi_def_cfa_offset 8
 2183              		.cfi_offset 7, -8
 2184              		.cfi_offset 14, -4
 2185 0002 84B0     		sub	sp, sp, #16
 2186              	.LCFI28:
 2187              		.cfi_def_cfa_offset 24
 2188 0004 00AF     		add	r7, sp, #0
 2189              	.LCFI29:
 2190              		.cfi_def_cfa_register 7
 2191 0006 B860     		str	r0, [r7, #8]
 2192 0008 F960     		str	r1, [r7, #12]
 2193 000a 7A60     		str	r2, [r7, #4]
 467:Core/Src/main.c ****   return (int64_t)(value * (double)scale);
 2194              		.loc 1 467 28
 2195 000c 7868     		ldr	r0, [r7, #4]
 2196 000e FFF7FEFF 		bl	__aeabi_ui2d
 2197              		.loc 1 467 26
 2198 0012 BA68     		ldr	r2, [r7, #8]
 2199 0014 FB68     		ldr	r3, [r7, #12]
 2200 0016 FFF7FEFF 		bl	__aeabi_dmul
 2201 001a 0200     		movs	r2, r0
 2202 001c 0B00     		movs	r3, r1
 2203              		.loc 1 467 10
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 48


 2204 001e 1000     		movs	r0, r2
 2205 0020 1900     		movs	r1, r3
 2206 0022 FFF7FEFF 		bl	__aeabi_d2lz
 2207 0026 0200     		movs	r2, r0
 2208 0028 0B00     		movs	r3, r1
 468:Core/Src/main.c **** }
 2209              		.loc 1 468 1
 2210 002a 1000     		movs	r0, r2
 2211 002c 1900     		movs	r1, r3
 2212 002e BD46     		mov	sp, r7
 2213 0030 04B0     		add	sp, sp, #16
 2214              		@ sp needed
 2215 0032 80BD     		pop	{r7, pc}
 2216              		.cfi_endproc
 2217              	.LFE49:
 2219              		.global	__aeabi_l2d
 2220              		.section	.text.fixed_to_double,"ax",%progbits
 2221              		.align	1
 2222              		.syntax unified
 2223              		.code	16
 2224              		.thumb_func
 2226              	fixed_to_double:
 2227              	.LFB50:
 469:Core/Src/main.c **** 
 470:Core/Src/main.c **** static double fixed_to_double(int64_t value, uint32_t scale)
 471:Core/Src/main.c **** {
 2228              		.loc 1 471 1
 2229              		.cfi_startproc
 2230              		@ args = 0, pretend = 0, frame = 16
 2231              		@ frame_needed = 1, uses_anonymous_args = 0
 2232 0000 B0B5     		push	{r4, r5, r7, lr}
 2233              	.LCFI30:
 2234              		.cfi_def_cfa_offset 16
 2235              		.cfi_offset 4, -16
 2236              		.cfi_offset 5, -12
 2237              		.cfi_offset 7, -8
 2238              		.cfi_offset 14, -4
 2239 0002 84B0     		sub	sp, sp, #16
 2240              	.LCFI31:
 2241              		.cfi_def_cfa_offset 32
 2242 0004 00AF     		add	r7, sp, #0
 2243              	.LCFI32:
 2244              		.cfi_def_cfa_register 7
 2245 0006 B860     		str	r0, [r7, #8]
 2246 0008 F960     		str	r1, [r7, #12]
 2247 000a 7A60     		str	r2, [r7, #4]
 472:Core/Src/main.c ****   return (double)value / (double)scale;
 2248              		.loc 1 472 10
 2249 000c B868     		ldr	r0, [r7, #8]
 2250 000e F968     		ldr	r1, [r7, #12]
 2251 0010 FFF7FEFF 		bl	__aeabi_l2d
 2252 0014 0400     		movs	r4, r0
 2253 0016 0D00     		movs	r5, r1
 2254              		.loc 1 472 26
 2255 0018 7868     		ldr	r0, [r7, #4]
 2256 001a FFF7FEFF 		bl	__aeabi_ui2d
 2257 001e 0200     		movs	r2, r0
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 49


 2258 0020 0B00     		movs	r3, r1
 2259              		.loc 1 472 24
 2260 0022 2000     		movs	r0, r4
 2261 0024 2900     		movs	r1, r5
 2262 0026 FFF7FEFF 		bl	__aeabi_ddiv
 2263 002a 0200     		movs	r2, r0
 2264 002c 0B00     		movs	r3, r1
 473:Core/Src/main.c **** }
 2265              		.loc 1 473 1
 2266 002e 1000     		movs	r0, r2
 2267 0030 1900     		movs	r1, r3
 2268 0032 BD46     		mov	sp, r7
 2269 0034 04B0     		add	sp, sp, #16
 2270              		@ sp needed
 2271 0036 B0BD     		pop	{r4, r5, r7, pc}
 2272              		.cfi_endproc
 2273              	.LFE50:
 2275              		.section	.text.generate_mandelbrot_checksum_fixed_point,"ax",%progbits
 2276              		.align	1
 2277              		.syntax unified
 2278              		.code	16
 2279              		.thumb_func
 2281              	generate_mandelbrot_checksum_fixed_point:
 2282              	.LFB51:
 474:Core/Src/main.c **** 
 475:Core/Src/main.c **** static uint32_t generate_mandelbrot_checksum_fixed_point(uint16_t width, uint16_t height, uint32_t 
 476:Core/Src/main.c **** {
 2283              		.loc 1 476 1
 2284              		.cfi_startproc
 2285              		@ args = 0, pretend = 0, frame = 152
 2286              		@ frame_needed = 1, uses_anonymous_args = 0
 2287 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2288              	.LCFI33:
 2289              		.cfi_def_cfa_offset 20
 2290              		.cfi_offset 4, -20
 2291              		.cfi_offset 5, -16
 2292              		.cfi_offset 6, -12
 2293              		.cfi_offset 7, -8
 2294              		.cfi_offset 14, -4
 2295 0002 A9B0     		sub	sp, sp, #164
 2296              	.LCFI34:
 2297              		.cfi_def_cfa_offset 184
 2298 0004 02AF     		add	r7, sp, #8
 2299              	.LCFI35:
 2300              		.cfi_def_cfa 7, 176
 2301 0006 BA61     		str	r2, [r7, #24]
 2302 0008 7B61     		str	r3, [r7, #20]
 2303 000a 0E23     		movs	r3, #14
 2304 000c 1024     		movs	r4, #16
 2305 000e 1B19     		adds	r3, r3, r4
 2306 0010 DB19     		adds	r3, r3, r7
 2307 0012 021C     		adds	r2, r0, #0
 2308 0014 1A80     		strh	r2, [r3]
 2309 0016 0C23     		movs	r3, #12
 2310 0018 1B19     		adds	r3, r3, r4
 2311 001a DB19     		adds	r3, r3, r7
 2312 001c 0A1C     		adds	r2, r1, #0
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 50


 2313 001e 1A80     		strh	r2, [r3]
 477:Core/Src/main.c ****   uint32_t mandelbrot_sum = 0u;
 2314              		.loc 1 477 12
 2315 0020 0023     		movs	r3, #0
 2316 0022 8422     		movs	r2, #132
 2317 0024 1219     		adds	r2, r2, r4
 2318 0026 D219     		adds	r2, r2, r7
 2319 0028 1360     		str	r3, [r2]
 478:Core/Src/main.c ****   uint32_t overflow_count = 0u;
 2320              		.loc 1 478 12
 2321 002a 0023     		movs	r3, #0
 2322 002c 8022     		movs	r2, #128
 2323 002e 1219     		adds	r2, r2, r4
 2324 0030 D219     		adds	r2, r2, r7
 2325 0032 1360     		str	r3, [r2]
 479:Core/Src/main.c ****   
 480:Core/Src/main.c ****   /* Fixed-point constants */
 481:Core/Src/main.c ****   int64_t scale_2_0 = double_to_fixed(2.0, scale);      /* 2.0 in fixed-point */
 2326              		.loc 1 481 23
 2327 0034 7B69     		ldr	r3, [r7, #20]
 2328 0036 0020     		movs	r0, #0
 2329 0038 8021     		movs	r1, #128
 2330 003a C905     		lsls	r1, r1, #23
 2331 003c 1A00     		movs	r2, r3
 2332 003e FFF7FEFF 		bl	double_to_fixed
 2333 0042 0200     		movs	r2, r0
 2334 0044 0B00     		movs	r3, r1
 2335 0046 BA66     		str	r2, [r7, #104]
 2336 0048 FB66     		str	r3, [r7, #108]
 482:Core/Src/main.c ****   int64_t scale_4_0 = double_to_fixed(4.0, scale);      /* 4.0 in fixed-point */
 2337              		.loc 1 482 23
 2338 004a 7B69     		ldr	r3, [r7, #20]
 2339 004c 0020     		movs	r0, #0
 2340 004e BD49     		ldr	r1, .L95
 2341 0050 1A00     		movs	r2, r3
 2342 0052 FFF7FEFF 		bl	double_to_fixed
 2343 0056 0200     		movs	r2, r0
 2344 0058 0B00     		movs	r3, r1
 2345 005a 3A66     		str	r2, [r7, #96]
 2346 005c 7B66     		str	r3, [r7, #100]
 483:Core/Src/main.c ****   int64_t scale_3_5 = double_to_fixed(3.5, scale);      /* 3.5 in fixed-point */
 2347              		.loc 1 483 23
 2348 005e 7B69     		ldr	r3, [r7, #20]
 2349 0060 0020     		movs	r0, #0
 2350 0062 B949     		ldr	r1, .L95+4
 2351 0064 1A00     		movs	r2, r3
 2352 0066 FFF7FEFF 		bl	double_to_fixed
 2353 006a 0200     		movs	r2, r0
 2354 006c 0B00     		movs	r3, r1
 2355 006e BA65     		str	r2, [r7, #88]
 2356 0070 FB65     		str	r3, [r7, #92]
 484:Core/Src/main.c ****   int64_t scale_2_5 = double_to_fixed(2.5, scale);      /* 2.5 in fixed-point */
 2357              		.loc 1 484 23
 2358 0072 7B69     		ldr	r3, [r7, #20]
 2359 0074 0020     		movs	r0, #0
 2360 0076 B549     		ldr	r1, .L95+8
 2361 0078 1A00     		movs	r2, r3
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 51


 2362 007a FFF7FEFF 		bl	double_to_fixed
 2363 007e 0200     		movs	r2, r0
 2364 0080 0B00     		movs	r3, r1
 2365 0082 3A65     		str	r2, [r7, #80]
 2366 0084 7B65     		str	r3, [r7, #84]
 2367              	.LBB29:
 485:Core/Src/main.c ****   
 486:Core/Src/main.c ****   for (uint16_t y = 0; y < height; ++y)
 2368              		.loc 1 486 17
 2369 0086 7E23     		movs	r3, #126
 2370 0088 1B19     		adds	r3, r3, r4
 2371 008a DB19     		adds	r3, r3, r7
 2372 008c 0022     		movs	r2, #0
 2373 008e 1A80     		strh	r2, [r3]
 2374              		.loc 1 486 3
 2375 0090 3AE1     		b	.L71
 2376              	.L85:
 2377              	.LBB30:
 487:Core/Src/main.c ****   {
 488:Core/Src/main.c ****     int64_t y0_fixed = fixed_multiply(double_to_fixed((double)y, scale), scale_2_0, scale) / (int64
 2378              		.loc 1 488 24
 2379 0092 7E23     		movs	r3, #126
 2380 0094 1026     		movs	r6, #16
 2381 0096 9B19     		adds	r3, r3, r6
 2382 0098 DB19     		adds	r3, r3, r7
 2383 009a 1B88     		ldrh	r3, [r3]
 2384 009c 1800     		movs	r0, r3
 2385 009e FFF7FEFF 		bl	__aeabi_ui2d
 2386 00a2 7B69     		ldr	r3, [r7, #20]
 2387 00a4 1A00     		movs	r2, r3
 2388 00a6 FFF7FEFF 		bl	double_to_fixed
 2389              		.loc 1 488 24 is_stmt 0 discriminator 1
 2390 00aa BA6E     		ldr	r2, [r7, #104]
 2391 00ac FB6E     		ldr	r3, [r7, #108]
 2392 00ae 7C69     		ldr	r4, [r7, #20]
 2393 00b0 0094     		str	r4, [sp]
 2394 00b2 FFF7FEFF 		bl	fixed_multiply
 2395              		.loc 1 488 94 is_stmt 1 discriminator 2
 2396 00b6 0C23     		movs	r3, #12
 2397 00b8 9B19     		adds	r3, r3, r6
 2398 00ba DB19     		adds	r3, r3, r7
 2399 00bc 1B88     		ldrh	r3, [r3]
 2400 00be 9BB2     		uxth	r3, r3
 2401 00c0 BB60     		str	r3, [r7, #8]
 2402 00c2 0023     		movs	r3, #0
 2403 00c4 FB60     		str	r3, [r7, #12]
 2404              		.loc 1 488 92 discriminator 2
 2405 00c6 BA68     		ldr	r2, [r7, #8]
 2406 00c8 FB68     		ldr	r3, [r7, #12]
 2407 00ca FFF7FEFF 		bl	__aeabi_ldivmod
 2408 00ce 0200     		movs	r2, r0
 2409 00d0 0B00     		movs	r3, r1
 2410 00d2 1400     		movs	r4, r2
 2411 00d4 1D00     		movs	r5, r3
 2412              		.loc 1 488 112 discriminator 2
 2413 00d6 7B69     		ldr	r3, [r7, #20]
 2414 00d8 0020     		movs	r0, #0
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 52


 2415 00da 9D49     		ldr	r1, .L95+12
 2416 00dc 1A00     		movs	r2, r3
 2417 00de FFF7FEFF 		bl	double_to_fixed
 2418 00e2 0200     		movs	r2, r0
 2419 00e4 0B00     		movs	r3, r1
 2420              		.loc 1 488 13 discriminator 3
 2421 00e6 A41A     		subs	r4, r4, r2
 2422 00e8 9D41     		sbcs	r5, r5, r3
 2423 00ea 2200     		movs	r2, r4
 2424 00ec 2B00     		movs	r3, r5
 2425 00ee BA64     		str	r2, [r7, #72]
 2426 00f0 FB64     		str	r3, [r7, #76]
 2427              	.LBB31:
 489:Core/Src/main.c ****     
 490:Core/Src/main.c ****     for (uint16_t x = 0; x < width; ++x)
 2428              		.loc 1 490 19
 2429 00f2 7C23     		movs	r3, #124
 2430 00f4 9B19     		adds	r3, r3, r6
 2431 00f6 DB19     		adds	r3, r3, r7
 2432 00f8 0022     		movs	r2, #0
 2433 00fa 1A80     		strh	r2, [r3]
 2434              		.loc 1 490 5
 2435 00fc F0E0     		b	.L72
 2436              	.L84:
 2437              	.LBB32:
 491:Core/Src/main.c ****     {
 492:Core/Src/main.c ****       int64_t x0_fixed = fixed_multiply(double_to_fixed((double)x, scale), scale_3_5, scale) / (int
 2438              		.loc 1 492 26
 2439 00fe 7C23     		movs	r3, #124
 2440 0100 1025     		movs	r5, #16
 2441 0102 5B19     		adds	r3, r3, r5
 2442 0104 DB19     		adds	r3, r3, r7
 2443 0106 1B88     		ldrh	r3, [r3]
 2444 0108 1800     		movs	r0, r3
 2445 010a FFF7FEFF 		bl	__aeabi_ui2d
 2446 010e 7B69     		ldr	r3, [r7, #20]
 2447 0110 1A00     		movs	r2, r3
 2448 0112 FFF7FEFF 		bl	double_to_fixed
 2449              		.loc 1 492 26 is_stmt 0 discriminator 1
 2450 0116 BA6D     		ldr	r2, [r7, #88]
 2451 0118 FB6D     		ldr	r3, [r7, #92]
 2452 011a 7C69     		ldr	r4, [r7, #20]
 2453 011c 0094     		str	r4, [sp]
 2454 011e FFF7FEFF 		bl	fixed_multiply
 2455              		.loc 1 492 96 is_stmt 1 discriminator 2
 2456 0122 0E23     		movs	r3, #14
 2457 0124 5B19     		adds	r3, r3, r5
 2458 0126 DB19     		adds	r3, r3, r7
 2459 0128 1B88     		ldrh	r3, [r3]
 2460 012a 9BB2     		uxth	r3, r3
 2461 012c 3B60     		str	r3, [r7]
 2462 012e 0023     		movs	r3, #0
 2463 0130 7B60     		str	r3, [r7, #4]
 2464              		.loc 1 492 94 discriminator 2
 2465 0132 3A68     		ldr	r2, [r7]
 2466 0134 7B68     		ldr	r3, [r7, #4]
 2467 0136 FFF7FEFF 		bl	__aeabi_ldivmod
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 53


 2468 013a 0200     		movs	r2, r0
 2469 013c 0B00     		movs	r3, r1
 2470 013e 1000     		movs	r0, r2
 2471 0140 1900     		movs	r1, r3
 2472              		.loc 1 492 15 discriminator 2
 2473 0142 3A6D     		ldr	r2, [r7, #80]
 2474 0144 7B6D     		ldr	r3, [r7, #84]
 2475 0146 801A     		subs	r0, r0, r2
 2476 0148 9941     		sbcs	r1, r1, r3
 2477 014a 0200     		movs	r2, r0
 2478 014c 0B00     		movs	r3, r1
 2479 014e 3A64     		str	r2, [r7, #64]
 2480 0150 7B64     		str	r3, [r7, #68]
 493:Core/Src/main.c ****       int64_t xi_fixed = 0;
 2481              		.loc 1 493 15
 2482 0152 0022     		movs	r2, #0
 2483 0154 0023     		movs	r3, #0
 2484 0156 8021     		movs	r1, #128
 2485 0158 7918     		adds	r1, r7, r1
 2486 015a 0A60     		str	r2, [r1]
 2487 015c 4B60     		str	r3, [r1, #4]
 494:Core/Src/main.c ****       int64_t yi_fixed = 0;
 2488              		.loc 1 494 15
 2489 015e 0022     		movs	r2, #0
 2490 0160 0023     		movs	r3, #0
 2491 0162 BA67     		str	r2, [r7, #120]
 2492 0164 FB67     		str	r3, [r7, #124]
 495:Core/Src/main.c ****       uint32_t iteration = 0u;
 2493              		.loc 1 495 16
 2494 0166 0023     		movs	r3, #0
 2495 0168 7B67     		str	r3, [r7, #116]
 496:Core/Src/main.c ****       
 497:Core/Src/main.c ****       while (iteration < max_iter)
 2496              		.loc 1 497 13
 2497 016a A0E0     		b	.L73
 2498              	.L83:
 2499              	.LBB33:
 498:Core/Src/main.c ****       {
 499:Core/Src/main.c ****         /* Check for overflow before multiplication */
 500:Core/Src/main.c ****         if (xi_fixed > 1000000 || xi_fixed < -1000000 || yi_fixed > 1000000 || yi_fixed < -1000000)
 2500              		.loc 1 500 12
 2501 016c 8422     		movs	r2, #132
 2502 016e BB18     		adds	r3, r7, r2
 2503 0170 1B68     		ldr	r3, [r3]
 2504 0172 002B     		cmp	r3, #0
 2505 0174 2CDC     		bgt	.L74
 2506 0176 BB18     		adds	r3, r7, r2
 2507 0178 1B68     		ldr	r3, [r3]
 2508 017a 002B     		cmp	r3, #0
 2509 017c 05D1     		bne	.L87
 2510 017e 8023     		movs	r3, #128
 2511 0180 FB18     		adds	r3, r7, r3
 2512 0182 1B68     		ldr	r3, [r3]
 2513 0184 734A     		ldr	r2, .L95+16
 2514 0186 9342     		cmp	r3, r2
 2515 0188 22D8     		bhi	.L74
 2516              	.L87:
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 54


 2517              		.loc 1 500 32 discriminator 1
 2518 018a 8422     		movs	r2, #132
 2519 018c BB18     		adds	r3, r7, r2
 2520 018e 1B68     		ldr	r3, [r3]
 2521 0190 0133     		adds	r3, r3, #1
 2522 0192 1DDB     		blt	.L74
 2523 0194 BB18     		adds	r3, r7, r2
 2524 0196 1B68     		ldr	r3, [r3]
 2525 0198 0133     		adds	r3, r3, #1
 2526 019a 05D1     		bne	.L88
 2527 019c 8023     		movs	r3, #128
 2528 019e FB18     		adds	r3, r7, r3
 2529 01a0 1B68     		ldr	r3, [r3]
 2530 01a2 6D4A     		ldr	r2, .L95+20
 2531 01a4 9342     		cmp	r3, r2
 2532 01a6 13D3     		bcc	.L74
 2533              	.L88:
 2534              		.loc 1 500 55 discriminator 2
 2535 01a8 FB6F     		ldr	r3, [r7, #124]
 2536 01aa 002B     		cmp	r3, #0
 2537 01ac 10DC     		bgt	.L74
 2538 01ae FB6F     		ldr	r3, [r7, #124]
 2539 01b0 002B     		cmp	r3, #0
 2540 01b2 03D1     		bne	.L89
 2541 01b4 BB6F     		ldr	r3, [r7, #120]
 2542 01b6 674A     		ldr	r2, .L95+16
 2543 01b8 9342     		cmp	r3, r2
 2544 01ba 09D8     		bhi	.L74
 2545              	.L89:
 2546              		.loc 1 500 77 discriminator 3
 2547 01bc FB6F     		ldr	r3, [r7, #124]
 2548 01be 0133     		adds	r3, r3, #1
 2549 01c0 06DB     		blt	.L74
 2550 01c2 FB6F     		ldr	r3, [r7, #124]
 2551 01c4 0133     		adds	r3, r3, #1
 2552 01c6 0DD1     		bne	.L78
 2553 01c8 BB6F     		ldr	r3, [r7, #120]
 2554 01ca 634A     		ldr	r2, .L95+20
 2555 01cc 9342     		cmp	r3, r2
 2556 01ce 09D2     		bcs	.L78
 2557              	.L74:
 501:Core/Src/main.c ****         {
 502:Core/Src/main.c ****           overflow_count++;
 2558              		.loc 1 502 25
 2559 01d0 8022     		movs	r2, #128
 2560 01d2 1021     		movs	r1, #16
 2561 01d4 5318     		adds	r3, r2, r1
 2562 01d6 DB19     		adds	r3, r3, r7
 2563 01d8 1B68     		ldr	r3, [r3]
 2564 01da 0133     		adds	r3, r3, #1
 2565 01dc 5218     		adds	r2, r2, r1
 2566 01de D219     		adds	r2, r2, r7
 2567 01e0 1360     		str	r3, [r2]
 503:Core/Src/main.c ****           break;
 2568              		.loc 1 503 11
 2569 01e2 6BE0     		b	.L80
 2570              	.L78:
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 55


 504:Core/Src/main.c ****         }
 505:Core/Src/main.c ****         
 506:Core/Src/main.c ****         /* Calculate xi^2 + yi^2 in fixed-point */
 507:Core/Src/main.c ****         int64_t xi_squared = fixed_multiply(xi_fixed, xi_fixed, scale);
 2571              		.loc 1 507 30
 2572 01e4 8021     		movs	r1, #128
 2573 01e6 7B18     		adds	r3, r7, r1
 2574 01e8 1A68     		ldr	r2, [r3]
 2575 01ea 5B68     		ldr	r3, [r3, #4]
 2576 01ec 7918     		adds	r1, r7, r1
 2577 01ee 0868     		ldr	r0, [r1]
 2578 01f0 4968     		ldr	r1, [r1, #4]
 2579 01f2 7C69     		ldr	r4, [r7, #20]
 2580 01f4 0094     		str	r4, [sp]
 2581 01f6 FFF7FEFF 		bl	fixed_multiply
 2582 01fa 0200     		movs	r2, r0
 2583 01fc 0B00     		movs	r3, r1
 2584 01fe BA63     		str	r2, [r7, #56]
 2585 0200 FB63     		str	r3, [r7, #60]
 508:Core/Src/main.c ****         int64_t yi_squared = fixed_multiply(yi_fixed, yi_fixed, scale);
 2586              		.loc 1 508 30
 2587 0202 BA6F     		ldr	r2, [r7, #120]
 2588 0204 FB6F     		ldr	r3, [r7, #124]
 2589 0206 B86F     		ldr	r0, [r7, #120]
 2590 0208 F96F     		ldr	r1, [r7, #124]
 2591 020a 7C69     		ldr	r4, [r7, #20]
 2592 020c 0094     		str	r4, [sp]
 2593 020e FFF7FEFF 		bl	fixed_multiply
 2594 0212 0200     		movs	r2, r0
 2595 0214 0B00     		movs	r3, r1
 2596 0216 3A63     		str	r2, [r7, #48]
 2597 0218 7B63     		str	r3, [r7, #52]
 509:Core/Src/main.c ****         int64_t magnitude_squared = fixed_add(xi_squared, yi_squared);
 2598              		.loc 1 509 37
 2599 021a 3A6B     		ldr	r2, [r7, #48]
 2600 021c 7B6B     		ldr	r3, [r7, #52]
 2601 021e B86B     		ldr	r0, [r7, #56]
 2602 0220 F96B     		ldr	r1, [r7, #60]
 2603 0222 FFF7FEFF 		bl	fixed_add
 2604 0226 0200     		movs	r2, r0
 2605 0228 0B00     		movs	r3, r1
 2606 022a BA62     		str	r2, [r7, #40]
 2607 022c FB62     		str	r3, [r7, #44]
 510:Core/Src/main.c ****         
 511:Core/Src/main.c ****         /* Check if magnitude^2 > 4.0 */
 512:Core/Src/main.c ****         if (magnitude_squared > scale_4_0)
 2608              		.loc 1 512 12
 2609 022e FA6A     		ldr	r2, [r7, #44]
 2610 0230 7B6E     		ldr	r3, [r7, #100]
 2611 0232 9A42     		cmp	r2, r3
 2612 0234 41DC     		bgt	.L90
 2613 0236 FA6A     		ldr	r2, [r7, #44]
 2614 0238 7B6E     		ldr	r3, [r7, #100]
 2615 023a 9A42     		cmp	r2, r3
 2616 023c 03D1     		bne	.L81
 2617 023e BA6A     		ldr	r2, [r7, #40]
 2618 0240 3B6E     		ldr	r3, [r7, #96]
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 56


 2619 0242 9A42     		cmp	r2, r3
 2620 0244 39D8     		bhi	.L90
 2621              	.L81:
 513:Core/Src/main.c ****         {
 514:Core/Src/main.c ****           break;
 515:Core/Src/main.c ****         }
 516:Core/Src/main.c ****         
 517:Core/Src/main.c ****         /* Calculate new xi and yi */
 518:Core/Src/main.c ****         int64_t tmp = fixed_add(fixed_add(xi_squared, -yi_squared), x0_fixed);
 2622              		.loc 1 518 23
 2623 0246 3A6B     		ldr	r2, [r7, #48]
 2624 0248 7B6B     		ldr	r3, [r7, #52]
 2625 024a 0020     		movs	r0, #0
 2626 024c 0021     		movs	r1, #0
 2627 024e 801A     		subs	r0, r0, r2
 2628 0250 9941     		sbcs	r1, r1, r3
 2629 0252 0200     		movs	r2, r0
 2630 0254 0B00     		movs	r3, r1
 2631 0256 B86B     		ldr	r0, [r7, #56]
 2632 0258 F96B     		ldr	r1, [r7, #60]
 2633 025a FFF7FEFF 		bl	fixed_add
 2634              		.loc 1 518 23 is_stmt 0 discriminator 1
 2635 025e 3A6C     		ldr	r2, [r7, #64]
 2636 0260 7B6C     		ldr	r3, [r7, #68]
 2637 0262 FFF7FEFF 		bl	fixed_add
 2638 0266 0200     		movs	r2, r0
 2639 0268 0B00     		movs	r3, r1
 2640 026a 3A62     		str	r2, [r7, #32]
 2641 026c 7B62     		str	r3, [r7, #36]
 519:Core/Src/main.c ****         yi_fixed = fixed_add(fixed_multiply(fixed_multiply(xi_fixed, yi_fixed, scale), scale_2_0, s
 2642              		.loc 1 519 20 is_stmt 1
 2643 026e BA6F     		ldr	r2, [r7, #120]
 2644 0270 FB6F     		ldr	r3, [r7, #124]
 2645 0272 8025     		movs	r5, #128
 2646 0274 7919     		adds	r1, r7, r5
 2647 0276 0868     		ldr	r0, [r1]
 2648 0278 4968     		ldr	r1, [r1, #4]
 2649 027a 7C69     		ldr	r4, [r7, #20]
 2650 027c 0094     		str	r4, [sp]
 2651 027e FFF7FEFF 		bl	fixed_multiply
 2652              		.loc 1 519 20 is_stmt 0 discriminator 1
 2653 0282 BA6E     		ldr	r2, [r7, #104]
 2654 0284 FB6E     		ldr	r3, [r7, #108]
 2655 0286 7C69     		ldr	r4, [r7, #20]
 2656 0288 0094     		str	r4, [sp]
 2657 028a FFF7FEFF 		bl	fixed_multiply
 2658              		.loc 1 519 20 discriminator 2
 2659 028e BA6C     		ldr	r2, [r7, #72]
 2660 0290 FB6C     		ldr	r3, [r7, #76]
 2661 0292 FFF7FEFF 		bl	fixed_add
 2662 0296 0200     		movs	r2, r0
 2663 0298 0B00     		movs	r3, r1
 2664 029a BA67     		str	r2, [r7, #120]
 2665 029c FB67     		str	r3, [r7, #124]
 520:Core/Src/main.c ****         xi_fixed = tmp;
 2666              		.loc 1 520 18 is_stmt 1
 2667 029e 3A6A     		ldr	r2, [r7, #32]
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 57


 2668 02a0 7B6A     		ldr	r3, [r7, #36]
 2669 02a2 7919     		adds	r1, r7, r5
 2670 02a4 0A60     		str	r2, [r1]
 2671 02a6 4B60     		str	r3, [r1, #4]
 521:Core/Src/main.c ****         
 522:Core/Src/main.c ****         ++iteration;
 2672              		.loc 1 522 9
 2673 02a8 7B6F     		ldr	r3, [r7, #116]
 2674 02aa 0133     		adds	r3, r3, #1
 2675 02ac 7B67     		str	r3, [r7, #116]
 2676              	.L73:
 2677              	.LBE33:
 497:Core/Src/main.c ****       {
 2678              		.loc 1 497 24
 2679 02ae 7A6F     		ldr	r2, [r7, #116]
 2680 02b0 BB69     		ldr	r3, [r7, #24]
 2681 02b2 9A42     		cmp	r2, r3
 2682 02b4 00D2     		bcs	.LCB2032
 2683 02b6 59E7     		b	.L83	@long jump
 2684              	.LCB2032:
 2685 02b8 00E0     		b	.L80
 2686              	.L90:
 2687              	.LBB34:
 514:Core/Src/main.c ****         }
 2688              		.loc 1 514 11
 2689 02ba C046     		nop
 2690              	.L80:
 2691              	.LBE34:
 523:Core/Src/main.c ****       }
 524:Core/Src/main.c ****       mandelbrot_sum += iteration;
 2692              		.loc 1 524 22
 2693 02bc 8421     		movs	r1, #132
 2694 02be 1020     		movs	r0, #16
 2695 02c0 0B18     		adds	r3, r1, r0
 2696 02c2 DB19     		adds	r3, r3, r7
 2697 02c4 1A68     		ldr	r2, [r3]
 2698 02c6 7B6F     		ldr	r3, [r7, #116]
 2699 02c8 D318     		adds	r3, r2, r3
 2700 02ca 0A18     		adds	r2, r1, r0
 2701 02cc D219     		adds	r2, r2, r7
 2702 02ce 1360     		str	r3, [r2]
 2703              	.LBE32:
 490:Core/Src/main.c ****     {
 2704              		.loc 1 490 37 discriminator 2
 2705 02d0 7C22     		movs	r2, #124
 2706 02d2 1318     		adds	r3, r2, r0
 2707 02d4 DB19     		adds	r3, r3, r7
 2708 02d6 1218     		adds	r2, r2, r0
 2709 02d8 D219     		adds	r2, r2, r7
 2710 02da 1288     		ldrh	r2, [r2]
 2711 02dc 0132     		adds	r2, r2, #1
 2712 02de 1A80     		strh	r2, [r3]
 2713              	.L72:
 490:Core/Src/main.c ****     {
 2714              		.loc 1 490 28 discriminator 1
 2715 02e0 7C23     		movs	r3, #124
 2716 02e2 1021     		movs	r1, #16
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 58


 2717 02e4 5B18     		adds	r3, r3, r1
 2718 02e6 DA19     		adds	r2, r3, r7
 2719 02e8 0E23     		movs	r3, #14
 2720 02ea 5B18     		adds	r3, r3, r1
 2721 02ec DB19     		adds	r3, r3, r7
 2722 02ee 1288     		ldrh	r2, [r2]
 2723 02f0 1B88     		ldrh	r3, [r3]
 2724 02f2 9A42     		cmp	r2, r3
 2725 02f4 00D2     		bcs	.LCB2079
 2726 02f6 02E7     		b	.L84	@long jump
 2727              	.LCB2079:
 2728              	.LBE31:
 2729              	.LBE30:
 486:Core/Src/main.c ****   {
 2730              		.loc 1 486 36 discriminator 2
 2731 02f8 7E22     		movs	r2, #126
 2732 02fa 5318     		adds	r3, r2, r1
 2733 02fc DB19     		adds	r3, r3, r7
 2734 02fe 5218     		adds	r2, r2, r1
 2735 0300 D219     		adds	r2, r2, r7
 2736 0302 1288     		ldrh	r2, [r2]
 2737 0304 0132     		adds	r2, r2, #1
 2738 0306 1A80     		strh	r2, [r3]
 2739              	.L71:
 486:Core/Src/main.c ****   {
 2740              		.loc 1 486 26 discriminator 1
 2741 0308 7E23     		movs	r3, #126
 2742 030a 1020     		movs	r0, #16
 2743 030c 1B18     		adds	r3, r3, r0
 2744 030e DA19     		adds	r2, r3, r7
 2745 0310 0C23     		movs	r3, #12
 2746 0312 1B18     		adds	r3, r3, r0
 2747 0314 DB19     		adds	r3, r3, r7
 2748 0316 1288     		ldrh	r2, [r2]
 2749 0318 1B88     		ldrh	r3, [r3]
 2750 031a 9A42     		cmp	r2, r3
 2751 031c 00D2     		bcs	.LCB2106
 2752 031e B8E6     		b	.L85	@long jump
 2753              	.LCB2106:
 2754              	.LBE29:
 525:Core/Src/main.c ****     }
 526:Core/Src/main.c ****   }
 527:Core/Src/main.c ****   
 528:Core/Src/main.c ****   /* Store overflow count for this scaling factor */
 529:Core/Src/main.c ****   g_fixed_overflow_count[g_current_scaling_index] = overflow_count;
 2755              		.loc 1 529 25
 2756 0320 0E4B     		ldr	r3, .L95+24
 2757 0322 1A68     		ldr	r2, [r3]
 2758              		.loc 1 529 51
 2759 0324 0E4B     		ldr	r3, .L95+28
 2760 0326 9200     		lsls	r2, r2, #2
 2761 0328 8021     		movs	r1, #128
 2762 032a 0918     		adds	r1, r1, r0
 2763 032c C919     		adds	r1, r1, r7
 2764 032e 0968     		ldr	r1, [r1]
 2765 0330 D150     		str	r1, [r2, r3]
 530:Core/Src/main.c ****   
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 59


 531:Core/Src/main.c ****   return mandelbrot_sum;
 2766              		.loc 1 531 10
 2767 0332 8423     		movs	r3, #132
 2768 0334 1B18     		adds	r3, r3, r0
 2769 0336 DB19     		adds	r3, r3, r7
 2770 0338 1B68     		ldr	r3, [r3]
 532:Core/Src/main.c **** }
 2771              		.loc 1 532 1
 2772 033a 1800     		movs	r0, r3
 2773 033c BD46     		mov	sp, r7
 2774 033e 27B0     		add	sp, sp, #156
 2775              		@ sp needed
 2776 0340 F0BD     		pop	{r4, r5, r6, r7, pc}
 2777              	.L96:
 2778 0342 C046     		.align	2
 2779              	.L95:
 2780 0344 00001040 		.word	1074790400
 2781 0348 00000C40 		.word	1074528256
 2782 034c 00000440 		.word	1074003968
 2783 0350 0000F03F 		.word	1072693248
 2784 0354 40420F00 		.word	1000000
 2785 0358 C0BDF0FF 		.word	-1000000
 2786 035c 00000000 		.word	g_current_scaling_index
 2787 0360 00000000 		.word	g_fixed_overflow_count
 2788              		.cfi_endproc
 2789              	.LFE51:
 2791              		.section	.text.Error_Handler,"ax",%progbits
 2792              		.align	1
 2793              		.global	Error_Handler
 2794              		.syntax unified
 2795              		.code	16
 2796              		.thumb_func
 2798              	Error_Handler:
 2799              	.LFB52:
 533:Core/Src/main.c **** 
 534:Core/Src/main.c **** /* USER CODE END 4 */
 535:Core/Src/main.c **** 
 536:Core/Src/main.c **** /**
 537:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 538:Core/Src/main.c ****   * @retval None
 539:Core/Src/main.c ****   */
 540:Core/Src/main.c **** void Error_Handler(void)
 541:Core/Src/main.c **** {
 2800              		.loc 1 541 1
 2801              		.cfi_startproc
 2802              		@ args = 0, pretend = 0, frame = 0
 2803              		@ frame_needed = 1, uses_anonymous_args = 0
 2804 0000 80B5     		push	{r7, lr}
 2805              	.LCFI36:
 2806              		.cfi_def_cfa_offset 8
 2807              		.cfi_offset 7, -8
 2808              		.cfi_offset 14, -4
 2809 0002 00AF     		add	r7, sp, #0
 2810              	.LCFI37:
 2811              		.cfi_def_cfa_register 7
 2812              	.LBB35:
 2813              	.LBB36:
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 60


 2814              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 61


  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 62


 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 2815              		.loc 2 142 3
 2816              		.syntax divided
 2817              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2818 0004 72B6     		cpsid i
 2819              	@ 0 "" 2
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2820              		.loc 2 143 1
 2821              		.thumb
 2822              		.syntax unified
 2823 0006 C046     		nop
 2824              	.L98:
 2825              	.LBE36:
 2826              	.LBE35:
 542:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 543:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 544:Core/Src/main.c ****   __disable_irq();
 545:Core/Src/main.c ****   while (1)
 2827              		.loc 1 545 9
 2828 0008 C046     		nop
 2829 000a FDE7     		b	.L98
 2830              		.cfi_endproc
 2831              	.LFE52:
 2833              		.text
 2834              	.Letext0:
 2835              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 2836              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 2837              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
 2838              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 63


 2839              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 2840              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 2841              		.file 9 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 2842              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 2843              		.file 11 "<built-in>"
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 64


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:23     .bss.g_total_program_cycles:00000000 g_total_program_cycles
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:20     .bss.g_total_program_cycles:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:30     .bss.g_total_program_time_ms:00000000 g_total_program_time_ms
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:27     .bss.g_total_program_time_ms:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:37     .bss.g_total_time_sum:00000000 g_total_time_sum
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:34     .bss.g_total_time_sum:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:44     .bss.g_test_counter:00000000 g_test_counter
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:41     .bss.g_test_counter:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:51     .bss.g_simple_test:00000000 g_simple_test
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:48     .bss.g_simple_test:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:54     .rodata.kNumScalingFactors:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:57     .rodata.kNumScalingFactors:00000000 kNumScalingFactors
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:60     .rodata.kScalingFactors:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:63     .rodata.kScalingFactors:00000000 kScalingFactors
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:68     .rodata:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:78     .data.kScalingFactorNames:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:81     .data.kScalingFactorNames:00000000 kScalingFactorNames
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:90     .bss.g_fixed_checksum:00000000 g_fixed_checksum
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:87     .bss.g_fixed_checksum:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:97     .bss.g_fixed_execution_time_ms:00000000 g_fixed_execution_time_ms
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:94     .bss.g_fixed_execution_time_ms:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:104    .bss.g_fixed_overflow_count:00000000 g_fixed_overflow_count
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:101    .bss.g_fixed_overflow_count:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:111    .bss.g_current_scaling_factor:00000000 g_current_scaling_factor
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:108    .bss.g_current_scaling_factor:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:118    .bss.g_current_scaling_index:00000000 g_current_scaling_index
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:115    .bss.g_current_scaling_index:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:121    .rodata.kMaxIter:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:124    .rodata.kMaxIter:00000000 kMaxIter
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:127    .rodata.kNumResolutions:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:130    .rodata.kNumResolutions:00000000 kNumResolutions
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:133    .rodata.kWidths:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:136    .rodata.kWidths:00000000 kWidths
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:143    .rodata.kHeights:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:146    .rodata.kHeights:00000000 kHeights
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:157    .bss.g_current_width:00000000 g_current_width
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:154    .bss.g_current_width:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:164    .bss.g_current_height:00000000 g_current_height
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:161    .bss.g_current_height:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:171    .bss.g_current_cycles:00000000 g_current_cycles
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:168    .bss.g_current_cycles:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:178    .bss.g_current_checksum:00000000 g_current_checksum
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:175    .bss.g_current_checksum:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:185    .bss.g_current_execution_time:00000000 g_current_execution_time
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:182    .bss.g_current_execution_time:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:192    .bss.g_current_throughput:00000000 g_current_throughput
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:189    .bss.g_current_throughput:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:199    .bss.checksum:00000000 checksum
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:196    .bss.checksum:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:206    .bss.execution_time_ms:00000000 execution_time_ms
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:203    .bss.execution_time_ms:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:213    .bss.cpu_cycles:00000000 cpu_cycles
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:210    .bss.cpu_cycles:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:220    .bss.throughput_pps:00000000 throughput_pps
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:217    .bss.throughput_pps:00000000 $d
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 65


C:\Users\einom\AppData\Local\Temp\ccemK45I.s:227    .bss.g_num_tiles_x:00000000 g_num_tiles_x
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:224    .bss.g_num_tiles_x:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:234    .bss.g_num_tiles_y:00000000 g_num_tiles_y
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:231    .bss.g_num_tiles_y:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:241    .bss.g_total_tiles:00000000 g_total_tiles
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:238    .bss.g_total_tiles:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:248    .bss.g_current_tile:00000000 g_current_tile
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:245    .bss.g_current_tile:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:273    .text.main:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:279    .text.main:00000000 main
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:875    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:990    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:1436   .text.generate_mandelbrot_checksum_tiled:00000000 generate_mandelbrot_checksum_tiled
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:1118   .text.generate_mandelbrot_checksum:00000000 generate_mandelbrot_checksum
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:2013   .text.estimate_cpu_cycles_from_ms:00000000 estimate_cpu_cycles_from_ms
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:2281   .text.generate_mandelbrot_checksum_fixed_point:00000000 generate_mandelbrot_checksum_fixed_point
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:834    .text.main:00000370 $d
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:869    .text.SystemClock_Config:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:2798   .text.Error_Handler:00000000 Error_Handler
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:985    .text.MX_GPIO_Init:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:1105   .text.MX_GPIO_Init:000000a4 $d
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:1113   .text.generate_mandelbrot_checksum:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:1423   .text.generate_mandelbrot_checksum:000001f0 $d
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:1431   .text.generate_mandelbrot_checksum_tiled:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:1970   .text.log_tiling_info:00000000 log_tiling_info
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:1953   .text.generate_mandelbrot_checksum_tiled:00000328 $d
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:1965   .text.log_tiling_info:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:2008   .text.estimate_cpu_cycles_from_ms:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:2052   .text.estimate_cpu_cycles_from_ms:00000028 $d
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:2059   .text.fixed_multiply:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:2064   .text.fixed_multiply:00000000 fixed_multiply
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:2124   .text.fixed_add:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:2129   .text.fixed_add:00000000 fixed_add
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:2169   .text.double_to_fixed:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:2174   .text.double_to_fixed:00000000 double_to_fixed
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:2221   .text.fixed_to_double:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:2226   .text.fixed_to_double:00000000 fixed_to_double
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:2276   .text.generate_mandelbrot_checksum_fixed_point:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:2780   .text.generate_mandelbrot_checksum_fixed_point:00000344 $d
C:\Users\einom\AppData\Local\Temp\ccemK45I.s:2792   .text.Error_Handler:00000000 $t

UNDEFINED SYMBOLS
__aeabi_ui2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_dadd
HAL_Init
HAL_GetTick
HAL_GPIO_WritePin
puts
printf
HAL_Delay
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_GPIO_Init
__aeabi_dsub
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccemK45I.s 			page 66


__aeabi_dcmple
__aeabi_uidiv
SystemCoreClock
__aeabi_lmul
__aeabi_ldivmod
__aeabi_d2lz
__aeabi_l2d
